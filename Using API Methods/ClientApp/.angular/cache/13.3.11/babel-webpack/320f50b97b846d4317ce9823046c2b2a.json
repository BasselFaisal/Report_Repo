{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, ViewChild, EventEmitter, Input, Output, NgModule } from '@angular/core';\nimport { Subject, throwError } from 'rxjs';\nimport { timeout, catchError } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\nimport * as i7 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\nconst _c0 = [\"element\"];\nconst _c1 = [\"button\"];\nconst _c2 = [\"resButtonEl\"];\n\nconst _c3 = function (a1, a2, a3) {\n  return {\n    lineHeight: \"0\",\n    padding: a1,\n    textAlign: a2,\n    width: a3\n  };\n};\n\nfunction ButtonComponent_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 3);\n    i0.ɵɵelement(1, \"img\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction3(11, _c3, ctx_r1.helper.val(ctx_r1.imageCellPadding, \"0 3px\"), ctx_r1.imageCellTextAlign, ctx_r1.imageCellWidth));\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"opacity\", ctx_r1.enabled ? \"1\" : \"0.5\")(\"width\", ctx_r1.imageSizesWidth, \"px\")(\"height\", ctx_r1.imageSizesHeight, \"px\")(\"margin\", ctx_r1.imageMargin);\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r1.model.img(ctx_r1.imageName), i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction ButtonComponent_td_6_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.caption2, \" \");\n  }\n}\n\nconst _c4 = function (a1, a2, a3) {\n  return {\n    whiteSpace: \"nowrap\",\n    textAlign: a1,\n    padding: a2,\n    width: a3\n  };\n};\n\nfunction ButtonComponent_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, ButtonComponent_td_6_div_2_Template, 2, 1, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction3(16, _c4, ctx_r2.captionAlign || \"left\", ctx_r2.captionPadding || (ctx_r2.arrow ? \"1px 0\" : \"1px 5px\") + (ctx_r2.imageName ? \" 0 0\" : \" 0 5px\"), ctx_r2.captionWidth));\n    i0.ɵɵstyleProp(\"max-width\", ctx_r2.captionMaxWidth)(\"line-height\", ctx_r2.captionLineHeight)(\"padding-left\", ctx_r2.captionPaddingLeft)(\"white-space\", ctx_r2.captionWhiteSpace)(\"overflow\", ctx_r2.captionOverflow)(\"text-overflow\", ctx_r2.captionTextOverflow);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.caption, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.caption2 != null);\n  }\n}\n\nconst _c5 = function (a4, a5) {\n  return {\n    lineHeight: \"0\",\n    width: \"8px\",\n    height: \"8px\",\n    verticalAlign: \"baseline\",\n    padding: a4,\n    marginTop: a5\n  };\n};\n\nfunction ButtonComponent_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 3);\n    i0.ɵɵelement(1, \"img\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction2(5, _c5, ctx_r3.caption ? \"0 5px 0 5px\" : \"0 5px 0 2px\", ctx_r3.arrowMarginTop));\n    i0.ɵɵstyleProp(\"opacity\", ctx_r3.enabled ? \"1\" : \"0.5\");\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r3.arrow == \"Up\" || ctx_r3.arrow == \"Down\" ? ctx_r3.model.img(\"Arrows.SmallArrow\" + ctx_r3.arrow + (ctx_r3.arrow == \"Down\" && ctx_r3.styleColors && ctx_r3.styleColors.isDarkStyle ? \"White.png\" : \".png\")) : ctx_r3.model.img(ctx_r3.arrow), i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction ButtonComponent_td_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 3);\n    i0.ɵɵelementStart(1, \"sti-button\", 10);\n    i0.ɵɵlistener(\"action\", function ButtonComponent_td_8_Template_sti_button_action_1_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      ctx_r7.closeButtonPressed = true;\n      return ctx_r7.closeButtonAction.emit();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"imageName\", \"CloseForm.png\")(\"imageMargin\", \"1px 0 0 -1px\")(\"margin\", \"0 2px 0 0\")(\"imageCellPadding\", \"0\")(\"width\", ctx_r4.model.options.isTouchDevice ? \"22px\" : \"17px\")(\"height\", ctx_r4.model.options.isTouchDevice ? \"22px\" : \"17px\");\n  }\n}\n\nfunction ButtonComponent_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 11, 12);\n    i0.ɵɵelementStart(2, \"sti-button\", 13);\n    i0.ɵɵlistener(\"action\", function ButtonComponent_td_9_Template_sti_button_action_2_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.resourceButtonPressed = true;\n    });\n    i0.ɵɵtext(3, \"> \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"imageName\", \"Arrows.SmallArrowDown.png\")(\"styleName\", \"stiJsViewerResourceDropDownButton\")(\"innerTableWidth\", \"100%\")(\"margin\", \"0 7px 0 3px\")(\"imageCellTextAlign\", \"center\")(\"imageSizesWidth\", 8)(\"imageSizesHeight\", 8)(\"height\", ctx_r5.model.options.isTouchDevice ? \"23px\" : \"17px\")(\"width\", ctx_r5.model.options.isTouchDevice ? \"23px\" : \"17px\");\n  }\n}\n\nconst _c6 = function (a0, a1, a2, a3, a4, a5) {\n  return {\n    height: a0,\n    boxSizing: a1,\n    margin: a2,\n    minWidth: a3,\n    width: a4,\n    display: a5\n  };\n};\n\nconst _c7 = function (a0, a1, a2) {\n  return {\n    fontFamily: a0,\n    height: a1,\n    lineHeight: a2,\n    boxSizing: \"content-box\"\n  };\n};\n\nfunction PageControlComponent_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 2);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.model.reportParams.pageNumber + 1);\n  }\n}\n\nfunction PageControlComponent_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 2);\n    i0.ɵɵelementStart(1, \"sti-text-box\", 4);\n    i0.ɵɵlistener(\"action\", function PageControlComponent_td_6_Template_sti_text_box_action_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.textBoxAction($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"color\", ctx_r1.textBoxColor)(\"opacity\", ctx_r1.enabled ? 1 : 0.5);\n    i0.ɵɵproperty(\"width\", 45)(\"enabled\", ctx_r1.enabled)(\"value\", ctx_r1.model.reportParams.pageNumber + 1)(\"border\", ctx_r1.textBoxBorder);\n  }\n}\n\nconst _c8 = [\"mainTable\"];\n\nfunction ToolbarDopComponent_td_4_sti_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"sti-button\", 7);\n    i0.ɵɵlistener(\"action\", function ToolbarDopComponent_td_4_sti_button_1_Template_sti_button_action_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const comp_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.controller.action({\n        name: comp_r2.action\n      });\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const comp_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"caption\", ctx_r3.model.options.toolbar.showButtonCaptions ? comp_r2.caption : null)(\"imageName\", comp_r2.img)(\"arrow\", !ctx_r3.model.options.isMobileDevice ? comp_r2.arrow : null)(\"menuItems\", comp_r2.menuItems)(\"actionName\", comp_r2.action)(\"tooltip\", comp_r2.tooltip)(\"enabled\", ctx_r3.toolbarService.enabled(comp_r2))(\"display\", ctx_r3.toolbarService.display(comp_r2))(\"innerTableWidth\", ctx_r3.toolbarService.getInnerTableWidth(comp_r2))(\"width\", ctx_r3.toolbarService.getButonWidth(comp_r2))(\"height\", ctx_r3.model.options.toolbar.displayMode == \"Separated\" ? ctx_r3.model.options.isMobileDevice ? \"0.5in\" : \"28px\" : null)(\"selected\", ctx_r3.toolbarService.selected(comp_r2));\n  }\n}\n\nfunction ToolbarDopComponent_td_4_sti_toolbar_separator_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-toolbar-separator\");\n  }\n}\n\nfunction ToolbarDopComponent_td_4_sti_page_control_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-page-control\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"enabled\", !(ctx_r5.model.reportParams.pagesCount <= 1 || ctx_r5.toolbarService.disableNaviButtons()))(\"count\", ctx_r5.model.reportParams.pagesCount);\n  }\n}\n\nfunction ToolbarDopComponent_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 2);\n    i0.ɵɵtemplate(1, ToolbarDopComponent_td_4_sti_button_1_Template, 1, 12, \"sti-button\", 4);\n    i0.ɵɵtemplate(2, ToolbarDopComponent_td_4_sti_toolbar_separator_2_Template, 1, 0, \"sti-toolbar-separator\", 5);\n    i0.ɵɵtemplate(3, ToolbarDopComponent_td_4_sti_page_control_3_Template, 1, 2, \"sti-page-control\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const comp_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", comp_r2.type == \"button\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", comp_r2.type == \"separator\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", comp_r2.type == \"pageControl\");\n  }\n}\n\nfunction ToolbarComponent_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵelement(1, \"sti-toolbar-dop\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"comps\", ctx_r1.toolbarService.dopComps);\n  }\n}\n\nfunction ToolbarComponent_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵelement(1, \"sti-toolbar-dop\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"comps\", ctx_r2.toolbarService.dopComps);\n  }\n}\n\nfunction DashboardsPanelComponent_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵelement(1, \"sti-dashboard-button\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const info_r8 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"info\", info_r8)(\"dbsMode\", ctx_r1.dbsMode)(\"display\", ctx_r1.dashboardsCount == 1 && ctx_r1.reportsCount == 0 ? \"none\" : null);\n  }\n}\n\nfunction DashboardsPanelComponent_td_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵelement(1, \"sti-button\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"imageName\", ctx_r2.imagesPath + \"Refresh.png\")(\"tooltip\", ctx_r2.model.loc(\"Refresh\"))(\"helpLink\", ctx_r2.helper.helpLinks[\"DashboardToolbar\"])(\"margin\", \"2px 0 2px 2px\")(\"actionName\", \"Refresh\")(\"height\", ctx_r2.model.options.toolbar.displayMode == \"Separated\" ? ctx_r2.dbsMode ? ctx_r2.model.options.isTouchDevice ? \"28px\" : \"23px\" : \"28px\" : null)(\"width\", ctx_r2.model.options.toolbar.displayMode == \"Separated\" ? ctx_r2.dbsMode ? ctx_r2.model.options.isTouchDevice ? \"28px\" : \"23px\" : \"28px\" : null)(\"innerTableWidth\", ctx_r2.model.options.toolbar.displayMode == \"Separated\" ? \"100%\" : null)(\"imageCellTextAlign\", ctx_r2.model.options.toolbar.displayMode == \"Separated\" ? \"center\" : null)(\"display\", ctx_r2.previewSettings.dashboardToolBar && ctx_r2.previewSettings.dashboardRefreshButton ? \"\" : \"none\");\n  }\n}\n\nfunction DashboardsPanelComponent_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵelement(1, \"sti-button\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"imageName\", ctx_r3.imagesPath + \"Parameters.png\")(\"tooltip\", ctx_r3.model.loc(\"Parameters\"))(\"helpLink\", ctx_r3.helper.helpLinks[\"DashboardToolbar\"])(\"margin\", \"2px 0 2px 2px\")(\"actionName\", \"Parameters\")(\"height\", ctx_r3.model.options.toolbar.displayMode == \"Separated\" ? ctx_r3.dbsMode ? ctx_r3.model.options.isTouchDevice ? \"28px\" : \"23px\" : \"28px\" : null)(\"width\", ctx_r3.model.options.toolbar.displayMode == \"Separated\" ? ctx_r3.dbsMode ? ctx_r3.model.options.isTouchDevice ? \"28px\" : \"23px\" : \"28px\" : null)(\"innerTableWidth\", ctx_r3.model.options.toolbar.displayMode == \"Separated\" ? \"100%\" : null)(\"imageCellTextAlign\", ctx_r3.model.options.toolbar.displayMode == \"Separated\" ? \"center\" : null);\n  }\n}\n\nfunction DashboardsPanelComponent_td_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵelement(1, \"sti-button\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"imageName\", ctx_r4.imagesPath + \"Open.png\")(\"tooltip\", ctx_r4.model.loc(\"Open\"))(\"helpLink\", ctx_r4.helper.helpLinks[\"DashboardToolbar\"])(\"margin\", \"2px 0 2px 2px\")(\"actionName\", \"OpenDashboard\")(\"height\", ctx_r4.model.options.toolbar.displayMode == \"Separated\" ? ctx_r4.dbsMode ? ctx_r4.model.options.isTouchDevice ? \"28px\" : \"23px\" : \"28px\" : null)(\"width\", ctx_r4.model.options.toolbar.displayMode == \"Separated\" ? ctx_r4.dbsMode ? ctx_r4.model.options.isTouchDevice ? \"28px\" : \"23px\" : \"28px\" : null)(\"innerTableWidth\", ctx_r4.model.options.toolbar.displayMode == \"Separated\" ? \"100%\" : null)(\"imageCellTextAlign\", ctx_r4.model.options.toolbar.displayMode == \"Separated\" ? \"center\" : null)(\"display\", ctx_r4.previewSettings.dashboardToolBar && ctx_r4.previewSettings.dashboardOpenButton ? \"\" : \"none\");\n  }\n}\n\nfunction DashboardsPanelComponent_td_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵelement(1, \"sti-button\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"imageName\", ctx_r5.imagesPath + \"Edit.png\")(\"tooltip\", ctx_r5.model.loc(\"Edit\"))(\"helpLink\", ctx_r5.helper.helpLinks[\"DashboardToolbar\"])(\"margin\", \"2px 0 2px 2px\")(\"actionName\", \"postDesign\")(\"height\", ctx_r5.model.options.toolbar.displayMode == \"Separated\" ? ctx_r5.dbsMode ? ctx_r5.model.options.isTouchDevice ? \"28px\" : \"23px\" : \"28px\" : null)(\"width\", ctx_r5.model.options.toolbar.displayMode == \"Separated\" ? ctx_r5.dbsMode ? ctx_r5.model.options.isTouchDevice ? \"28px\" : \"23px\" : \"28px\" : null)(\"innerTableWidth\", ctx_r5.model.options.toolbar.displayMode == \"Separated\" ? \"100%\" : null)(\"imageCellTextAlign\", ctx_r5.model.options.toolbar.displayMode == \"Separated\" ? \"center\" : null)(\"display\", ctx_r5.previewSettings.dashboardToolBar && ctx_r5.previewSettings.dashboardEditButton ? \"\" : \"none\");\n  }\n}\n\nfunction DashboardsPanelComponent_td_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵelement(1, \"sti-button\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"imageName\", ctx_r6.imagesPath + \"CloseFullScreen.png\")(\"caption\", ctx_r6.model.loc(\"Close\"))(\"tooltip\", ctx_r6.model.loc(\"FullScreen\"))(\"helpLink\", ctx_r6.helper.helpLinks[\"DashboardToolbar\"])(\"margin\", \"2px 0 2px 2px\")(\"actionName\", \"postFullScreen\")(\"height\", ctx_r6.model.options.toolbar.displayMode == \"Separated\" ? ctx_r6.dbsMode ? ctx_r6.model.options.isTouchDevice ? \"28px\" : \"23px\" : \"28px\" : null)(\"innerTableWidth\", ctx_r6.model.options.toolbar.displayMode == \"Separated\" ? \"100%\" : null)(\"imageCellTextAlign\", ctx_r6.model.options.toolbar.displayMode == \"Separated\" ? \"center\" : null)(\"display\", ctx_r6.previewSettings.dashboardToolBar && ctx_r6.previewSettings.dashboardFullScreenButton ? \"\" : \"none\");\n  }\n}\n\nfunction DashboardsPanelComponent_td_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵelement(1, \"sti-button\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"imageName\", ctx_r7.imagesPath + \"Menu.png\")(\"tooltip\", ctx_r7.model.loc(\"Save\"))(\"helpLink\", ctx_r7.helper.helpLinks[\"DashboardToolbar\"])(\"margin\", \"2px 0 2px 2px\")(\"actionName\", \"ExportDashboard\")(\"height\", ctx_r7.model.options.toolbar.displayMode == \"Separated\" ? ctx_r7.dbsMode ? ctx_r7.model.options.isTouchDevice ? \"28px\" : \"23px\" : \"28px\" : null)(\"width\", ctx_r7.model.options.toolbar.displayMode == \"Separated\" ? ctx_r7.dbsMode ? ctx_r7.model.options.isTouchDevice ? \"28px\" : \"23px\" : \"28px\" : null)(\"innerTableWidth\", ctx_r7.model.options.toolbar.displayMode == \"Separated\" ? \"100%\" : null)(\"imageCellTextAlign\", ctx_r7.model.options.toolbar.displayMode == \"Separated\" ? \"center\" : null)(\"display\", ctx_r7.previewSettings.dashboardToolBar && ctx_r7.previewSettings.dashboardMenuButton && (ctx_r7.previewSettings.dashboardShowReportSnapshots && !ctx_r7.model.options.jsMode || ctx_r7.previewSettings.dashboardShowExports) ? \"\" : \"none\");\n  }\n}\n\nfunction ReportPanelComponent_sti_page_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-page\", 3);\n  }\n\n  if (rf & 2) {\n    const page_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"pageAttributes\", page_r2);\n  }\n}\n\nconst _c9 = function (a0, a3) {\n  return {\n    fontFamily: a0,\n    fontSize: \"12px\",\n    paddingTop: \"2px\",\n    margin: a3\n  };\n};\n\nconst _c10 = [\"textBox\"];\n\nfunction FindPanelComponent_td_7_sti_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"sti-button\", 8);\n    i0.ɵɵlistener(\"action\", function FindPanelComponent_td_7_sti_button_1_Template_sti_button_action_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const item_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.action(item_r2.action);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"actionName\", item_r2.action)(\"imageName\", item_r2.img)(\"caption\", item_r2.caption)(\"margin\", item_r2.margin)(\"height\", ctx_r3.model.options.toolbar.displayMode == \"Separated\" ? \"28px\" : \"\")(\"selected\", ctx_r3.selected(item_r2));\n  }\n}\n\nfunction FindPanelComponent_td_7_sti_text_box_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"sti-text-box\", 9, 10);\n    i0.ɵɵlistener(\"action\", function FindPanelComponent_td_7_sti_text_box_2_Template_sti_text_box_action_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.textBoxAction($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"width\", 170)(\"margin\", item_r2.margin)(\"focusOnCreate\", true)(\"value\", ctx_r4.findService.text);\n  }\n}\n\nfunction FindPanelComponent_td_7_sti_text_block_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-text-block\", 11);\n  }\n\n  if (rf & 2) {\n    const item_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"margin\", item_r2.margin)(\"text\", item_r2.caption);\n  }\n}\n\nfunction FindPanelComponent_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 3);\n    i0.ɵɵtemplate(1, FindPanelComponent_td_7_sti_button_1_Template, 1, 6, \"sti-button\", 5);\n    i0.ɵɵtemplate(2, FindPanelComponent_td_7_sti_text_box_2_Template, 2, 4, \"sti-text-box\", 6);\n    i0.ɵɵtemplate(3, FindPanelComponent_td_7_sti_text_block_3_Template, 1, 2, \"sti-text-block\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r2.type == \"button\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r2.type == \"textBox\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r2.type == \"textBlock\");\n  }\n}\n\nfunction DrillDownPanelComponent_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 5);\n    i0.ɵɵelementStart(1, \"sti-button\", 6);\n    i0.ɵɵlistener(\"action\", function DrillDownPanelComponent_td_10_Template_sti_button_action_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const button_r2 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.action(button_r2);\n    })(\"closeButtonAction\", function DrillDownPanelComponent_td_10_Template_sti_button_closeButtonAction_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const button_r2 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.close(button_r2);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const button_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"display\", button_r2.visible ? \"inline-block\" : \"none\")(\"margin\", \"2px 1px 2px 2px\")(\"caption\", button_r2.caption)(\"height\", ctx_r1.model.options.toolbar.displayMode == \"Separated\" ? \"28px\" : null)(\"display\", \"inline-block\")(\"selected\", button_r2.selected)(\"closeButton\", i_r3 > 0);\n  }\n}\n\nfunction ResourcesPanelComponent_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 4);\n    i0.ɵɵelementStart(1, \"sti-button\", 6);\n    i0.ɵɵlistener(\"action\", function ResourcesPanelComponent_td_7_Template_sti_button_action_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const resource_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.action(resource_r2);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const resource_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"caption\", resource_r2.name)(\"caption2\", ctx_r1.helper.getHumanFileSize(resource_r2.size, 1))(\"imageName\", ctx_r1.getResourceImage(resource_r2.type))(\"styleName\", \"stiJsViewerFormButton\")(\"height\", \"auto\")(\"margin\", \"3px 0 3px 3px\")(\"innerTableWidth\", \"100%\")(\"minWidth\", \"80px\")(\"captionAlign\", \"left\")(\"captionPaddingLeft\", \"3px\")(\"captionMaxWidth\", \"150px\")(\"captionLineHeight\", \"14px\")(\"captionWhiteSpace\", \"nowrap\")(\"captionOverflow\", \"hidden\")(\"captionTextOverflow\", \"ellipsis\")(\"imageCellWidth\", \"1px\")(\"imageCellPadding\", \"4px 8px 4px 4px\")(\"menuItems\", ctx_r1.getMenuItems(resource_r2))(\"resourceButton\", true)(\"imageSizesWidth\", 32)(\"imageSizesHeight\", 32)(\"actionName\", ctx_r1.getActionName(resource_r2));\n  }\n}\n\nfunction NavigatePanelComponent_td_5_sti_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"sti-button\", 9);\n    i0.ɵɵlistener(\"action\", function NavigatePanelComponent_td_5_sti_button_1_Template_sti_button_action_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const comp_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.controller.action({\n        name: comp_r2.action\n      });\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const comp_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"caption\", comp_r2.caption)(\"imageName\", comp_r2.img)(\"arrow\", comp_r2.arrow)(\"menuItems\", comp_r2.menuItems)(\"actionName\", comp_r2.action)(\"tooltip\", comp_r2.tooltip)(\"styleName\", \"stiJsViewerNavigateButton\")(\"height\", ctx_r3.model.options.isMobileDevice ? \"0.5in\" : \"35px\")(\"width\", ctx_r3.model.options.isMobileDevice ? \"0.4in\" : \"35px\")(\"boxSizing\", \"border-box\")(\"arrowMarginTop\", \"1px\")(\"enabled\", ctx_r3.enabled(comp_r2))(\"imageCellTextAlign\", \"center\")(\"innerTableWidth\", \"100%\")(\"navagationPanelTooltip\", true)(\"margin\", comp_r2.action == \"FirstPage\" ? \"0 1px 0 3px\" : comp_r2.action == \"Zoom\" ? \"0 3px 0 1px\" : \"0px 1px 0 1px\")(\"selected\", ctx_r3.selected(comp_r2));\n  }\n}\n\nfunction NavigatePanelComponent_td_5_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"height\", ctx_r4.model.options.isMobileDevice ? \"0.5in\" : \"35px\")(\"margin\", \"0px 1px 0 1px\");\n  }\n}\n\nfunction NavigatePanelComponent_td_5_sti_page_control_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-page-control\", 11);\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"enabled\", !(ctx_r5.model.reportParams.pagesCount <= 1 || ctx_r5.disableNaviButtons()))(\"count\", ctx_r5.model.reportParams.pagesCount)(\"margin\", \"0px 1px 0 1px\")(\"textBoxBorder\", \"0px\");\n  }\n}\n\nfunction NavigatePanelComponent_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 3);\n    i0.ɵɵtemplate(1, NavigatePanelComponent_td_5_sti_button_1_Template, 1, 17, \"sti-button\", 6);\n    i0.ɵɵtemplate(2, NavigatePanelComponent_td_5_div_2_Template, 1, 4, \"div\", 7);\n    i0.ɵɵtemplate(3, NavigatePanelComponent_td_5_sti_page_control_3_Template, 1, 4, \"sti-page-control\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const comp_r2 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"width\", comp_r2.type == \"space\" ? \"100%\" : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", comp_r2.type == \"button\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", comp_r2.type == \"separator\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", comp_r2.type == \"pageControl\");\n  }\n}\n\nfunction BaseFormComponent_td_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 12);\n    i0.ɵɵelementStart(1, \"sti-button\", 13);\n    i0.ɵɵlistener(\"action\", function BaseFormComponent_td_8_Template_sti_button_action_1_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.helper.showHelpWindow(ctx_r4.helpUrl);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"imageMargin\", \"0 2px 0 2px\")(\"display\", \"inline-block\");\n  }\n}\n\nfunction BaseFormComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 14);\n  }\n}\n\nfunction BaseFormComponent_div_14_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 20);\n    i0.ɵɵelementStart(1, \"sti-form-button\", 18);\n    i0.ɵɵlistener(\"action\", function BaseFormComponent_div_14_td_6_Template_sti_form_button_action_1_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return ctx_r7.formService.closeForm(ctx_r7.name);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"caption\", ctx_r6.model.loc(\"ButtonCancel\"));\n  }\n}\n\nfunction BaseFormComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵelementStart(1, \"table\", 16);\n    i0.ɵɵelementStart(2, \"tbody\");\n    i0.ɵɵelementStart(3, \"tr\", 4);\n    i0.ɵɵelementStart(4, \"td\", 17);\n    i0.ɵɵelementStart(5, \"sti-form-button\", 18);\n    i0.ɵɵlistener(\"action\", function BaseFormComponent_div_14_Template_sti_form_button_action_5_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.action.emit();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, BaseFormComponent_div_14_td_6_Template, 2, 1, \"td\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"caption\", ctx_r3.model.loc(\"ButtonOk\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.showCancel);\n  }\n}\n\nconst _c11 = [\"*\"];\n\nfunction RadioButtonComponent_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.caption, \" \");\n  }\n}\n\nfunction CheckboxComponent_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"padding\", !ctx_r0.model.options.isTouchDevice ? \"1px 0 0 4px\" : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.captionText, \" \");\n  }\n}\n\nconst _c12 = [\"input\"];\nconst _c13 = [\"baseForm\"];\nconst _c14 = [\"saveReportMdc\"];\nconst _c15 = [\"pagesRangeAll\"];\nconst _c16 = [\"pageRangeCurrentPage\"];\n\nfunction ExportFormComponent_tr_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 4);\n    i0.ɵɵelementStart(1, \"td\", 5);\n    i0.ɵɵelementStart(2, \"sti-group-panel\", 6);\n    i0.ɵɵlistener(\"action\", function ExportFormComponent_tr_4_Template_sti_group_panel_action_2_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.exportFormSettings.groups.savingReportGroup.opened = $event;\n    });\n    i0.ɵɵelementStart(3, \"table\", 2);\n    i0.ɵɵelementStart(4, \"tbody\");\n    i0.ɵɵelementStart(5, \"tr\", 4);\n    i0.ɵɵelementStart(6, \"td\", 5);\n    i0.ɵɵelementStart(7, \"sti-radio-button\", 7, 8);\n    i0.ɵɵlistener(\"action\", function ExportFormComponent_tr_4_Template_sti_radio_button_action_7_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.exportService.exportSettings.Format = \"Mdc\";\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"tr\", 4);\n    i0.ɵɵelementStart(10, \"td\", 5);\n    i0.ɵɵelementStart(11, \"sti-radio-button\", 9);\n    i0.ɵɵlistener(\"action\", function ExportFormComponent_tr_4_Template_sti_radio_button_action_11_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.exportService.exportSettings.Format = \"Mdz\";\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"tr\", 4);\n    i0.ɵɵelementStart(13, \"td\", 5);\n    i0.ɵɵelementStart(14, \"sti-radio-button\", 9);\n    i0.ɵɵlistener(\"action\", function ExportFormComponent_tr_4_Template_sti_radio_button_action_14_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.exportService.exportSettings.Format = \"Mdx\";\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"tr\", 4);\n    i0.ɵɵelementStart(16, \"td\", 10);\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"td\");\n    i0.ɵɵelementStart(19, \"sti-text-box\", 11);\n    i0.ɵɵlistener(\"onchange\", function ExportFormComponent_tr_4_Template_sti_text_box_onchange_19_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.exportService.exportSettings.Password = $event.value;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(1);\n\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"caption\", ctx_r1.model.loc(\"SavingReport\"))(\"width\", 390)(\"margin\", \"4px\")(\"innerPadding\", \"4px 0 4px 0\")(\"opened\", ctx_r1.exportFormSettings.groups.savingReportGroup.opened);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"name\", _r0.name + \"SaveReportMdc\")(\"groupName\", _r0.name + \"SavingReportGroup\")(\"caption\", ctx_r1.model.loc(\"SaveReportMdc\"))(\"margin\", \"6px 8px 3px 8px\")(\"checked\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"name\", _r0.name + \"SaveReportMdz\")(\"groupName\", _r0.name + \"SavingReportGroup\")(\"caption\", ctx_r1.model.loc(\"SaveReportMdz\"))(\"margin\", \"3px 8px 3px 8px\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"name\", _r0.name + \"SaveReportMdx\")(\"groupName\", _r0.name + \"SavingReportGroup\")(\"caption\", ctx_r1.model.loc(\"SaveReportMdx\"))(\"margin\", \"3px 8px 0px 8px\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"title\", ctx_r1.model.loc(\"PasswordSaveReportTooltip\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.model.loc(\"PasswordSaveReport\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"width\", 140)(\"tooltip\", ctx_r1.model.loc(\"PasswordSaveReportTooltip\"))(\"margin\", \"4px 8px 0px 8px\")(\"type\", ctx_r1.getTextBoxType(\"SaveReportPassword\"))(\"enabled\", ctx_r1.exportService.exportSettings.Format == \"Mdx\");\n  }\n}\n\nfunction ExportFormComponent_tr_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 4);\n    i0.ɵɵelementStart(1, \"td\", 5);\n    i0.ɵɵelementStart(2, \"sti-group-panel\", 6);\n    i0.ɵɵlistener(\"action\", function ExportFormComponent_tr_5_Template_sti_group_panel_action_2_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.exportFormSettings.groups.pageRangeGroup.opened = $event;\n    });\n    i0.ɵɵelementStart(3, \"table\", 2);\n    i0.ɵɵelementStart(4, \"tbody\");\n    i0.ɵɵelementStart(5, \"tr\", 4);\n    i0.ɵɵelementStart(6, \"td\", 5);\n    i0.ɵɵelementStart(7, \"sti-radio-button\", 12, 13);\n    i0.ɵɵlistener(\"action\", function ExportFormComponent_tr_5_Template_sti_radio_button_action_7_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.exportService.exportSettings.PageRange = \"All\";\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"tr\", 4);\n    i0.ɵɵelementStart(10, \"td\", 5);\n    i0.ɵɵelementStart(11, \"sti-radio-button\", 14, 15);\n    i0.ɵɵlistener(\"action\", function ExportFormComponent_tr_5_Template_sti_radio_button_action_11_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.exportService.exportSettings.PageRange = (ctx_r18.model.reportParams.pageNumber + 1).toString();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"tr\", 4);\n    i0.ɵɵelementStart(14, \"td\", 5);\n    i0.ɵɵelementStart(15, \"sti-radio-button\", 16);\n    i0.ɵɵlistener(\"action\", function ExportFormComponent_tr_5_Template_sti_radio_button_action_15_listener() {\n      i0.ɵɵrestoreView(_r16);\n\n      const _r14 = i0.ɵɵreference(17);\n\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.exportService.exportSettings.PageRange = _r14.element.nativeElement.value;\n    });\n    i0.ɵɵelementStart(16, \"sti-text-box\", 17, 18);\n    i0.ɵɵlistener(\"onchange\", function ExportFormComponent_tr_5_Template_sti_text_box_onchange_16_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.exportService.exportSettings.PageRange = $event.value;\n    })(\"onblur\", function ExportFormComponent_tr_5_Template_sti_text_box_onblur_16_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.exportService.exportSettings.PageRange = $event.value;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(1);\n\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"caption\", ctx_r2.model.loc(\"PagesRange\"))(\"width\", 390)(\"margin\", \"4px\")(\"innerPadding\", \"4px 0 4px 0\")(\"opened\", ctx_r2.exportFormSettings.groups.pageRangeGroup.opened);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"name\", _r0.name + \"PagesRangeAll\")(\"groupName\", _r0.name + \"PageRangeGroup\")(\"caption\", ctx_r2.model.loc(\"PagesRangeAll\"))(\"tooltip\", ctx_r2.model.loc(\"PagesRangeAllTooltip\"))(\"margin\", \"6px 8px 6px 8px\")(\"checked\", !ctx_r2.exportFormSettings.groups.pageRangeGroup.pageRangeAllIsDisabled)(\"enabled\", !ctx_r2.exportFormSettings.groups.pageRangeGroup.pageRangeAllIsDisabled);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"name\", _r0.name + \"PageRangeCurrentPage\")(\"groupName\", _r0.name + \"PageRangeGroup\")(\"caption\", ctx_r2.model.loc(\"PagesRangeCurrentPage\"))(\"tooltip\", ctx_r2.model.loc(\"PagesRangeCurrentPageTooltip\"))(\"margin\", \"0px 8px 4px 8px\")(\"checked\", ctx_r2.exportFormSettings.groups.pageRangeGroup.pageRangeAllIsDisabled);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"name\", _r0.name + \"PageRangePages\")(\"groupName\", _r0.name + \"PageRangeGroup\")(\"caption\", ctx_r2.model.loc(\"PagesRangePages\"))(\"tooltip\", ctx_r2.model.loc(\"PagesRangePagesTooltip\"))(\"margin\", \"0px 8px 0px 8px\")(\"paddingLeftLastCell\", \"60px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"width\", 130)(\"tooltip\", ctx_r2.model.loc(\"PagesRangePagesTooltip\"))(\"margin\", \"0px 0px 0px 30px\");\n  }\n}\n\nfunction ExportFormComponent_tr_6_tr_5_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const comp_r23 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵattribute(\"title\", comp_r23.tooltip);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", comp_r23.label, \" \");\n  }\n}\n\nfunction ExportFormComponent_tr_6_tr_5_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵelementStart(1, \"sti-check-box\", 28);\n    i0.ɵɵlistener(\"action\", function ExportFormComponent_tr_6_tr_5_td_2_Template_sti_check_box_action_1_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const comp_r23 = i0.ɵɵnextContext().$implicit;\n      const ctx_r32 = i0.ɵɵnextContext(2);\n      return ctx_r32.componentAction(comp_r23, $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const comp_r23 = i0.ɵɵnextContext().$implicit;\n    const ctx_r25 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"tooltip\", comp_r23.tooltip)(\"margin\", comp_r23.margin)(\"captionText\", comp_r23.caption)(\"isChecked\", ctx_r25.getValue(comp_r23));\n  }\n}\n\nfunction ExportFormComponent_tr_6_tr_5_sti_drop_down_list_for_export_form_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r38 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"sti-drop-down-list-for-export-form\", 29);\n    i0.ɵɵlistener(\"action\", function ExportFormComponent_tr_6_tr_5_sti_drop_down_list_for_export_form_4_Template_sti_drop_down_list_for_export_form_action_0_listener($event) {\n      i0.ɵɵrestoreView(_r38);\n      const comp_r23 = i0.ɵɵnextContext().$implicit;\n      const ctx_r36 = i0.ɵɵnextContext(2);\n      return ctx_r36.componentAction(comp_r23, $event.key);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const comp_r23 = i0.ɵɵnextContext().$implicit;\n    const ctx_r26 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"width\", comp_r23.width)(\"items\", comp_r23.items)(\"key\", ctx_r26.getValue(comp_r23, \"dropDownList\"))(\"margin\", comp_r23.margin)(\"verticalAlign\", comp_r23.name == \"ImageQuality\" || comp_r23.name == \"ImageResolution\" ? \"middle\" : null)(\"styleDisplay\", comp_r23.name == \"ImageQuality\" || comp_r23.name == \"ImageResolution\" ? \"inline-block\" : null)(\"enabled\", !ctx_r26.disabledComponents[comp_r23.name]);\n  }\n}\n\nfunction ExportFormComponent_tr_6_tr_5_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const comp_r23 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵstyleProp(\"display\", \"inline-block\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", comp_r23.name == \"ImageQuality\" ? \"%\" : \"dpi\", \" \");\n  }\n}\n\nfunction ExportFormComponent_tr_6_tr_5_sti_text_box_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r43 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"sti-text-box\", 30);\n    i0.ɵɵlistener(\"onchange\", function ExportFormComponent_tr_6_tr_5_sti_text_box_6_Template_sti_text_box_onchange_0_listener($event) {\n      i0.ɵɵrestoreView(_r43);\n      const comp_r23 = i0.ɵɵnextContext().$implicit;\n      const ctx_r41 = i0.ɵɵnextContext(2);\n      return ctx_r41.componentAction(comp_r23, $event.value);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const comp_r23 = i0.ɵɵnextContext().$implicit;\n    const ctx_r28 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"width\", comp_r23.width)(\"tooltip\", comp_r23.tooltip)(\"margin\", comp_r23.margin)(\"type\", ctx_r28.getTextBoxType(comp_r23.name))(\"enabled\", !comp_r23.disabled)(\"value\", ctx_r28.getValue(comp_r23))(\"enabled\", !ctx_r28.disabledComponents[comp_r23.name]);\n  }\n}\n\nfunction ExportFormComponent_tr_6_tr_5_sti_check_box_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r47 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"sti-check-box\", 31);\n    i0.ɵɵlistener(\"action\", function ExportFormComponent_tr_6_tr_5_sti_check_box_7_Template_sti_check_box_action_0_listener($event) {\n      i0.ɵɵrestoreView(_r47);\n      const comp_r23 = i0.ɵɵnextContext().$implicit;\n      const ctx_r45 = i0.ɵɵnextContext(2);\n      return ctx_r45.componentAction(comp_r23, $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const comp_r23 = i0.ɵɵnextContext().$implicit;\n    const ctx_r29 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"tooltip\", comp_r23.tooltip)(\"margin\", comp_r23.margin)(\"captionText\", comp_r23.caption)(\"isChecked\", ctx_r29.getValue(comp_r23))(\"isEnabled\", !ctx_r29.disabledComponents[comp_r23.name]);\n  }\n}\n\nfunction ExportFormComponent_tr_6_tr_5_td_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r52 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵelementStart(1, \"sti-button\", 32, 33);\n    i0.ɵɵlistener(\"action\", function ExportFormComponent_tr_6_tr_5_td_8_Template_sti_button_action_1_listener() {\n      i0.ɵɵrestoreView(_r52);\n\n      const _r49 = i0.ɵɵreference(2);\n\n      const comp_r23 = i0.ɵɵnextContext().$implicit;\n      const ctx_r50 = i0.ɵɵnextContext(2);\n      return ctx_r50.showMenu(comp_r23, _r49);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const comp_r23 = i0.ɵɵnextContext().$implicit;\n    const ctx_r30 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"width\", comp_r23.width)(\"arrow\", \"Down\")(\"minWidth\", \"163px\")(\"captionAlign\", \"center\")(\"display\", \"inline-block\")(\"styleName\", \"stiJsViewerFormButton\")(\"margin\", \"2px 8px\")(\"innerTableWidth\", \"100%\")(\"captionWidth\", \"100%\")(\"caption\", comp_r23.name == \"DocumentSecurityButton\" ? comp_r23.caption : \"\")(\"enabled\", !ctx_r30.disabledComponents[comp_r23.name + \"Button\"]);\n  }\n}\n\nfunction ExportFormComponent_tr_6_tr_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, ExportFormComponent_tr_6_tr_5_td_1_Template, 2, 2, \"td\", 21);\n    i0.ɵɵtemplate(2, ExportFormComponent_tr_6_tr_5_td_2_Template, 2, 4, \"td\", 22);\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtemplate(4, ExportFormComponent_tr_6_tr_5_sti_drop_down_list_for_export_form_4_Template, 1, 7, \"sti-drop-down-list-for-export-form\", 23);\n    i0.ɵɵtemplate(5, ExportFormComponent_tr_6_tr_5_div_5_Template, 2, 3, \"div\", 24);\n    i0.ɵɵtemplate(6, ExportFormComponent_tr_6_tr_5_sti_text_box_6_Template, 1, 7, \"sti-text-box\", 25);\n    i0.ɵɵtemplate(7, ExportFormComponent_tr_6_tr_5_sti_check_box_7_Template, 1, 5, \"sti-check-box\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, ExportFormComponent_tr_6_tr_5_td_8_Template, 3, 11, \"td\", 22);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const comp_r23 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", comp_r23.label != null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", comp_r23.name == \"UseDigitalSignature\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colSpan\", comp_r23.label != null || comp_r23.name == \"DocumentSecurityButton\" || comp_r23.name == \"UseDigitalSignature\" ? 1 : 2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", comp_r23.type == \"DropDownListForExportForm\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", comp_r23.name == \"ImageQuality\" || comp_r23.name == \"ImageResolution\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", comp_r23.type == \"TextBox\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", comp_r23.type == \"CheckBox\" || comp_r23.type == \"DigitalSignature\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", comp_r23.name == \"DocumentSecurityButton\");\n  }\n}\n\nfunction ExportFormComponent_tr_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r55 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 4);\n    i0.ɵɵelementStart(1, \"td\", 5);\n    i0.ɵɵelementStart(2, \"sti-group-panel\", 19);\n    i0.ɵɵlistener(\"action\", function ExportFormComponent_tr_6_Template_sti_group_panel_action_2_listener($event) {\n      i0.ɵɵrestoreView(_r55);\n      const ctx_r54 = i0.ɵɵnextContext();\n      return ctx_r54.exportFormSettings.groups.settingsGroup.opened = $event;\n    });\n    i0.ɵɵelementStart(3, \"table\", 2);\n    i0.ɵɵelementStart(4, \"tbody\");\n    i0.ɵɵtemplate(5, ExportFormComponent_tr_6_tr_5_Template, 9, 8, \"tr\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"caption\", ctx_r3.model.loc(\"SettingsGroup\"))(\"opened\", ctx_r3.exportFormSettings.groups.settingsGroup.opened)(\"width\", 390)(\"margin\", \"4px\")(\"innerPadding\", \"4px 0 4px 0\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.exportFormSettings.components);\n  }\n}\n\nfunction ExportFormComponent_tr_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r57 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 4);\n    i0.ɵɵelementStart(1, \"td\", 5);\n    i0.ɵɵelementStart(2, \"sti-check-box\", 34);\n    i0.ɵɵlistener(\"action\", function ExportFormComponent_tr_7_Template_sti_check_box_action_2_listener($event) {\n      i0.ɵɵrestoreView(_r57);\n      const ctx_r56 = i0.ɵɵnextContext();\n      return ctx_r56.exportService.exportSettings.OpenAfterExport = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"captionText\", ctx_r4.model.loc(\"OpenAfterExport\"))(\"tooltip\", ctx_r4.model.loc(\"OpenAfterExportTooltip\"))(\"margin\", \"4px 8px 4px 8px\")(\"isChecked\", ctx_r4.exportService.exportSettings.OpenAfterExport);\n  }\n}\n\nfunction SendEmailFormComponent_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵelementStart(1, \"sti-text-box\", 7);\n    i0.ɵɵlistener(\"onchange\", function SendEmailFormComponent_td_7_Template_sti_text_box_onchange_1_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.exportService.exportSettings.Email = $event.value;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"margin\", ctx_r1.model.options.isMobileDevice ? \"4px 4px 12px 4px\" : \"4px\")(\"value\", ctx_r1.exportService.exportSettings.Email)(\"width\", ctx_r1.model.options.isMobileDevice ? 200 : 280);\n  }\n}\n\nfunction SendEmailFormComponent_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 3);\n    i0.ɵɵelementStart(1, \"td\", 3);\n    i0.ɵɵelementStart(2, \"sti-text-box\", 7);\n    i0.ɵɵlistener(\"onchange\", function SendEmailFormComponent_tr_8_Template_sti_text_box_onchange_2_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.exportService.exportSettings.Email = $event.value;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"margin\", ctx_r2.model.options.isMobileDevice ? \"4px 4px 12px 4px\" : \"4px\")(\"value\", ctx_r2.exportService.exportSettings.Email)(\"width\", ctx_r2.model.options.isMobileDevice ? 200 : 280);\n  }\n}\n\nfunction SendEmailFormComponent_td_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵelementStart(1, \"sti-text-box\", 7);\n    i0.ɵɵlistener(\"onchange\", function SendEmailFormComponent_td_12_Template_sti_text_box_onchange_1_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.exportService.exportSettings.Subject = $event.value;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"margin\", ctx_r3.model.options.isMobileDevice ? \"4px 4px 12px 4px\" : \"4px\")(\"value\", ctx_r3.exportService.exportSettings.Subject)(\"width\", ctx_r3.model.options.isMobileDevice ? 200 : 280);\n  }\n}\n\nfunction SendEmailFormComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 3);\n    i0.ɵɵelementStart(1, \"td\", 3);\n    i0.ɵɵelementStart(2, \"sti-text-box\", 7);\n    i0.ɵɵlistener(\"onchange\", function SendEmailFormComponent_tr_13_Template_sti_text_box_onchange_2_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.exportService.exportSettings.Subject = $event.value;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"margin\", ctx_r4.model.options.isMobileDevice ? \"4px 4px 12px 4px\" : \"4px\")(\"value\", ctx_r4.exportService.exportSettings.Subject)(\"width\", ctx_r4.model.options.isMobileDevice ? 200 : 280);\n  }\n}\n\nfunction SendEmailFormComponent_td_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵelementStart(1, \"sti-text-area\", 8);\n    i0.ɵɵlistener(\"onchange\", function SendEmailFormComponent_td_17_Template_sti_text_area_onchange_1_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.exportService.exportSettings.Message = $event.value;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"margin\", ctx_r5.model.options.isMobileDevice ? \"4px 4px 12px 4px\" : \"4px\")(\"value\", ctx_r5.exportService.exportSettings.Message)(\"height\", 70)(\"width\", ctx_r5.model.options.isMobileDevice ? 200 : 280);\n  }\n}\n\nfunction SendEmailFormComponent_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 3);\n    i0.ɵɵelementStart(1, \"td\", 3);\n    i0.ɵɵelementStart(2, \"sti-text-area\", 8);\n    i0.ɵɵlistener(\"onchange\", function SendEmailFormComponent_tr_18_Template_sti_text_area_onchange_2_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.exportService.exportSettings.Message = $event.value;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"margin\", ctx_r6.model.options.isMobileDevice ? \"4px 4px 12px 4px\" : \"4px\")(\"value\", ctx_r6.exportService.exportSettings.Message)(\"height\", 70)(\"width\", ctx_r6.model.options.isMobileDevice ? 200 : 280);\n  }\n}\n\nfunction SendEmailFormComponent_td_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵelementStart(1, \"div\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r7.exportService.exportSettings.Attachment, \" \");\n  }\n}\n\nfunction SendEmailFormComponent_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 3);\n    i0.ɵɵelementStart(1, \"td\", 3);\n    i0.ɵɵelementStart(2, \"div\", 9);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r8.exportService.exportSettings.Attachment, \" \");\n  }\n}\n\nfunction NotificationFormComponent_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 3);\n    i0.ɵɵelementStart(1, \"td\", 4);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r0.model.img(ctx_r0.model.notificationFormOptions == null ? null : ctx_r0.model.notificationFormOptions.image), i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction NotificationFormComponent_tr_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 3);\n    i0.ɵɵelementStart(1, \"td\", 3);\n    i0.ɵɵelementStart(2, \"div\", 7);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.model.notificationFormOptions == null ? null : ctx_r1.model.notificationFormOptions.message, \" \");\n  }\n}\n\nfunction NotificationFormComponent_tr_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 3);\n    i0.ɵɵelementStart(1, \"td\", 3);\n    i0.ɵɵelementStart(2, \"div\", 8);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.model.notificationFormOptions == null ? null : ctx_r2.model.notificationFormOptions.description, \" \");\n  }\n}\n\nfunction TooltipComponent_tr_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 3);\n    i0.ɵɵelementStart(1, \"td\", 3);\n    i0.ɵɵelementStart(2, \"sti-button\", 6);\n    i0.ɵɵlistener(\"action\", function TooltipComponent_tr_7_Template_sti_button_action_2_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.action();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"caption\", ctx_r1.model.loc(\"TellMeMore\"))(\"imageName\", \"HelpIcon.png\")(\"margin\", \"4px 8px 4px 8px\")(\"styleName\", \"stiJsViewerHyperlinkButton\");\n  }\n}\n\nfunction MenuItemComponent_div_0_td_3_img_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 9);\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(3);\n    i0.ɵɵstyleProp(\"height\", ctx_r5.item.imageSize === \"Big\" ? 32 : 16, \"px\")(\"width\", ctx_r5.item.imageSize === \"Big\" ? 32 : 16, \"px\");\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r5.model.img(ctx_r5.item.img), i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction MenuItemComponent_div_0_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 7);\n    i0.ɵɵtemplate(1, MenuItemComponent_div_0_td_3_img_1_Template, 1, 5, \"img\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.item.img != \"\");\n  }\n}\n\nfunction MenuItemComponent_div_0_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"text-align\", ctx_r3.model.options.appearance.rightToLeft ? \"right\" : \"left\")(\"padding\", ctx_r3.item.imageSize == \"None\" ? \"0 20px 0 30px\" : \"0 20px 0 7px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.item.caption, \" \");\n  }\n}\n\nfunction MenuItemComponent_div_0_td_5_img_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 9);\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(3);\n    i0.ɵɵstyleProp(\"height\", ctx_r6.item.imageSize === \"Big\" ? 32 : 16, \"px\")(\"width\", ctx_r6.item.imageSize === \"Big\" ? 32 : 16, \"px\");\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r6.model.img(ctx_r6.item.img), i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction MenuItemComponent_div_0_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 7);\n    i0.ɵɵtemplate(1, MenuItemComponent_div_0_td_5_img_1_Template, 1, 5, \"img\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.item.img != \"\");\n  }\n}\n\nfunction MenuItemComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵlistener(\"mouseover\", function MenuItemComponent_div_0_Template_div_mouseover_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.mouseover();\n    })(\"mouseout\", function MenuItemComponent_div_0_Template_div_mouseout_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.mouseout();\n    });\n    i0.ɵɵelementStart(1, \"table\", 3);\n    i0.ɵɵelementStart(2, \"tr\", 4);\n    i0.ɵɵtemplate(3, MenuItemComponent_div_0_td_3_Template, 2, 1, \"td\", 5);\n    i0.ɵɵtemplate(4, MenuItemComponent_div_0_td_4_Template, 2, 5, \"td\", 6);\n    i0.ɵɵtemplate(5, MenuItemComponent_div_0_td_5_Template, 2, 1, \"td\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r0.className);\n    i0.ɵɵstyleProp(\"height\", ctx_r0.height);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.item.img != null && !ctx_r0.model.options.appearance.rightToLeft);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.item.caption != null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.item.img != null && ctx_r0.model.options.appearance.rightToLeft);\n  }\n}\n\nfunction MenuItemComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 11);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"margin\", ctx_r1.item.imageSize == \"Big\" ? \"1px 2px 1px 2px\" : \"\");\n  }\n}\n\nconst _c17 = [\"dateTimeButton\"];\n\nfunction ParameterMenuEditListComponent_sti_parameter_menu_item_8_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 9, 11);\n    i0.ɵɵelementStart(2, \"sti-parameter-button\", 12);\n    i0.ɵɵlistener(\"action\", function ParameterMenuEditListComponent_sti_parameter_menu_item_8_td_6_Template_sti_parameter_button_action_2_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const item_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.dateTimeButtonAction(item_r1);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"buttonType\", \"DateTimeButton\");\n  }\n}\n\nfunction ParameterMenuEditListComponent_sti_parameter_menu_item_8_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 9);\n    i0.ɵɵelementStart(1, \"sti-parameter-button\", 12);\n    i0.ɵɵlistener(\"action\", function ParameterMenuEditListComponent_sti_parameter_menu_item_8_td_7_Template_sti_parameter_button_action_1_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const item_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.guidButtonAction(item_r1);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"buttonType\", \"GuidButton\");\n  }\n}\n\nfunction ParameterMenuEditListComponent_sti_parameter_menu_item_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"sti-parameter-menu-item\", 4);\n    i0.ɵɵelementStart(1, \"table\", 5);\n    i0.ɵɵelementStart(2, \"tbody\");\n    i0.ɵɵelementStart(3, \"tr\", 1);\n    i0.ɵɵelementStart(4, \"td\", 6);\n    i0.ɵɵelement(5, \"sti-parameter-text-box\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, ParameterMenuEditListComponent_sti_parameter_menu_item_8_td_6_Template, 3, 1, \"td\", 8);\n    i0.ɵɵtemplate(7, ParameterMenuEditListComponent_sti_parameter_menu_item_8_td_7_Template, 2, 1, \"td\", 8);\n    i0.ɵɵelementStart(8, \"td\", 9);\n    i0.ɵɵelementStart(9, \"sti-parameter-button\", 10);\n    i0.ɵɵlistener(\"action\", function ParameterMenuEditListComponent_sti_parameter_menu_item_8_Template_sti_parameter_button_action_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.removeButtonAction(item_r1);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"active\", false);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"item\", item_r1)(\"isMenu\", true)(\"variable\", ctx_r0.menu.params)(\"focusOnCreate\", item_r1.focusOnCreate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.menu.params.type == \"DateTime\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.menu.params.type == \"Guid\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"buttonType\", \"RemoveItemButton\")(\"params\", item_r1);\n  }\n}\n\nfunction ParameterMenuNotEditListComponent_sti_parameter_find_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-parameter-find\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"variable\", ctx_r0.menu.params);\n  }\n}\n\nfunction ParameterMenuNotEditListComponent_sti_parameter_menu_separator_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-parameter-menu-separator\");\n  }\n}\n\nfunction ParameterMenuNotEditListComponent_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 4);\n    i0.ɵɵelementStart(1, \"td\", 4);\n    i0.ɵɵelementStart(2, \"sti-parameter-menu-item\");\n    i0.ɵɵelementStart(3, \"table\", 9);\n    i0.ɵɵelementStart(4, \"tbody\");\n    i0.ɵɵelementStart(5, \"tr\", 4);\n    i0.ɵɵelementStart(6, \"td\", 4);\n    i0.ɵɵelementStart(7, \"sti-parameter-checkbox\", 10);\n    i0.ɵɵlistener(\"action\", function ParameterMenuNotEditListComponent_tr_11_Template_sti_parameter_checkbox_action_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const item_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.check(item_r3);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"display\", item_r3.visible ? \"\" : \"none\");\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"params\", item_r3)(\"captionText\", ctx_r2.helper.val(item_r3.value, ctx_r2.helper.getStringKey(item_r3.key, ctx_r2.menu.params)))(\"margin\", \"0 5px 0 0\")(\"width\", \"100%\")(\"imageBlockParentWidth\", \"1px\")(\"isMenuParameter\", true);\n  }\n}\n\nfunction ParameterMenuForValueComponent_sti_parameter_find_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-parameter-find\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"variable\", ctx_r0.menu.params);\n  }\n}\n\nfunction ParameterMenuForValueComponent_sti_parameter_menu_separator_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-parameter-menu-separator\");\n  }\n}\n\nfunction ParameterMenuForValueComponent_tr_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 6);\n    i0.ɵɵelementStart(1, \"td\", 6);\n    i0.ɵɵelementStart(2, \"sti-parameter-menu-item\");\n    i0.ɵɵelementStart(3, \"table\", 7);\n    i0.ɵɵelementStart(4, \"tbody\");\n    i0.ɵɵelementStart(5, \"tr\", 6);\n    i0.ɵɵelementStart(6, \"td\", 6);\n    i0.ɵɵelementStart(7, \"sti-parameter-menu-item\", 8);\n    i0.ɵɵlistener(\"action\", function ParameterMenuForValueComponent_tr_5_Template_sti_parameter_menu_item_action_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const item_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.action(item_r3);\n    });\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"display\", item_r3.visible ? \"\" : \"none\");\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.getValue(item_r3), \" \");\n  }\n}\n\nfunction ParameterMenuForRangeComponent_sti_parameter_find_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-parameter-find\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"variable\", ctx_r0.menu.params);\n  }\n}\n\nfunction ParameterMenuForRangeComponent_sti_parameter_menu_separator_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-parameter-menu-separator\");\n  }\n}\n\nfunction ParameterMenuForRangeComponent_tr_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 6);\n    i0.ɵɵelementStart(1, \"td\", 6);\n    i0.ɵɵelementStart(2, \"sti-parameter-menu-item\");\n    i0.ɵɵelementStart(3, \"table\", 7);\n    i0.ɵɵelementStart(4, \"tbody\");\n    i0.ɵɵelementStart(5, \"tr\", 6);\n    i0.ɵɵelementStart(6, \"td\", 6);\n    i0.ɵɵelementStart(7, \"sti-parameter-menu-item\", 8);\n    i0.ɵɵlistener(\"action\", function ParameterMenuForRangeComponent_tr_5_Template_sti_parameter_menu_item_action_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const item_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.action(item_r3);\n    });\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"display\", item_r3.visible ? \"\" : \"none\");\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.getValue(item_r3), \" \");\n  }\n}\n\nfunction DatePickerMenuComponent_td_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r5 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"font-size\", ctx_r0.countLetters == 2 ? \"11px\" : \"\")(\"color\", ctx_r0.getShortDayColor(i_r5));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.getShortDayName(i_r5), \" \");\n  }\n}\n\nfunction DatePickerMenuComponent_tr_16_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 1);\n    i0.ɵɵelementStart(1, \"sti-date-picker-day-button\", 11);\n    i0.ɵɵtext(2, \" [closeOnAction]=\\\"closeOnAction\\\" \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const col_r8 = ctx.$implicit;\n    const row_r6 = i0.ɵɵnextContext().$implicit;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"col\", col_r8)(\"row\", row_r6)(\"date\", ctx_r7.key)(\"selected\", ctx_r7.getButtonSelected(col_r8, row_r6))(\"caption\", ctx_r7.getButtonCaption(col_r8, row_r6))(\"enabled\", ctx_r7.getButtonCaption(col_r8, row_r6) != \"\");\n  }\n}\n\nfunction DatePickerMenuComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 1);\n    i0.ɵɵtemplate(1, DatePickerMenuComponent_tr_16_td_1_Template, 3, 6, \"td\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.cols);\n  }\n}\n\nfunction DatePickerMenuComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 5);\n  }\n}\n\nfunction DatePickerMenuComponent_table_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"table\", 12);\n    i0.ɵɵelementStart(1, \"tbody\");\n    i0.ɵɵelementStart(2, \"tr\", 1);\n    i0.ɵɵelementStart(3, \"td\", 13);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 14);\n    i0.ɵɵelementStart(6, \"sti-text-box\", 15);\n    i0.ɵɵlistener(\"action\", function DatePickerMenuComponent_table_18_Template_sti_text_box_action_6_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.timeAction($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.model.loc(\"Time\") + \":\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"width\", 90)(\"margin\", \"1px 2px 2px 2px\")(\"value\", ctx_r3.getTime());\n  }\n}\n\nfunction DoubleDatePickerMenuComponent_ng_container_11_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 11);\n  }\n}\n\nfunction DoubleDatePickerMenuComponent_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"sti-button\", 9);\n    i0.ɵɵlistener(\"action\", function DoubleDatePickerMenuComponent_ng_container_11_Template_sti_button_action_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.getValuesByDateRangeName(item_r1);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, DoubleDatePickerMenuComponent_ng_container_11_div_2_Template, 1, 0, \"div\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"caption\", ctx_r0.model.loc(item_r1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r1 == \"Yesterday\" || item_r1 == \"PreviousWeek\" || item_r1 == \"PreviousMonth\" || item_r1 == \"PreviousQuarter\" || item_r1 == \"PreviousYear\" || item_r1 == \"FourthQuarter\" || item_r1 == \"Last30Days\");\n  }\n}\n\nconst _c18 = [\"AllowPrintDocument\"];\nconst _c19 = [\"AllowModifyContents\"];\nconst _c20 = [\"AllowCopyTextAndGraphics\"];\nconst _c21 = [\"AllowAddOrModifyTextAnnotations\"];\n\nfunction DigitalSignatureMenuComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementStart(1, \"table\", 2);\n    i0.ɵɵelementStart(2, \"tbody\");\n    i0.ɵɵelementStart(3, \"tr\", 3);\n    i0.ɵɵelement(4, \"td\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction VerticalMenuItemComponent_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 8);\n    i0.ɵɵelement(1, \"img\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"width\", ctx_r0.imageSizesWidth ? ctx_r0.imageSizesWidth : ctx_r0.isSmallItem ? 16 : 32, \"px\")(\"height\", ctx_r0.imageSizesHeight ? ctx_r0.imageSizesHeight : ctx_r0.isSmallItem ? 16 : 32, \"px\")(\"visible\", ctx_r0.model.img(ctx_r0.item == null ? null : ctx_r0.item.imageName) === \"\" ? \"none\" : \"\");\n    i0.ɵɵproperty(\"src\", ctx_r0.model.img(ctx_r0.item == null ? null : ctx_r0.item.imageName), i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction VerticalMenuItemComponent_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"font-size\", ctx_r1.model.options.isMobileDevice ? \"0.16in\" : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.item == null ? null : ctx_r1.item.caption, \" \");\n  }\n}\n\nfunction VerticalMenuItemComponent_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\", 11);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"font-size\", ctx_r2.model.options.isMobileDevice ? \"0.16in\" : \"\");\n    i0.ɵɵproperty(\"innerHtml\", ctx_r2.item == null ? null : ctx_r2.item.caption, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction VerticalMenuItemComponent_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\", 12);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"font-size\", ctx_r3.model.options.isMobileDevice ? \"0.16in\" : \"\");\n    i0.ɵɵproperty(\"innerHtml\", ctx_r3.item == null ? null : ctx_r3.item.caption, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction VerticalMenuItemComponent_td_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"font-size\", ctx_r4.model.options.isMobileDevice ? \"0.16in\" : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.item == null ? null : ctx_r4.item.caption, \" \");\n  }\n}\n\nfunction VerticalMenuItemComponent_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 8);\n    i0.ɵɵelement(1, \"img\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"width\", ctx_r5.imageSizesWidth ? ctx_r5.imageSizesWidth : ctx_r5.isSmallItem ? 16 : 32, \"px\")(\"height\", ctx_r5.imageSizesHeight ? ctx_r5.imageSizesHeight : ctx_r5.isSmallItem ? 16 : 32, \"px\")(\"visible\", ctx_r5.model.img(ctx_r5.item == null ? null : ctx_r5.item.imageName) === \"\" ? \"none\" : \"\");\n    i0.ɵɵproperty(\"src\", ctx_r5.model.img(ctx_r5.item == null ? null : ctx_r5.item.imageName), i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction VerticalMenuComponent_sti_vertical_menu_item_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"sti-vertical-menu-item\", 1);\n    i0.ɵɵlistener(\"action\", function VerticalMenuComponent_sti_vertical_menu_item_0_Template_sti_vertical_menu_item_action_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.action(item_r1);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"item\", item_r1)(\"styleName\", ctx_r0.menu.itemStyleName);\n  }\n}\n\nconst _c22 = [\"menuEl\"];\nconst _c23 = [\"innerContent\"];\n\nfunction MenuComponent_ng_container_4_sti_menu_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"sti-menu-item\", 6);\n    i0.ɵɵlistener(\"click\", function MenuComponent_ng_container_4_sti_menu_item_1_Template_sti_menu_item_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const item_r13 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return ctx_r14.menuClick(item_r13);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r13 = ctx.$implicit;\n    i0.ɵɵproperty(\"item\", item_r13);\n  }\n}\n\nfunction MenuComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MenuComponent_ng_container_4_sti_menu_item_1_Template, 1, 1, \"sti-menu-item\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.menu.items);\n  }\n}\n\nfunction MenuComponent_sti_parameter_menu_edit_list_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-parameter-menu-edit-list\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"menu\", ctx_r3.menu);\n  }\n}\n\nfunction MenuComponent_sti_parameter_menu_not_edit_list_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-parameter-menu-not-edit-list\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"menu\", ctx_r4.menu);\n  }\n}\n\nfunction MenuComponent_sti_parameter_menu_for_value_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-parameter-menu-for-value\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"menu\", ctx_r5.menu);\n  }\n}\n\nfunction MenuComponent_sti_parameter_menu_for_range_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-parameter-menu-for-range\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"menu\", ctx_r6.menu);\n  }\n}\n\nfunction MenuComponent_sti_date_picker_menu_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-date-picker-menu\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"menu\", ctx_r7.menu);\n  }\n}\n\nfunction MenuComponent_sti_double_date_picker_menu_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-double-date-picker-menu\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"menu\", ctx_r8.menu);\n  }\n}\n\nfunction MenuComponent_sti_document_security_menu_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-document-security-menu\");\n  }\n}\n\nfunction MenuComponent_sti_digital_signature_menu_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-digital-signature-menu\");\n  }\n}\n\nfunction MenuComponent_sti_vertical_menu_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-vertical-menu\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"menu\", ctx_r11.menu);\n  }\n}\n\nconst _c24 = function (a1) {\n  return {\n    overflowX: \"hidden\",\n    overflowY: a1\n  };\n};\n\nconst _c25 = [\"bookmarksPanel\"];\n\nfunction BookmarksPanelComponent_ng_container_10_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelement(1, \"img\", 9);\n    i0.ɵɵelement(2, \"img\", 9);\n    i0.ɵɵelement(3, \"img\", 4);\n    i0.ɵɵelementStart(4, \"a\", 8);\n    i0.ɵɵlistener(\"click\", function BookmarksPanelComponent_ng_container_10_div_8_Template_a_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const subNode_r6 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return ctx_r8.postAction(subNode_r6);\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const subNode_r6 = ctx.$implicit;\n    const k_r7 = ctx.index;\n    const ctx_r10 = i0.ɵɵnextContext();\n    const i_r4 = ctx_r10.index;\n    const node_r3 = ctx_r10.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", i_r4 != ctx_r5.model.nodes.length - 1 ? ctx_r5.model.imagesForBookmark[\"line\"] : ctx_r5.model.imagesForBookmark[\"empty\"], i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", k_r7 == node_r3.nodes.length - 1 ? ctx_r5.model.imagesForBookmark[\"joinBottom\"] : ctx_r5.model.imagesForBookmark[\"join\"], i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r5.model.imagesForBookmark[\"node\"], i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(subNode_r6.selected ? \"nodeSel\" : \"node\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(subNode_r6.name);\n  }\n}\n\nfunction BookmarksPanelComponent_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 3);\n    i0.ɵɵelementStart(2, \"a\", 8);\n    i0.ɵɵlistener(\"click\", function BookmarksPanelComponent_ng_container_10_Template_a_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const node_r3 = restoredCtx.$implicit;\n      return node_r3.open = !node_r3.open;\n    });\n    i0.ɵɵelement(3, \"img\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"img\", 4);\n    i0.ɵɵelementStart(5, \"a\", 8);\n    i0.ɵɵlistener(\"click\", function BookmarksPanelComponent_ng_container_10_Template_a_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const node_r3 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.postAction(node_r3);\n    });\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 10);\n    i0.ɵɵtemplate(8, BookmarksPanelComponent_ng_container_10_div_8_Template, 6, 6, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const node_r3 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"src\", ctx_r2.getImg1(node_r3, i_r4), i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", (node_r3.nodes == null ? null : node_r3.nodes.length) == 0 ? ctx_r2.model.imagesForBookmark[\"node\"] : node_r3.open ? ctx_r2.model.imagesForBookmark[\"folderOpen\"] : ctx_r2.model.imagesForBookmark[\"folder\"], i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(node_r3.selected ? \"nodeSel\" : \"node\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(node_r3.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"display\", node_r3.open ? \"block\" : \"none\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", node_r3.nodes);\n  }\n}\n\nconst _c26 = function (a0, a1) {\n  return {\n    fontFamily: a0,\n    fontColor: a1\n  };\n};\n\nconst _c27 = [\"firstDateTimeButton\"];\nconst _c28 = [\"doubleDateTimeButton\"];\nconst _c29 = [\"rangeFrom\"];\n\nfunction ParameterComponent_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 6);\n    i0.ɵɵelementStart(1, \"sti-parameter-checkbox\", 7);\n    i0.ɵɵlistener(\"action\", function ParameterComponent_td_5_Template_sti_parameter_checkbox_action_1_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.params.value = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"height\", ctx_r2.model.options.parameterRowHeight, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"params\", ctx_r2.params)(\"isEnabled\", ctx_r2.params.allowUserValues && !ctx_r2.params.isNull);\n  }\n}\n\nfunction ParameterComponent_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"height\", ctx_r3.model.options.parameterRowHeight, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.model.loc(\"RangeFrom\"), \" \");\n  }\n}\n\nfunction ParameterComponent_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 6);\n    i0.ɵɵelement(1, \"sti-parameter-text-box\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"height\", ctx_r4.model.options.parameterRowHeight, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"variable\", ctx_r4.params)(\"readOnly\", ctx_r4.getReadOnlyCheckbox())(\"value\", ctx_r4.getFirstTextBoxValue());\n  }\n}\n\nfunction ParameterComponent_td_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 6, 9);\n    i0.ɵɵelementStart(2, \"sti-parameter-button\", 10);\n    i0.ɵɵlistener(\"action\", function ParameterComponent_td_8_Template_sti_parameter_button_action_2_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.firstDateTimeAction($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"height\", ctx_r5.model.options.parameterRowHeight, \"px\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"buttonType\", \"DateTimeButton\")(\"params\", ctx_r5.params);\n  }\n}\n\nfunction ParameterComponent_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 6);\n    i0.ɵɵelementStart(1, \"sti-parameter-button\", 10);\n    i0.ɵɵlistener(\"action\", function ParameterComponent_td_9_Template_sti_parameter_button_action_1_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.firstGuidAction();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"height\", ctx_r6.model.options.parameterRowHeight, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"buttonType\", \"GuidButton\")(\"params\", ctx_r6.params);\n  }\n}\n\nfunction ParameterComponent_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"height\", ctx_r7.model.options.parameterRowHeight, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r7.model.loc(\"RangeTo\"), \" \");\n  }\n}\n\nfunction ParameterComponent_td_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 6);\n    i0.ɵɵelement(1, \"sti-parameter-text-box\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"height\", ctx_r8.model.options.parameterRowHeight, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"variable\", ctx_r8.params)(\"readOnly\", !ctx_r8.params.allowUserValues)(\"value\", ctx_r8.helper.getStringKey(ctx_r8.params.keyTo, ctx_r8.params))(\"secondTextBox\", true);\n  }\n}\n\nfunction ParameterComponent_td_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 6, 12);\n    i0.ɵɵelementStart(2, \"sti-parameter-button\", 10);\n    i0.ɵɵlistener(\"action\", function ParameterComponent_td_12_Template_sti_parameter_button_action_2_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return ctx_r23.doubleDateTimeAction($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"height\", ctx_r9.model.options.parameterRowHeight, \"px\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"buttonType\", \"DateTimeButton\")(\"params\", ctx_r9.params);\n  }\n}\n\nfunction ParameterComponent_td_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 6);\n    i0.ɵɵelementStart(1, \"sti-parameter-button\", 10);\n    i0.ɵɵlistener(\"action\", function ParameterComponent_td_13_Template_sti_parameter_button_action_1_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return ctx_r25.params.keyTo = ctx_r25.helper.newGuid();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"height\", ctx_r10.model.options.parameterRowHeight, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"buttonType\", \"GuidButton\")(\"params\", ctx_r10.params);\n  }\n}\n\nfunction ParameterComponent_td_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 6);\n    i0.ɵɵelementStart(1, \"sti-parameter-button\", 10);\n    i0.ɵɵlistener(\"action\", function ParameterComponent_td_14_Template_sti_parameter_button_action_1_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return ctx_r27.dropDownButtonAction($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"height\", ctx_r11.model.options.parameterRowHeight, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"buttonType\", \"DropDownButton\")(\"params\", ctx_r11.params);\n  }\n}\n\nfunction ParameterComponent_td_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 6);\n    i0.ɵɵelementStart(1, \"sti-parameter-checkbox\", 13);\n    i0.ɵɵlistener(\"action\", function ParameterComponent_td_15_Template_sti_parameter_checkbox_action_1_listener($event) {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return ctx_r29.nullableAction($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"height\", ctx_r12.model.options.parameterRowHeight, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"params\", ctx_r12.params)(\"isEnabled\", ctx_r12.params.allowUserValues)(\"nullable\", true);\n  }\n}\n\nfunction ParameterComponent_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"height\", ctx_r13.model.options.parameterRowHeight, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r13.model.loc(\"Null\"), \" \");\n  }\n}\n\nfunction ParameterComponent_tr_17_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r31 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"height\", ctx_r31.model.options.parameterRowHeight, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r31.model.loc(\"RangeTo\"), \" \");\n  }\n}\n\nfunction ParameterComponent_tr_17_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 6);\n    i0.ɵɵelement(1, \"sti-parameter-text-box\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r32 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"height\", ctx_r32.model.options.parameterRowHeight, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"variable\", ctx_r32.params)(\"readOnly\", !ctx_r32.params.allowUserValues)(\"value\", ctx_r32.helper.getStringKey(ctx_r32.params.keyTo, ctx_r32.params))(\"secondTextBox\", true);\n  }\n}\n\nfunction ParameterComponent_tr_17_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r40 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 6, 12);\n    i0.ɵɵelementStart(2, \"sti-parameter-button\", 10);\n    i0.ɵɵlistener(\"action\", function ParameterComponent_tr_17_td_3_Template_sti_parameter_button_action_2_listener($event) {\n      i0.ɵɵrestoreView(_r40);\n      const ctx_r39 = i0.ɵɵnextContext(2);\n      return ctx_r39.doubleDateTimeAction($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r33 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"height\", ctx_r33.model.options.parameterRowHeight, \"px\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"buttonType\", \"DateTimeButton\")(\"params\", ctx_r33.params);\n  }\n}\n\nfunction ParameterComponent_tr_17_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 6);\n    i0.ɵɵelementStart(1, \"sti-parameter-button\", 10);\n    i0.ɵɵlistener(\"action\", function ParameterComponent_tr_17_td_4_Template_sti_parameter_button_action_1_listener() {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r41 = i0.ɵɵnextContext(2);\n      return ctx_r41.params.keyTo = ctx_r41.helper.newGuid();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r34 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"height\", ctx_r34.model.options.parameterRowHeight, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"buttonType\", \"GuidButton\")(\"params\", ctx_r34.params);\n  }\n}\n\nfunction ParameterComponent_tr_17_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r44 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 6);\n    i0.ɵɵelementStart(1, \"sti-parameter-button\", 10);\n    i0.ɵɵlistener(\"action\", function ParameterComponent_tr_17_td_5_Template_sti_parameter_button_action_1_listener($event) {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r43 = i0.ɵɵnextContext(2);\n      return ctx_r43.dropDownButtonAction($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r35 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"height\", ctx_r35.model.options.parameterRowHeight, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"buttonType\", \"DropDownButton\")(\"params\", ctx_r35.params);\n  }\n}\n\nfunction ParameterComponent_tr_17_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r46 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 6);\n    i0.ɵɵelementStart(1, \"sti-parameter-checkbox\", 13);\n    i0.ɵɵlistener(\"action\", function ParameterComponent_tr_17_td_6_Template_sti_parameter_checkbox_action_1_listener($event) {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r45 = i0.ɵɵnextContext(2);\n      return ctx_r45.nullableAction($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r36 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"height\", ctx_r36.model.options.parameterRowHeight, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"params\", ctx_r36.params)(\"isEnabled\", ctx_r36.params.allowUserValues)(\"nullable\", true);\n  }\n}\n\nfunction ParameterComponent_tr_17_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r37 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"height\", ctx_r37.model.options.parameterRowHeight, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r37.model.loc(\"Null\"), \" \");\n  }\n}\n\nfunction ParameterComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, ParameterComponent_tr_17_td_1_Template, 2, 3, \"td\", 3);\n    i0.ɵɵtemplate(2, ParameterComponent_tr_17_td_2_Template, 2, 6, \"td\", 3);\n    i0.ɵɵtemplate(3, ParameterComponent_tr_17_td_3_Template, 3, 4, \"td\", 3);\n    i0.ɵɵtemplate(4, ParameterComponent_tr_17_td_4_Template, 2, 4, \"td\", 3);\n    i0.ɵɵtemplate(5, ParameterComponent_tr_17_td_5_Template, 2, 4, \"td\", 3);\n    i0.ɵɵtemplate(6, ParameterComponent_tr_17_td_6_Template, 2, 5, \"td\", 3);\n    i0.ɵɵtemplate(7, ParameterComponent_tr_17_td_7_Template, 2, 3, \"td\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.params.basicType == \"Range\" && ctx_r14.model.options.appearance.parametersPanelPosition === \"Top\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.params.basicType == \"Range\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.params.basicType == \"Range\" && ctx_r14.params.type == \"DateTime\" && ctx_r14.params.allowUserValues);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.params.basicType == \"Range\" && ctx_r14.params.type == \"Guid\" && ctx_r14.params.allowUserValues);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.params.items != null || ctx_r14.params.basicType == \"List\" && ctx_r14.params.allowUserValues);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.params.basicType == \"NullableValue\" && ctx_r14.params.allowUserValues);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.params.basicType == \"NullableValue\" && ctx_r14.params.allowUserValues);\n  }\n}\n\nfunction InteractionsPanelComponent_table_4_tr_2_ng_container_1_ng_container_1_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 13);\n    i0.ɵɵelementStart(1, \"tbody\");\n    i0.ɵɵelementStart(2, \"tr\", 8);\n    i0.ɵɵelementStart(3, \"td\", 14);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 15);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"tr\", 8);\n    i0.ɵɵelementStart(8, \"td\", 15);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const indexColumn_r9 = i0.ɵɵnextContext(2).index;\n    const indexRow_r6 = i0.ɵɵnextContext().index;\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r11.getCaption(indexRow_r6, indexColumn_r9, false), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r11.model.loc(\"RangeFrom\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r11.model.loc(\"RangeTo\"), \" \");\n  }\n}\n\nfunction InteractionsPanelComponent_table_4_tr_2_ng_container_1_ng_container_1_sti_parameter_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-parameter\", 16);\n  }\n\n  if (rf & 2) {\n    const indexColumn_r9 = i0.ɵɵnextContext(2).index;\n    const indexRow_r6 = i0.ɵɵnextContext().index;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"params\", ctx_r12.model.interactions.paramsVariables[ctx_r12.index(indexRow_r6, indexColumn_r9)]);\n  }\n}\n\nfunction InteractionsPanelComponent_table_4_tr_2_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵtemplate(3, InteractionsPanelComponent_table_4_tr_2_ng_container_1_ng_container_1_table_3_Template, 10, 3, \"table\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtemplate(5, InteractionsPanelComponent_table_4_tr_2_ng_container_1_ng_container_1_sti_parameter_5_Template, 1, 1, \"sti-parameter\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const indexColumn_r9 = i0.ɵɵnextContext().index;\n    const indexRow_r6 = i0.ɵɵnextContext().index;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"padding\", \"0 10px 0 \" + (indexColumn_r9 > 0 ? \"30px\" : \"0\"))(\"white-space\", \"nowrap\")(\"vertical-align\", ctx_r10.getNameAlign(indexRow_r6, indexColumn_r9))(\"padding-top\", ctx_r10.getNamePadding(indexRow_r6, indexColumn_r9));\n    i0.ɵɵattribute(\"title\", ctx_r10.getTitle(indexRow_r6, indexColumn_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.getCaption(indexRow_r6, indexColumn_r9), \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r10.ifLeftRange(indexRow_r6, indexColumn_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"padding\", \"0px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r10.index(indexRow_r6, indexColumn_r9) != ctx_r10.length());\n  }\n}\n\nfunction InteractionsPanelComponent_table_4_tr_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, InteractionsPanelComponent_table_4_tr_2_ng_container_1_ng_container_1_Template, 6, 14, \"ng-container\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const indexColumn_r9 = ctx.index;\n    const indexRow_r6 = i0.ɵɵnextContext().index;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.index(indexRow_r6, indexColumn_r9) < ctx_r7.length());\n  }\n}\n\nfunction InteractionsPanelComponent_table_4_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, InteractionsPanelComponent_table_4_tr_2_ng_container_1_Template, 2, 1, \"ng-container\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.model.interactions.countColumns);\n  }\n}\n\nfunction InteractionsPanelComponent_table_4_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\");\n  }\n}\n\nfunction InteractionsPanelComponent_table_4_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\");\n  }\n}\n\nfunction InteractionsPanelComponent_table_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"table\", 4);\n    i0.ɵɵelementStart(1, \"tbody\");\n    i0.ɵɵtemplate(2, InteractionsPanelComponent_table_4_tr_2_Template, 2, 1, \"tr\", 5);\n    i0.ɵɵelementStart(3, \"tr\");\n    i0.ɵɵelement(4, \"td\");\n    i0.ɵɵtemplate(5, InteractionsPanelComponent_table_4_td_5_Template, 1, 0, \"td\", 6);\n    i0.ɵɵtemplate(6, InteractionsPanelComponent_table_4_td_6_Template, 1, 0, \"td\", 6);\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵelementStart(8, \"table\", 7);\n    i0.ɵɵelementStart(9, \"tr\", 8);\n    i0.ɵɵelementStart(10, \"td\", 8);\n    i0.ɵɵelementStart(11, \"sti-form-button\", 9);\n    i0.ɵɵlistener(\"action\", function InteractionsPanelComponent_table_4_Template_sti_form_button_action_11_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.controller.action({\n        name: \"Reset\"\n      });\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\", 10);\n    i0.ɵɵelementStart(13, \"sti-form-button\", 9);\n    i0.ɵɵlistener(\"action\", function InteractionsPanelComponent_table_4_Template_sti_form_button_action_13_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return ctx_r22.controller.action({\n        name: \"Submit\"\n      });\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.model.interactions.countInColumn);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.model.interactions.countColumns.length > 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.model.interactions.countColumns.length > 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"padding\", \"0px\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"caption\", ctx_r1.model.loc(\"Reset\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"caption\", ctx_r1.model.loc(\"Submit\"));\n  }\n}\n\nfunction OpenDialogComponent_input_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 1, 2);\n    i0.ɵɵlistener(\"change\", function OpenDialogComponent_input_0_Template_input_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onchange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"accept\", ctx_r0.model.openDialogFileMask);\n  }\n}\n\nconst _c30 = [\"viewer\"];\n\nfunction StimulsoftViewerComponent_sti_center_text_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-center-text\");\n  }\n}\n\nfunction StimulsoftViewerComponent_sti_toolbar_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-toolbar\");\n  }\n}\n\nfunction StimulsoftViewerComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n\n  if (rf & 2) {\n    const i_r22 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"z-index\", i_r22 * 10)(\"display\", (ctx_r3.formService.form == null ? null : ctx_r3.formService.form.level) == i_r22 ? \"\" : \"none\");\n  }\n}\n\nfunction StimulsoftViewerComponent_sti_about_panel_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-about-panel\");\n  }\n}\n\nfunction StimulsoftViewerComponent_sti_dashboards_panel_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-dashboards-panel\");\n  }\n}\n\nfunction StimulsoftViewerComponent_sti_report_panel_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-report-panel\");\n  }\n}\n\nfunction StimulsoftViewerComponent_sti_progress_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-progress\");\n  }\n}\n\nfunction StimulsoftViewerComponent_sti_find_panel_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-find-panel\");\n  }\n}\n\nfunction StimulsoftViewerComponent_sti_drill_down_panel_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-drill-down-panel\");\n  }\n}\n\nfunction StimulsoftViewerComponent_sti_resources_panel_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-resources-panel\");\n  }\n}\n\nfunction StimulsoftViewerComponent_sti_navigate_panel_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-navigate-panel\");\n  }\n}\n\nfunction StimulsoftViewerComponent_sti_export_form_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-export-form\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"exportFormSettings\", ctx_r12.exportService.exportFormSettings);\n  }\n}\n\nfunction StimulsoftViewerComponent_sti_send_email_form_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-send-email-form\");\n  }\n}\n\nfunction StimulsoftViewerComponent_sti_password_form_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-password-form\");\n  }\n}\n\nfunction StimulsoftViewerComponent_sti_error_message_form_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-error-message-form\");\n  }\n}\n\nfunction StimulsoftViewerComponent_sti_notification_form_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-notification-form\");\n  }\n}\n\nfunction StimulsoftViewerComponent_sti_tooltip_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-tooltip\");\n  }\n}\n\nfunction StimulsoftViewerComponent_sti_menu_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-menu\", 9);\n  }\n\n  if (rf & 2) {\n    const menu_r23 = ctx.$implicit;\n    i0.ɵɵproperty(\"menu\", menu_r23);\n  }\n}\n\nfunction StimulsoftViewerComponent_sti_bookmarks_panel_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-bookmarks-panel\");\n  }\n}\n\nfunction StimulsoftViewerComponent_sti_interactions_panel_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-interactions-panel\");\n  }\n}\n\nfunction StimulsoftViewerComponent_sti_open_dialog_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sti-open-dialog\", 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r21 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"fileMask\", ctx_r21.model.openDialogFileMask);\n  }\n}\n\nconst _c31 = function () {\n  return [1, 2, 3, 4, 5];\n};\n\nclass ComponentDescription {\n  constructor(type, caption, img, action, tooltip, arrow, menuItems, margin, selected) {\n    this.type = type;\n    this.caption = caption;\n    this.img = img;\n    this.action = action;\n    this.tooltip = tooltip;\n    this.arrow = arrow;\n    this.menuItems = menuItems;\n    this.margin = margin;\n    this.selected = selected;\n    this.selected = false;\n  }\n\n}\n\nclass ViewerEvent {\n  constructor(name, value, bookmarkPage, bookmarkAnchor, componentGuid) {\n    this.name = name;\n    this.value = value;\n    this.bookmarkPage = bookmarkPage;\n    this.bookmarkAnchor = bookmarkAnchor;\n    this.componentGuid = componentGuid;\n  }\n\n}\n\nclass ControlClass {\n  constructor() {\n    this.toolbar = new ControlProps();\n    this.reportPanel = new ControlProps();\n    this.drillDownPanel = new ControlProps();\n    this.findPanel = new ControlProps();\n    this.resourcesPanel = new ControlProps();\n    this.bookmarksPanel = new ControlProps();\n    this.navigatePanel = new ControlProps();\n    this.parametersPanel = new ControlProps();\n    this.dashboardsPanel = new ControlProps();\n    this.viewer = new ControlProps();\n    this.tooltip = new ControlProps();\n    this.aboutPanel = new ControlProps();\n  }\n\n  get head() {\n    return document.getElementsByTagName('head')[0];\n  }\n\n}\n\nclass ControlProps {\n  constructor(pageService, el) {\n    this.pageService = pageService;\n    this.el = el;\n    this._visible = false;\n    this.subject = new Subject();\n    this.enabled = true;\n    this.layout = new Rectangle();\n  }\n\n  get offsetHeight() {\n    var _a;\n\n    return ((_a = this.el) === null || _a === void 0 ? void 0 : _a.nativeElement.offsetHeight) || 0;\n  }\n\n  get offsetWidth() {\n    var _a;\n\n    return ((_a = this.el) === null || _a === void 0 ? void 0 : _a.nativeElement.offsetWidth) || 0;\n  }\n\n  set visible(value) {\n    var _a;\n\n    this._visible = value;\n    this.subject.next(value);\n    (_a = this.pageService) === null || _a === void 0 ? void 0 : _a.calculateLayout();\n  }\n\n  get visible() {\n    return this._visible;\n  }\n\n  getVisibility() {\n    return this.subject.asObservable();\n  }\n\n  get exists() {\n    return this.el != null;\n  }\n\n}\n\nclass Rectangle {\n  constructor(width = 0, height = 0, left = 0, bottom = 0, right = 0) {\n    this.width = width;\n    this.height = height;\n    this.left = left;\n    this.bottom = bottom;\n    this.right = right;\n    this._top = 0;\n  }\n\n  set top(value) {\n    this._top = value;\n  }\n\n  get top() {\n    return this._top;\n  }\n\n}\n\nclass BookmarkNode {\n  constructor(name, url, page, compunentGuid, nodes, open, selected) {\n    this.name = name;\n    this.url = url;\n    this.page = page;\n    this.compunentGuid = compunentGuid;\n    this.nodes = nodes;\n    this.open = open;\n    this.selected = selected;\n  }\n\n}\n\nclass InteractionParams {\n  constructor(action, drillDownParameters, drillDownGuid, dashboardDrillDownGuid, variables, sortingParameters, collapsingParameters, isBindingVariable) {\n    this.action = action;\n    this.drillDownParameters = drillDownParameters;\n    this.drillDownGuid = drillDownGuid;\n    this.dashboardDrillDownGuid = dashboardDrillDownGuid;\n    this.variables = variables;\n    this.sortingParameters = sortingParameters;\n    this.collapsingParameters = collapsingParameters;\n    this.isBindingVariable = isBindingVariable;\n  }\n\n}\n\nclass InteractionObject {\n  constructor(paramsVariables, countColumns, countInColumn) {\n    this.paramsVariables = paramsVariables;\n    this.countColumns = countColumns;\n    this.countInColumn = countInColumn;\n  }\n\n}\n\nclass Variable {\n  constructor(name, alias, description, basicType, type, allowUserValues, dateTimeType, items, key, value, keyTo, isChecked = true, focusOnCreate, visible = true, binding, isNull, isFirstInitialization, checkedStates, isChanged) {\n    this.name = name;\n    this.alias = alias;\n    this.description = description;\n    this.basicType = basicType;\n    this.type = type;\n    this.allowUserValues = allowUserValues;\n    this.dateTimeType = dateTimeType;\n    this.items = items;\n    this.key = key;\n    this.value = value;\n    this.keyTo = keyTo;\n    this.isChecked = isChecked;\n    this.focusOnCreate = focusOnCreate;\n    this.visible = visible;\n    this.binding = binding;\n    this.isNull = isNull;\n    this.isFirstInitialization = isFirstInitialization;\n    this.checkedStates = checkedStates;\n    this.isChanged = isChanged;\n  }\n\n}\n\nclass DateTimeObject {\n  constructor(year, month, day, hours, minutes, seconds) {\n    this.year = year;\n    this.month = month;\n    this.day = day;\n    this.hours = hours;\n    this.minutes = minutes;\n    this.seconds = seconds;\n  }\n\n}\n\nclass Item {\n  constructor(name, caption, imageName, key, haveSubMenu, imageSizes, selected, type) {\n    this.name = name;\n    this.caption = caption;\n    this.imageName = imageName;\n    this.key = key;\n    this.haveSubMenu = haveSubMenu;\n    this.imageSizes = imageSizes;\n    this.selected = selected;\n    this.type = type;\n  }\n\n}\n\nclass Message {\n  constructor(action, data, subAction) {\n    this.action = action;\n    this.data = data;\n    this.subAction = subAction;\n  }\n\n}\n\nclass Form {\n  constructor(name, left, top, isMooving = false, level, formData) {\n    this.name = name;\n    this.left = left;\n    this.top = top;\n    this.isMooving = isMooving;\n    this.level = level;\n    this.formData = formData;\n  }\n\n}\n\nclass ExportFormSettings {\n  constructor(components, cSettings, openAfterExport, groups, update) {\n    this.components = components;\n    this.cSettings = cSettings;\n    this.openAfterExport = openAfterExport;\n    this.groups = groups;\n    this.update = update;\n  }\n\n}\n\nclass ExportGroup {\n  constructor(opened) {\n    this.opened = opened;\n  }\n\n}\n\nclass ExportComponent {\n  constructor(name, type, margin, label, tooltip, caption, checked, width, disabled, items, key) {\n    this.name = name;\n    this.type = type;\n    this.margin = margin;\n    this.label = label;\n    this.tooltip = tooltip;\n    this.caption = caption;\n    this.checked = checked;\n    this.width = width;\n    this.disabled = disabled;\n    this.items = items;\n    this.key = key;\n  }\n\n}\n\nclass DrillDown {\n  constructor(caption, selected = false, reportParams, visible) {\n    this.caption = caption;\n    this.selected = selected;\n    this.reportParams = reportParams;\n    this.visible = visible;\n  }\n\n}\n\nclass ErrorMessage {\n  constructor(error, type) {\n    this.error = error;\n    this.type = type;\n  }\n\n}\n\nclass Resource {\n  constructor(name, type, alias, id) {\n    this.name = name;\n    this.type = type;\n    this.alias = alias;\n    this.id = id;\n  }\n\n}\n\nclass NotificationFormOptions {\n  constructor(image, message, description, buttonCaption, cancelAction, action) {\n    this.image = image;\n    this.message = message;\n    this.description = description;\n    this.buttonCaption = buttonCaption;\n    this.cancelAction = cancelAction;\n    this.action = action;\n  }\n\n}\n\nlet ModelService = /*#__PURE__*/(() => {\n  class ModelService {\n    constructor() {\n      this._reportParams = {};\n      this.controls = new ControlClass();\n      this.pages = [];\n      this.months = [];\n      this.dayOfWeek = [];\n      this.dateRanges = [];\n      this.encodingData = [];\n      this.pdfSecurityCertificates = [];\n      this.paperSizes = [];\n      this.drillDownButtons = [];\n      this.showProgress = false;\n    }\n\n    get reportParams() {\n      return this._reportParams;\n    }\n\n    set reportParams(parameters) {\n      this._reportParams.pagesArray = parameters.pagesArray; // Apply new report parameters, if not update current page\n\n      if (parameters.action && parameters.action !== 'GetPages') {\n        this.reportParams.type = parameters.reportType;\n        this.reportParams.drillDownGuid = parameters.drillDownGuid;\n        this.reportParams.dashboardDrillDownGuid = parameters.dashboardDrillDownGuid;\n        this.reportParams.pagesCount = parameters.pagesCount;\n\n        if (parameters.pageNumber != null) {\n          this.reportParams.pageNumber = parameters.pageNumber;\n        }\n\n        this.reportParams.zoom = parameters.zoom;\n        this.reportParams.viewMode = parameters.viewMode;\n        this.reportParams.reportFileName = parameters.reportFileName;\n        this.reportParams.collapsingStates = parameters.collapsingStates;\n\n        if (parameters.bookmarksContent) {\n          this.reportParams.bookmarksContent = parameters.bookmarksContent;\n        }\n\n        if (parameters.resources) {\n          this.reportParams.resources = parameters.resources;\n        }\n\n        this.reportParams.isCompilationMode = parameters.isCompilationMode;\n\n        if (parameters.variablesValues) {\n          this.reportParams.variablesValues = parameters.variablesValues;\n        }\n\n        if (parameters.parametersDateFormat) {\n          this.options.appearance.parametersPanelDateFormat = parameters.parametersDateFormat;\n        }\n\n        if (parameters.tableOfContentsPointers) this.reportParams.tableOfContentsPointers = parameters.tableOfContentsPointers;\n        this.reportParams.isEditableReport = parameters.isEditableReport;\n\n        if (parameters.userValues) {\n          this.options.userValues = parameters.userValues;\n        }\n\n        this.reportParams.dashboards = parameters.dashboards;\n        this.reportParams.previewSettings = parameters.previewSettings;\n      }\n    }\n\n    setReportParams(parameters) {\n      this._reportParams = parameters;\n    }\n\n    getReportParams() {\n      return this.copyObject(this._reportParams);\n    }\n\n    copyObject(o) {\n      if (!o || 'object' !== typeof o) {\n        return o;\n      }\n\n      const c = 'function' === typeof o.pop ? [] : {};\n      let p;\n      let v;\n\n      for (p in o) {\n        if (o.hasOwnProperty(p) && p !== 'pagesArray') {\n          v = o[p];\n\n          if (v && 'object' === typeof v) {\n            c[p] = this.copyObject(v);\n          } else {\n            c[p] = v;\n          }\n        }\n      }\n\n      return c;\n    }\n\n    set options(data) {\n      this._options = this.toLower(data.options);\n\n      if (data.jsOptions) {\n        for (const key in data.jsOptions) {\n          if (data.jsOptions.hasOwnProperty(key)) {\n            this._options[key] = data.jsOptions[key];\n          }\n        }\n      }\n\n      this._options.exports.defaultSettings = data.defaultSettings;\n      this.localization = data.loc;\n      this.months = data.months;\n      this.dayOfWeek = data.dayOfWeek;\n      this.images = data.images;\n      this.dateRanges = data.dateRanges;\n      this.paperSizes = data.paperSizes;\n      this.encodingData = data.encodingData;\n      this.pdfSecurityCertificates = data.pdfSecurityCertificates;\n      this.clearViewerState();\n      this.setupOptions();\n    }\n\n    get options() {\n      return this._options;\n    }\n\n    loc(attr) {\n      var _a;\n\n      return (_a = this.localization[attr]) !== null && _a !== void 0 ? _a : attr;\n    }\n\n    img(name) {\n      var _a;\n\n      if (name != null && name.length > 0 && !this.images[name]) {//console.warn(`Image: ${name} not found`);\n      }\n\n      return (_a = this.images[name]) !== null && _a !== void 0 ? _a : '';\n    }\n\n    toLower(obj) {\n      const result = {};\n      Object.keys(obj).forEach(key => {\n        result[key.substr(0, 1).toLowerCase() + key.substr(1)] = typeof obj[key] === 'object' && obj[key] !== null ? this.toLower(obj[key]) : obj[key];\n      });\n      return result;\n    }\n\n    clear() {\n      this._options = undefined;\n      this._reportParams = {};\n      this._imagesForBookmark = undefined;\n      this.pages = [];\n      this.form = null;\n    }\n\n    clearViewerState() {\n      this.reportParams = {};\n      this.reportParams.type = 'Auto';\n      this.reportParams.pageNumber = 0;\n      this.reportParams.originalPageNumber = 0;\n      this.reportParams.drillDownGuid = null;\n      this.reportParams.dashboardDrillDownGuid = null;\n      this.reportParams.collapsingStates = null;\n      this.reportParams.bookmarksContent = null;\n      this.reportParams.editableParameters = null;\n      this.reportParams.resources = null;\n      this.reportParams.drillDownParameters = [];\n      this.reportParams.elementName = null;\n      this.reportParams.variablesValues = null;\n      this.reportParams.tableOfContentsPointers = [];\n      this.reportParams.isEditableReport = false;\n      this.options.viewerId = this.newToken();\n      this.options.clientGuid = this.newToken();\n      this.options.paramsVariables = null;\n      this.options.multiFilterStates = null;\n      this.options.isParametersReceived = false;\n      this.options.drillDownInProgress = false;\n      this.options.displayModeFromReport = null; // this.controls.mainPanel.style.background = '';\n      // this.tableElementGridStates = {};\n      // Restore current page number, if reload current report\n\n      if (this.reportParams.prevPageNumber) {\n        this.reportParams.pageNumber = this.reportParams.prevPageNumber;\n        delete this.reportParams.prevPageNumber;\n      }\n\n      this.fullScreenOptions = null;\n      this.drillDownButtons = [];\n      this.controls.parametersPanel.visible = false;\n      this.controls.bookmarksPanel.visible = false;\n      this.interactions = null;\n      /*\r\n      this.controls.drillDownPanel.visible = false;\r\n      this.controls.findPanel.visible = false;\r\n      this.controls.parametersPanel.visible = false;\r\n      this.controls.resourcesPanel.visible = false;*/\n    }\n\n    style(value) {\n      return value !== '' && value != null ? value : '';\n    }\n\n    createPostParameters(data, asObject = true, useOptions = true) {\n      var _a, _b, _c, _d;\n\n      let params; // Object params\n\n      const postParams = {\n        stiweb_component: 'Viewer',\n        stiweb_imagesScalingFactor: this.getImagesScalingFactor()\n      };\n\n      if (this.properties) {\n        postParams['properties'] = this.encode(JSON.stringify(this.properties));\n      }\n\n      if (this.options && useOptions) {\n        params = {\n          viewerId: this.options.viewerId,\n          routes: this.options.routes,\n          formValues: this.options.formValues,\n          clientGuid: this.options.clientGuid,\n          drillDownGuid: this.reportParams.drillDownGuid,\n          dashboardDrillDownGuid: this.reportParams.dashboardDrillDownGuid,\n          cacheMode: this.options.server.cacheMode,\n          cacheTimeout: this.options.server.cacheTimeout,\n          cacheItemPriority: this.options.server.cacheItemPriority,\n          pageNumber: this.reportParams.pageNumber,\n          originalPageNumber: this.reportParams.originalPageNumber,\n          reportType: this.reportParams.type,\n          zoom: this.reportParams.zoom && this.reportParams.zoom > 0 ? this.reportParams.zoom : ((_b = (_a = this.options) === null || _a === void 0 ? void 0 : _a.toolbar) === null || _b === void 0 ? void 0 : _b.zoom) > 0 ? (_d = (_c = this.options) === null || _c === void 0 ? void 0 : _c.toolbar) === null || _d === void 0 ? void 0 : _d.zoom : 100,\n          viewMode: this.reportParams.viewMode || this.options.toolbar.viewMode,\n          multiPageWidthCount: this.reportParams.multiPageWidthCount,\n          multiPageHeightCount: this.reportParams.multiPageHeightCount,\n          multiPageContainerWidth: this.reportParams.multiPageContainerWidth,\n          multiPageContainerHeight: this.reportParams.multiPageContainerHeight,\n          multiPageMargins: this.reportParams.multiPageMargins,\n          showBookmarks: this.options.toolbar.showBookmarksButton,\n          openLinksWindow: this.options.appearance.openLinksWindow,\n          chartRenderType: this.options.appearance.chartRenderType,\n          reportDisplayMode: this.options.displayModeFromReport || this.options.appearance.reportDisplayMode,\n          drillDownParameters: this.reportParams.drillDownParameters,\n          editableParameters: this.reportParams.editableParameters,\n          useRelativeUrls: this.options.server.useRelativeUrls,\n          passQueryParametersForResources: this.options.server.passQueryParametersForResources,\n          passQueryParametersToReport: this.options.server.passQueryParametersToReport,\n          version: this.options.shortProductVersion,\n          reportDesignerMode: this.options.reportDesignerMode,\n          imagesQuality: this.options.appearance.imagesQuality,\n          parametersPanelSortDataItems: this.options.appearance.parametersPanelSortDataItems,\n          combineReportPages: this.options.appearance.combineReportPages,\n          isAngular: true,\n          allowAutoUpdateCookies: this.options.server.allowAutoUpdateCookies\n        };\n\n        if (this.options.server.useLocalizedCache && this.options.localization) {\n          params['useLocalizedCache'] = true;\n          params['localization'] = this.options.localization;\n        }\n\n        if (this.options.userValues) {\n          params['userValues'] = this.options.userValues;\n        }\n      } else {\n        params = {};\n      }\n\n      if (data) {\n        Object.keys(data).forEach(key => params[key] = data[key]);\n      } // Object params\n\n\n      if (params.action) {\n        postParams['stiweb_action'] = params.action;\n        delete params.action;\n      }\n\n      if (params.base64Data) {\n        postParams['stiweb_data'] = params.base64Data;\n        delete params.base64Data;\n      }\n\n      if (this.options && useOptions) {\n        // Params\n        const jsonParams = JSON.stringify(params);\n\n        if (this.options.server.useCompression) {\n          // postParams['stiweb_packed_parameters'] = StiGZipHelper.pack(jsonParams);\n          postParams['stiweb_parameters'] = this.encode(jsonParams);\n        } else {\n          postParams['stiweb_parameters'] = this.encode(jsonParams);\n        }\n      }\n\n      if (this.postParametersFunction) {\n        let postParamsF = this.postParametersFunction(data);\n\n        if (postParamsF) {\n          Object.keys(postParamsF).forEach(key => postParams[key] = postParamsF[key]);\n        }\n      }\n\n      if (asObject) {\n        return postParams;\n      }\n    }\n\n    newToken() {\n      const a = '1234567890abcdefghijklmnopqrstuvwxyz'.split('');\n      const b = [];\n      const length = 32;\n\n      for (let i = 0; i < length; i++) {\n        const j = (Math.random() * (a.length - 1)).toFixed(0);\n        b[i] = a[j];\n      }\n\n      return b.join('');\n    }\n\n    setupOptions() {\n      var _a, _b, _c, _d, _e, _f;\n\n      if (!this.options.exports.showExportToPowerPoint && !this.options.exports.showExportToPdf && !this.options.exports.showExportToXps && !this.options.exports.showExportToOpenDocumentWriter && !this.options.exports.showExportToOpenDocumentCalc && !this.options.exports.showExportToText && !this.options.exports.showExportToRtf && !this.options.exports.showExportToWord2007 && !this.options.exports.showExportToCsv && !this.options.exports.showExportToJson && !this.options.exports.showExportToDbf && !this.options.exports.showExportToXml && !this.options.exports.showExportToDif && !this.options.exports.showExportToSylk && !this.options.exports.showExportToExcel && !this.options.exports.showExportToExcel2007 && !this.options.exports.showExportToExcelXml && !this.options.exports.showExportToHtml && !this.options.exports.showExportToHtml5 && !this.options.exports.showExportToMht && !this.options.exports.showExportToImageBmp && !this.options.exports.showExportToImageGif && !this.options.exports.showExportToImageJpeg && !this.options.exports.showExportToImageMetafile && !this.options.exports.showExportToImagePcx && !this.options.exports.showExportToImagePng && !this.options.exports.showExportToImageTiff && !this.options.exports.showExportToImageSvg && !this.options.exports.showExportToImageSvgz) {\n        if (!this.options.exports.showExportToDocument) {\n          this.options.toolbar.showSaveButton = false;\n        }\n\n        this.options.toolbar.showSendEmailButton = false;\n      } // Options\n\n\n      this.options.isTouchDevice = this.options.appearance.interfaceType === 'Auto' ? this.isTouchDevice() && this.isMobileDevice() : this.options.appearance.interfaceType === 'Touch';\n      this.options.isMobileDevice = this.options.appearance.interfaceType === 'Auto' && !this.options.reportDesignerMode ? this.isTouchDevice() && this.isMobileDevice() : this.options.appearance.interfaceType === 'Mobile';\n\n      if (this.options.isMobileDevice) {\n        this.initializeMobile();\n      } else {\n        this.options.toolbar.showPinToolbarButton = false;\n      }\n\n      this.controls.toolbar.visible = this.options.toolbar.visible;\n      this.options.menuAnimDuration = 150;\n      this.options.formAnimDuration = 200;\n      this.options.scrollDuration = 350;\n      this.options.menuHideDelay = 250;\n      this.options.server.timeoutAutoUpdateCache = 180000;\n      this.options.toolbar.backgroundColor = this.getHTMLColor(this.options.toolbar.backgroundColor);\n      this.options.toolbar.borderColor = this.getHTMLColor(this.options.toolbar.borderColor);\n      this.options.toolbar.fontColor = this.getHTMLColor(this.options.toolbar.fontColor);\n      this.options.appearance.pageBorderColor = this.getHTMLColor(this.options.appearance.pageBorderColor);\n      this.options.parametersValues = {};\n      this.options.parameterRowHeight = this.options.isTouchDevice ? 35 : 30;\n      this.options.minParametersCountForMultiColumns = 5; // First Day Of Week\n\n      if (this.options.appearance.datePickerFirstDayOfWeek === 'Sunday') {\n        this.dayOfWeek.splice(6, 1);\n        this.dayOfWeek.splice(0, 0, 'Sunday');\n      }\n\n      if (((_b = (_a = this.options) === null || _a === void 0 ? void 0 : _a.toolbar) === null || _b === void 0 ? void 0 : _b.zoom) === -1 || ((_d = (_c = this.options) === null || _c === void 0 ? void 0 : _c.toolbar) === null || _d === void 0 ? void 0 : _d.zoom) === -2) {\n        this.reportParams.autoZoom = (_f = (_e = this.options) === null || _e === void 0 ? void 0 : _e.toolbar) === null || _f === void 0 ? void 0 : _f.zoom;\n      } // Actions\n\n\n      if (!this.options.actions.getReport) {\n        this.options.actions.getReport = this.options.actions.viewerEvent;\n      }\n\n      if (!this.options.actions.printReport) {\n        this.options.actions.printReport = this.options.actions.viewerEvent;\n      }\n\n      if (!this.options.actions.openReport) {\n        this.options.actions.openReport = this.options.actions.viewerEvent;\n      }\n\n      if (!this.options.actions.exportReport) {\n        this.options.actions.exportReport = this.options.actions.viewerEvent;\n      }\n\n      if (!this.options.actions.interaction) {\n        this.options.actions.interaction = this.options.actions.viewerEvent;\n      }\n\n      if (!(window.File && window.FileReader && window.FileList && window.Blob)) {\n        this.options.toolbar.showOpenButton = false;\n      } // Render JsViewer styles into HEAD\n\n\n      if (this.options.requestResourcesUrl || this.options.appearance.customStylesUrl) {\n        const viewerStyles = document.createElement('link');\n        viewerStyles.setAttribute('type', 'text/css');\n        viewerStyles.setAttribute('rel', 'stylesheet');\n        viewerStyles.setAttribute('href', this.options.appearance.customStylesUrl || this.getResourceUrl('styles'));\n        this.controls.head.appendChild(viewerStyles);\n      }\n\n      this.options.viewerId = (Math.random() * 1000000).toString();\n    }\n\n    pagesNavigationIsActive() {\n      return (this.options.appearance.fullScreenMode || this.options.appearance.scrollbarsMode) && this.reportParams.viewMode === 'Continuous';\n    }\n\n    get imagesForBookmark() {\n      if (!this._imagesForBookmark) {\n        const names = ['root', 'folder', 'folderOpen', 'node', 'empty', 'line', 'join', 'joinBottom', 'plus', 'plusBottom', 'minus', 'minusBottom'];\n        const imagesForBookmarks = {};\n        names.forEach(name => imagesForBookmarks[name] = this.images['Bookmarks' + name + '.png']);\n        this._imagesForBookmark = imagesForBookmarks;\n      }\n\n      return this._imagesForBookmark;\n    }\n\n    isTouchDevice() {\n      return 'ontouchstart' in document.documentElement;\n    }\n\n    isMobileDevice() {\n      return /iPhone|iPad|iPod|Macintosh|Android|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    }\n\n    initializeMobile() {\n      let isViewPortExist = false;\n      const metas = this.controls.head.getElementsByTagName('meta');\n\n      for (const meta of metas) {\n        if (meta.name && meta.name.toLowerCase() === 'viewport') {\n          isViewPortExist = true;\n          break;\n        }\n      }\n\n      if (!isViewPortExist) {\n        const viewPortTag = document.createElement('meta');\n        viewPortTag.id = 'viewport';\n        viewPortTag.name = 'viewport';\n        viewPortTag.content = 'initial-scale=1.0,width=device-width,user-scalable=0';\n        this.controls.head.appendChild(viewPortTag);\n      }\n\n      this.options.appearance.fullScreenMode = true;\n      this.options.appearance.scrollbarsMode = true;\n      this.options.appearance.parametersPanelPosition = 'Left';\n      this.options.appearance.parametersPanelColumnsCount = 1;\n      this.options.toolbar.displayMode = 'Separated';\n      this.options.toolbar.viewMode = 'SinglePage';\n      this.options.toolbar.showZoomButton = false;\n      const defaultZoom = this.options.toolbar.zoom === -2 ? -2 : -1; // PageWidth or PageHeight\n\n      this.options.toolbar.zoom = this.reportParams.zoom = defaultZoom;\n      this.options.toolbar.showButtonCaptions = false;\n      this.options.toolbar.showOpenButton = false;\n      this.options.toolbar.showFindButton = false;\n      this.options.toolbar.showEditorButton = false;\n      this.options.toolbar.showFullScreenButton = false;\n      this.options.toolbar.showAboutButton = false;\n      this.options.toolbar.showViewModeButton = false;\n    }\n\n    getImagesScalingFactor() {\n      const wnd = window;\n      const devicePixelRatio = window.devicePixelRatio || (wnd.deviceXDPI && wnd.logicalXDPI ? wnd.deviceXDPI / wnd.logicalXDPI : 1);\n\n      if (!devicePixelRatio || devicePixelRatio <= 1) {\n        return '1';\n      } else {\n        return devicePixelRatio.toString();\n      }\n    }\n\n    getHTMLColor(color) {\n      if (color.indexOf(',') > 0 && color.indexOf('rgb') < 0) {\n        return `rgb(${color})`;\n      }\n\n      return color;\n    }\n\n    getResourceUrl(resourceParameter) {\n      let url = this.getActionRequestUrl(this.options.requestResourcesUrl, this.options.actions.viewerEvent);\n      url += url.indexOf('?') > 0 ? '&' : '?';\n      url += 'stiweb_component=Viewer&stiweb_action=Resource&stiweb_data=' + resourceParameter + '&stiweb_theme=' + this.options.theme;\n      url += '&stiweb_cachemode=' + (this.options.server.useCacheForResources ? this.options.server.cacheMode === 'ObjectSession' || this.options.server.cacheMode === 'StringSession' ? 'session' : 'cache' : 'none');\n      url += '&stiweb_version=' + this.options.shortProductVersion;\n      return url;\n    }\n\n    getActionRequestUrl(requestUrl, action) {\n      if (!action) {\n        return requestUrl;\n      }\n\n      if (action.indexOf('?') < 0) {\n        return requestUrl.replace('{action}', action);\n      }\n\n      const query = action.substring(action.indexOf('?') + 1);\n      action = action.substring(0, action.indexOf('?'));\n      return requestUrl.replace('{action}', action) + (requestUrl.indexOf('?') > 0 ? '&' : '?') + query;\n    }\n\n    encode(input) {\n      // Decode from UTF-8 text\n      if (typeof unescape != 'undefined') {\n        input = unescape(encodeURIComponent(input));\n      } else {\n        input = input.replace(/\\r\\n/g, \"\\n\");\n        var utftext = \"\";\n\n        for (var n = 0; n < input.length; n++) {\n          var c = input.charCodeAt(n);\n\n          if (c < 128) {\n            utftext += String.fromCharCode(c);\n          } else if (c > 127 && c < 2048) {\n            utftext += String.fromCharCode(c >> 6 | 192);\n            utftext += String.fromCharCode(c & 63 | 128);\n          } else {\n            utftext += String.fromCharCode(c >> 12 | 224);\n            utftext += String.fromCharCode(c >> 6 & 63 | 128);\n            utftext += String.fromCharCode(c & 63 | 128);\n          }\n        }\n\n        input = utftext;\n      } // Encode to Base64 string\n\n\n      if (typeof window.btoa != 'undefined') return window.btoa(input);\n      var output = \"\";\n      var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n      var i = 0;\n\n      while (i < input.length) {\n        chr1 = input.charCodeAt(i++);\n        chr2 = input.charCodeAt(i++);\n        chr3 = input.charCodeAt(i++);\n        enc1 = chr1 >> 2;\n        enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n        enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n        enc4 = chr3 & 63;\n        if (isNaN(chr2)) enc3 = enc4 = 64;else if (isNaN(chr3)) enc4 = 64;\n        output = output + this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) + this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n      }\n\n      return output;\n    }\n\n    decode(input) {\n      var output = \"\"; // Decode from Base64 string\n\n      if (typeof window.atob != 'undefined') {\n        output = window.atob(input);\n      } else {\n        var chr1, chr2, chr3;\n        var enc1, enc2, enc3, enc4;\n        var i = 0;\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n          enc1 = this._keyStr.indexOf(input.charAt(i++));\n          enc2 = this._keyStr.indexOf(input.charAt(i++));\n          enc3 = this._keyStr.indexOf(input.charAt(i++));\n          enc4 = this._keyStr.indexOf(input.charAt(i++));\n          chr1 = enc1 << 2 | enc2 >> 4;\n          chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n          chr3 = (enc3 & 3) << 6 | enc4;\n          output = output + String.fromCharCode(chr1);\n\n          if (enc3 != 64) {\n            output = output + String.fromCharCode(chr2);\n          }\n\n          if (enc4 != 64) {\n            output = output + String.fromCharCode(chr3);\n          }\n        }\n      } // Encode to UTF-8 string\n\n\n      if (typeof escape != 'undefined') return decodeURIComponent(escape(output));\n      var string = \"\";\n      var i = 0;\n      var c = 0;\n      var c1 = 0;\n      var c2 = 0;\n      var c3 = 0;\n\n      while (i < output.length) {\n        c = output.charCodeAt(i);\n\n        if (c < 128) {\n          string += String.fromCharCode(c);\n          i++;\n        } else if (c > 191 && c < 224) {\n          c2 = output.charCodeAt(i + 1);\n          string += String.fromCharCode((c & 31) << 6 | c2 & 63);\n          i += 2;\n        } else {\n          c2 = output.charCodeAt(i + 1);\n          c3 = output.charCodeAt(i + 2);\n          string += String.fromCharCode((c & 15) << 12 | (c2 & 63) << 6 | c3 & 63);\n          i += 3;\n        }\n      }\n\n      return string;\n    }\n\n  }\n\n  ModelService.ɵfac = function ModelService_Factory(t) {\n    return new (t || ModelService)();\n  };\n\n  ModelService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ModelService,\n    factory: ModelService.ɵfac\n  });\n  return ModelService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet AnimationService = /*#__PURE__*/(() => {\n  class AnimationService {\n    constructor(model) {\n      this.model = model;\n    }\n\n    showAnimationForScroll(reportPanel, finishScrollTop, endTime, completeFunction) {\n      if (!reportPanel) {\n        return;\n      }\n\n      let currentScrollTop = 0;\n\n      if (this.model.options.appearance.scrollbarsMode) {\n        currentScrollTop = reportPanel.scrollTop;\n      } else {\n        currentScrollTop = document.documentElement.scrollTop;\n\n        if (currentScrollTop === 0) {\n          currentScrollTop = document.getElementsByTagName('BODY')[0].scrollTop;\n        }\n      }\n\n      clearTimeout(reportPanel.animationTimer);\n      const d = new Date();\n      const t = d.getTime();\n      let step = Math.round((finishScrollTop - currentScrollTop) / ((Math.abs(endTime - t) + 1) / 30)); // Last step\n\n      if (Math.abs(step) > Math.abs(finishScrollTop - currentScrollTop)) {\n        step = finishScrollTop - currentScrollTop;\n      }\n\n      currentScrollTop += step;\n      let resultScrollTop;\n\n      if (t < endTime) {\n        resultScrollTop = currentScrollTop;\n        reportPanel.animationTimer = setTimeout(() => {\n          this.showAnimationForScroll(reportPanel, finishScrollTop, endTime, completeFunction);\n        }, 30);\n      } else {\n        resultScrollTop = finishScrollTop;\n\n        if (completeFunction) {\n          completeFunction();\n        }\n      }\n\n      if (this.model.options.appearance.scrollbarsMode) {\n        reportPanel.scrollTop = resultScrollTop;\n      } else {\n        window.scrollTo(0, resultScrollTop);\n      }\n    }\n\n  }\n\n  AnimationService.ɵfac = function AnimationService_Factory(t) {\n    return new (t || AnimationService)(i0.ɵɵinject(ModelService));\n  };\n\n  AnimationService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: AnimationService,\n    factory: AnimationService.ɵfac\n  });\n  return AnimationService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet HelperService = /*#__PURE__*/(() => {\n  class HelperService {\n    constructor(model, animationService) {\n      this.model = model;\n      this.animationService = animationService;\n    }\n\n    val(value, def) {\n      return value != null && value.trim() !== '' ? value : def || '';\n    }\n\n    findPosY(obj, mainClassName, noScroll) {\n      let curtop = noScroll ? 0 : this.getScrollYOffset(obj, mainClassName);\n\n      if (obj.offsetParent) {\n        while (obj.className !== mainClassName) {\n          curtop += obj.offsetTop;\n\n          if (!obj.offsetParent) {\n            break;\n          }\n\n          obj = obj.offsetParent;\n        }\n      } else if (obj.y) {\n        curtop += obj.y;\n      }\n\n      return curtop;\n    }\n\n    getScrollYOffset(obj, mainClassName) {\n      let scrolltop = 0;\n\n      if (obj.parentElement) {\n        while (obj.className !== mainClassName) {\n          if ('scrollTop' in obj) {\n            scrolltop -= obj.scrollTop;\n          }\n\n          if (!obj.parentElement) {\n            break;\n          }\n\n          obj = obj.parentElement;\n        }\n      }\n\n      return scrolltop;\n    }\n\n    findPosX(obj, mainClassName, noScroll) {\n      let curleft = noScroll ? 0 : this.getScrollXOffset(obj, mainClassName);\n\n      if (obj.offsetParent) {\n        while (obj.className !== mainClassName) {\n          curleft += obj.offsetLeft;\n\n          if (!obj.offsetParent) {\n            break;\n          }\n\n          obj = obj.offsetParent;\n        }\n      } else if (obj.x) {\n        curleft += obj.x;\n      }\n\n      return curleft;\n    }\n\n    getScrollXOffset(obj, mainClassName) {\n      let scrollleft = 0;\n\n      if (obj.parentElement) {\n        while (obj.className !== mainClassName) {\n          if ('scrollLeft' in obj) {\n            scrollleft -= obj.scrollLeft;\n          }\n\n          if (!obj.parentElement) {\n            break;\n          }\n\n          obj = obj.parentElement;\n        }\n      }\n\n      return scrollleft;\n    }\n\n    showHelpWindow(url) {\n      let helpLanguage = 'en';\n\n      switch (this.model.options.cultureName) {\n        case 'ru':\n          helpLanguage = 'ru';\n        // case 'de': helpLanguage = 'de';\n      }\n\n      this.openNewWindow('https://www.stimulsoft.com/' + helpLanguage + '/documentation/online/' + url);\n    }\n\n    openNewWindow(url, name, specs) {\n      return window.open(url, name, specs);\n    }\n\n    scrollToAnchor(anchorName, componentGuid) {\n      let aHyperlinks = this.model.controls.reportPanel.el.nativeElement.getElementsByTagName(\"a\");\n      const identicalAnchors = [];\n\n      if (anchorName) {\n        anchorName = anchorName.replace(/!!#92/g, '\\\\');\n      }\n\n      if (componentGuid) {\n        for (let i = 0; i < aHyperlinks.length; i++) {\n          if (aHyperlinks[i].getAttribute('guid') === componentGuid) {\n            identicalAnchors.push(aHyperlinks[i]);\n          }\n        }\n      }\n\n      if (identicalAnchors.length === 0) {\n        let guidIndex = anchorName.indexOf(\"#GUID#\");\n\n        if (identicalAnchors.length == 0) {\n          let aHyperlinks = this.model.controls.reportPanel.el.nativeElement.getElementsByTagName(\"a\");\n\n          for (var i = 0; i < aHyperlinks.length; i++) {\n            if (aHyperlinks[i].name && (guidIndex >= 0 && (aHyperlinks[i].name.indexOf(anchorName.substring(guidIndex + 6)) >= 0 || anchorName.substring(0, guidIndex) == aHyperlinks[i].name) || aHyperlinks[i].name == anchorName)) identicalAnchors.push(aHyperlinks[i]);\n          }\n        }\n      }\n\n      if (identicalAnchors.length > 0) {\n        const anchor = identicalAnchors[0];\n        const anchorParent = anchor.parentElement || anchor;\n        let anchorHeight = anchorParent.offsetHeight;\n        const anchorOffsetTop = anchorParent.offsetTop;\n        identicalAnchors.forEach(identicalAnchor => {\n          const nextAnchorParent = identicalAnchor.parentElement || identicalAnchor;\n\n          if (nextAnchorParent.offsetTop > anchorOffsetTop) {\n            anchorHeight = Math.max(anchorHeight, nextAnchorParent.offsetTop - anchorOffsetTop + nextAnchorParent.offsetHeight);\n          }\n        });\n        const date = new Date();\n        const endTime = date.getTime() + this.model.options.scrollDuration;\n        const targetTop = this.findPosY(anchor, this.model.options.appearance.scrollbarsMode ? 'stiJsViewerReportPanel' : null, true) - anchorParent.offsetHeight * 2;\n        this.animationService.showAnimationForScroll(this.model.controls.reportPanel.el.nativeElement, targetTop, endTime, () => {\n          var _a;\n\n          const page = this.getPageFromAnchorElement(anchor);\n          const anchorParentTopPos = this.findPosY(anchorParent, 'stiJsViewerReportPanel', true);\n          const pageTopPos = page ? this.findPosY(page, 'stiJsViewerReportPanel', true) : anchorParentTopPos;\n          this.removeBookmarksLabel();\n          const label = document.createElement('div');\n          this.model.controls.bookmarksLabel = label;\n          label.className = 'stiJsViewerBookmarksLabel';\n          const labelMargin = 20 * (this.model.reportParams.zoom / 100);\n          const labelWidth = page ? page.offsetWidth - labelMargin - 6 : anchorParent.offsetWidth;\n          const labelHeight = anchorHeight - 2;\n          label.style.width = labelWidth + 'px';\n          label.style.height = labelHeight + 'px';\n          const margins = (_a = page.pageAttributes.margins) === null || _a === void 0 ? void 0 : _a.replace('px', '').split(' ');\n          const pageLeftMargin = page.pageAttributes.margins ? this.strToInt(margins[3]) : 0;\n          const pageTopMargin = page.pageAttributes.margins ? this.strToInt(margins[0]) : 0;\n          label.style.marginLeft = labelMargin / 2 - pageLeftMargin + 'px';\n          label.style.marginTop = anchorParentTopPos - pageTopPos - pageTopMargin - this.model.reportParams.zoom / 100 - 1 + 'px';\n          page.insertBefore(label, page.childNodes[0]);\n        });\n      }\n    }\n\n    removeBookmarksLabel() {\n      if (this.model.controls.bookmarksLabel) {\n        this.model.controls.bookmarksLabel.parentElement.removeChild(this.model.controls.bookmarksLabel);\n        this.model.controls.bookmarksLabel = null;\n      }\n    }\n\n    getPageFromAnchorElement(anchorElement) {\n      let obj = anchorElement;\n\n      while (obj.parentElement) {\n        if (obj.className && obj.className.indexOf('stiJsViewerPage') === 0) {\n          return obj;\n        }\n\n        obj = obj.parentElement;\n      }\n\n      return obj;\n    }\n\n    strToInt(value) {\n      const result = parseInt(value, 10);\n      return result || 0;\n    }\n\n    strToDouble(value) {\n      if (value === null) {\n        return null;\n      }\n\n      const result = parseFloat(value.toString().replace(',', '.').trim());\n      return result || 0;\n    }\n\n    copyObject(o) {\n      if (!o || 'object' !== typeof o) {\n        return o;\n      }\n\n      const c = 'function' === typeof o.pop ? [] : {};\n      let p;\n      let v;\n\n      for (p in o) {\n        if (o.hasOwnProperty(p)) {\n          v = o[p];\n\n          if (v && 'object' === typeof v) {\n            c[p] = this.copyObject(v);\n          } else {\n            c[p] = v;\n          }\n        }\n      }\n\n      return c;\n    }\n\n    getCountObjects(objectArray) {\n      let count = 0;\n\n      if (objectArray) {\n        for (const singleObject in objectArray) {\n          count++;\n        }\n      }\n\n      return count;\n    }\n\n    replaceMonths(value) {\n      for (let i = 1; i <= 12; i++) {\n        let enName = '';\n        let locName = '';\n\n        switch (i) {\n          case 1:\n            enName = 'January';\n            locName = this.model.loc('MonthJanuary');\n            break;\n\n          case 2:\n            enName = 'February';\n            locName = this.model.loc('MonthFebruary');\n            break;\n\n          case 3:\n            enName = 'March';\n            locName = this.model.loc('MonthMarch');\n            break;\n\n          case 4:\n            enName = 'April';\n            locName = this.model.loc('MonthApril');\n            break;\n\n          case 5:\n            enName = 'May';\n            locName = this.model.loc('MonthMay');\n            break;\n\n          case 6:\n            enName = 'June';\n            locName = this.model.loc('MonthJune');\n            break;\n\n          case 7:\n            enName = 'July';\n            locName = this.model.loc('MonthJuly');\n            break;\n\n          case 8:\n            enName = 'August';\n            locName = this.model.loc('MonthAugust');\n            break;\n\n          case 9:\n            enName = 'September';\n            locName = this.model.loc('MonthSeptember');\n            break;\n\n          case 10:\n            enName = 'October';\n            locName = this.model.loc('MonthOctober');\n            break;\n\n          case 11:\n            enName = 'November';\n            locName = this.model.loc('MonthNovember');\n            break;\n\n          case 12:\n            enName = 'December';\n            locName = this.model.loc('MonthDecember');\n            break;\n        }\n\n        const enShortName = enName.substring(0, 3);\n        const locShortName = locName.substring(0, 3);\n        value = value.replace(enName, i).replace(enName.toLowerCase(), i).replace(enShortName, i).replace(enShortName.toLowerCase(), i);\n        value = value.replace(locName, i).replace(locName.toLowerCase(), i).replace(locShortName, i).replace(locShortName.toLowerCase(), i);\n      }\n\n      return value;\n    }\n\n    getDate(dateTimeObj) {\n      return new Date(dateTimeObj.year, dateTimeObj.month - 1, dateTimeObj.day, dateTimeObj.hours, dateTimeObj.minutes, dateTimeObj.seconds);\n    }\n\n    getDateTimeObject(date) {\n      if (!date) {\n        date = new Date();\n      }\n\n      const dateTimeObject = new DateTimeObject();\n      dateTimeObject.year = date.getFullYear();\n      dateTimeObject.month = date.getMonth() + 1;\n      dateTimeObject.day = date.getDate();\n      dateTimeObject.hours = date.getHours();\n      dateTimeObject.minutes = date.getMinutes();\n      dateTimeObject.seconds = date.getSeconds();\n      return dateTimeObject;\n    }\n\n    getDateTimeFromString(value, format) {\n      const charIsDigit = ch => {\n        return '0123456789'.indexOf(ch) >= 0;\n      };\n\n      if (!value) {\n        return new Date();\n      }\n\n      value = this.replaceMonths(value);\n      let dateTime = new Date(); // If the date format is not specified, then deserializator for getting date and time is applied\n\n      if (format === null) {\n        format = 'dd.MM.yyyy hh:mm:ss';\n      } // Otherwise the format is parsed. Now only numeric date and time formats are supported\n\n\n      let year = 1970;\n      let month = 1;\n      let day = 1;\n      let hour = 0;\n      let minute = 0;\n      let second = 0;\n      let millisecond = 0;\n      let char = '';\n      let pos = 0;\n      const values = []; // Parse date and time into separate numeric values\n\n      while (pos < value.length) {\n        char = value.charAt(pos);\n\n        if (charIsDigit(char)) {\n          values.push(char);\n          pos++;\n\n          while (pos < value.length && charIsDigit(value.charAt(pos))) {\n            values[values.length - 1] += value.charAt(pos);\n            pos++;\n          }\n\n          values[values.length - 1] = this.strToInt(values[values.length - 1]);\n        }\n\n        pos++;\n      }\n\n      pos = 0;\n      let charCount = 0;\n      let index = -1;\n      let is12hour = false; // Parsing format and replacement of appropriate values of date and time\n\n      while (pos < format.length) {\n        char = format.charAt(pos);\n        charCount = 0;\n\n        if (char === 'Y' || char === 'y' || char === 'M' || char === 'd' || char === 'h' || char === 'H' || char === 'm' || char === 's' || char === 'f' || char === 'F' || char === 't' || char === 'z') {\n          index++;\n\n          while (pos < format.length && format.charAt(pos) === char) {\n            pos++;\n            charCount++;\n          }\n        }\n\n        switch (char) {\n          case 'Y':\n            // full year\n            year = values[index];\n            break;\n\n          case 'y':\n            // year\n            if (values[index] < 1000) {\n              year = 2000 + values[index];\n            } else {\n              year = values[index];\n            }\n\n            break;\n\n          case 'M':\n            // month\n            month = values[index];\n            break;\n\n          case 'd':\n            // day\n            day = values[index];\n            break;\n\n          case 'h':\n            // (hour 12)\n            is12hour = true;\n            hour = values[index];\n            break;\n\n          case 'H':\n            // (hour 24)\n            hour = values[index];\n            break;\n\n          case 'm':\n            // minute\n            minute = values[index];\n            break;\n\n          case 's':\n            // second\n            second = values[index];\n            break;\n\n          case 'f': // second fraction\n\n          case 'F':\n            // second fraction, trailing zeroes are trimmed\n            millisecond = values[index];\n            break;\n\n          case 't':\n            // PM or AM\n            if (value.toLowerCase().indexOf('am') >= 0 && hour === 12) {\n              hour = 0;\n            }\n\n            if (value.toLowerCase().indexOf('pm') >= 0 && hour < 12) {\n              hour += 12;\n            }\n\n            break;\n\n          default:\n            pos++;\n            break;\n        }\n      }\n\n      dateTime = new Date(year || new Date().getFullYear(), month - 1 || 0, day || 1, hour || 0, minute || 0, second, millisecond || 0);\n\n      if (!dateTime || isNaN(dateTime)) {\n        return new Date();\n      }\n\n      return dateTime;\n    }\n\n    getStringDateTime(object, dateTimeType) {\n      if (dateTimeType === 'Date') {\n        object.hours = 0;\n        object.minutes = 0;\n        object.seconds = 0;\n      }\n\n      return object.month + '/' + object.day + '/' + object.year + ' ' + (object.hours > 12 ? object.hours - 12 : object.hours) + ':' + object.minutes + ':' + object.seconds + ' ' + (object.hours < 12 ? 'AM' : 'PM');\n    }\n\n    dateTimeObjectToString(dateTimeObject, typeDateTimeObject) {\n      const date = new Date(dateTimeObject.year, dateTimeObject.month - 1, dateTimeObject.day, dateTimeObject.hours, dateTimeObject.minutes, dateTimeObject.seconds);\n\n      if (this.model.options.appearance.parametersPanelDateFormat !== '') {\n        return this.formatDate(date, this.model.options.appearance.parametersPanelDateFormat);\n      }\n\n      return this.dateToLocaleString(date, typeDateTimeObject);\n    }\n\n    dateToLocaleString(date, dateTimeType) {\n      const timeString = date.toLocaleTimeString();\n      const isAmericanFormat = timeString.toLowerCase().indexOf('am') >= 0 || timeString.toLowerCase().indexOf('pm') >= 0;\n      let formatDate = isAmericanFormat ? 'MM/dd/yyyy' : 'dd.MM.yyyy';\n      const yyyy = date.getFullYear();\n      const yy = yyyy.toString().substring(2);\n      const M = date.getMonth() + 1;\n      const MM = M < 10 ? '0' + M : M;\n      const d = date.getDate();\n      const dd = d < 10 ? '0' + d : d;\n      formatDate = formatDate.replace(/yyyy/i, yyyy);\n      formatDate = formatDate.replace(/yy/i, yy);\n      formatDate = formatDate.replace(/MM/i, MM);\n      formatDate = formatDate.replace(/M/i, M);\n      formatDate = formatDate.replace(/dd/i, dd);\n      formatDate = formatDate.replace(/d/i, d);\n      let h = date.getHours();\n      let tt = '';\n\n      if (isAmericanFormat) {\n        tt = h < 12 ? ' AM' : ' PM';\n        h = h > 12 ? h - 12 : h;\n\n        if (h === 0) {\n          h = 12;\n        }\n      } else {\n        h = h < 10 ? '0' + h : h;\n      }\n\n      let m = date.getMinutes();\n      m = m < 10 ? '0' + m : m;\n      let s = date.getSeconds();\n      s = s < 10 ? '0' + s : s;\n      const formatTime = h + ':' + m + ':' + s + tt;\n\n      if (dateTimeType === 'Time') {\n        return formatTime;\n      }\n\n      if (dateTimeType === 'Date') {\n        return formatDate;\n      }\n\n      return formatDate + ' ' + formatTime;\n    }\n\n    formatDate(formatDate, formatString) {\n      const yyyy = formatDate.getFullYear();\n      const yy = yyyy.toString().substring(2);\n      const m = formatDate.getMonth() + 1;\n      const mm = m < 10 ? '0' + m : m;\n      const d = formatDate.getDate();\n      const dd = d < 10 ? '0' + d : d;\n      const h = formatDate.getHours();\n      const hh = h < 10 ? '0' + h : h;\n      const h12 = h > 12 ? h - 12 : h > 0 ? h : 12;\n      const hh12 = h12 < 10 ? '0' + h12 : h12;\n      const n = formatDate.getMinutes();\n      const nn = n < 10 ? '0' + n : n;\n      const s = formatDate.getSeconds();\n      const ss = s < 10 ? '0' + s : s;\n      const tt = h < 12 ? 'AM' : 'PM';\n      formatString = formatString.replace(/yyyy/gi, yyyy);\n      formatString = formatString.replace(/yy/gi, yy);\n      formatString = formatString.replace(/Y/, yyyy);\n      formatString = formatString.replace(/MM/g, mm);\n      formatString = formatString.replace(/M/g, m);\n      formatString = formatString.replace(/dd/g, dd);\n      formatString = formatString.replace(/d/g, d);\n      formatString = formatString.replace(/hh/g, hh12);\n      formatString = formatString.replace(/h/g, h12);\n      formatString = formatString.replace(/HH/g, hh);\n      formatString = formatString.replace(/H/g, h);\n      formatString = formatString.replace(/mm/g, nn);\n      formatString = formatString.replace(/m/g, n);\n      formatString = formatString.replace(/ss/g, ss);\n      formatString = formatString.replace(/s/g, s);\n      formatString = formatString.replace(/tt/gi, tt);\n      formatString = formatString.replace(/t/gi, tt.substr(0, 1));\n      return formatString;\n    }\n\n    getStringKey(key, params) {\n      if (key === null) {\n        return '';\n      }\n\n      return params.type === 'DateTime' ? this.dateTimeObjectToString(key, params.dateTimeType) : key;\n    }\n\n    stringToTime(timeStr) {\n      const timeArray = timeStr.split(':');\n      const time = {\n        hours: 0,\n        minutes: 0,\n        seconds: 0\n      };\n      time.hours = this.strToInt(timeArray[0]);\n\n      if (timeArray.length > 1) {\n        time.minutes = this.strToInt(timeArray[1]);\n      }\n\n      if (timeArray.length > 2) {\n        time.seconds = this.strToInt(timeArray[2]);\n      }\n\n      if (time.hours < 0) {\n        time.hours = 0;\n      }\n\n      if (time.minutes < 0) {\n        time.minutes = 0;\n      }\n\n      if (time.seconds < 0) {\n        time.seconds = 0;\n      }\n\n      if (time.hours > 23) {\n        time.hours = 23;\n      }\n\n      if (time.minutes > 59) {\n        time.minutes = 59;\n      }\n\n      if (time.seconds > 59) {\n        time.seconds = 59;\n      }\n\n      return time;\n    }\n\n    newGuid() {\n      const chars = '0123456789abcdefghijklmnopqrstuvwxyz'.split('');\n      const uuid = [];\n      const rnd = Math.random;\n      let r;\n      uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\n      uuid[14] = '4';\n\n      for (let i = 0; i < 36; i++) {\n        if (!uuid[i]) {\n          r = 0 | rnd() * 16;\n          uuid[i] = chars[i === 19 ? r & 0x3 | 0x8 : r & 0xf];\n        }\n      }\n\n      return uuid.join('');\n    }\n\n    getCountDaysOfMonth(year, month) {\n      const countDaysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n      let count = countDaysInMonth[month];\n\n      if (month === 1) {\n        if (year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0)) {\n          count = 29;\n        } else {\n          count = 28;\n        }\n      }\n\n      return count;\n    }\n\n    setObjectToCenter(object, defaultTop) {\n      const leftPos = this.model.viewerSize.width / 2 - object.offsetWidth / 2;\n      const topPos = this.model.options.appearance.fullScreenMode ? this.model.viewerSize.height / 2 - object.offsetHeight / 2 : defaultTop ? defaultTop : 250;\n      return {\n        left: Math.max(leftPos, 0),\n        top: Math.max(topPos, 0)\n      };\n    }\n\n    checkCloudAuthorization(action) {\n      return true;\n    }\n\n    getCookie_(name) {\n      const cookie = ' ' + document.cookie;\n      const search = ' ' + name + '=';\n      let setStr = null;\n      let offset = 0;\n      let end = 0;\n\n      if (cookie.length > 0) {\n        offset = cookie.indexOf(search);\n\n        if (offset !== -1) {\n          offset += search.length;\n          end = cookie.indexOf(';', offset);\n\n          if (end === -1) {\n            end = cookie.length;\n          }\n\n          setStr = unescape(cookie.substring(offset, end));\n        }\n      }\n\n      return setStr;\n    }\n\n    getCookie(name) {\n      if (this.model.options.standaloneJsMode || typeof localStorage === 'undefined' || name.indexOf('sti_') == 0 || name.indexOf('login') == 0) {\n        return this.getCookie_(name);\n      }\n\n      let value = localStorage.getItem(name);\n\n      if (value != null) {\n        return value;\n      } else {\n        value = this.getCookie_(name);\n\n        if (value != null) {\n          this.removeCookie(name);\n          localStorage.setItem(name, value);\n        }\n\n        return value;\n      }\n    }\n\n    removeCookie(name) {\n      document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/';\n    }\n\n    setCookie(name, value, path, domain, secure, expires) {\n      if (this.model.options.standaloneJsMode || typeof localStorage === 'undefined' || name.indexOf('sti_') === 0 || name.indexOf('login') === 0) {\n        // save to cookies\n        if (value && typeof value === 'string' && value.length >= 4096) {\n          return;\n        }\n\n        const pathName = location.pathname;\n        const expDate = new Date();\n        expDate.setTime(expDate.getTime() + 365 * 24 * 3600 * 1000);\n        document.cookie = name + '=' + escape(value) + '; expires=' + (expires || expDate['toGMTString']()) + (path ? '; path=' + path : '; path=/') + (domain ? '; domain=' + domain : '') + (secure ? '; secure' : '');\n      } else {\n        // save to localstorage\n        localStorage.setItem(name, value);\n      }\n    }\n\n    getNavigatorName() {\n      if (!navigator) {\n        return 'Unknown';\n      }\n\n      const userAgent = navigator.userAgent;\n\n      if (userAgent.indexOf('Edge') >= 0) {\n        return 'Edge';\n      }\n\n      if (userAgent.indexOf('MSIE') >= 0 || userAgent.indexOf('Trident') >= 0) {\n        return 'MSIE';\n      }\n\n      if (userAgent.indexOf('Gecko') >= 0) {\n        if (userAgent.indexOf('Chrome') >= 0) {\n          return 'Chrome';\n        }\n\n        if (userAgent.indexOf('Safari') >= 0) {\n          return 'Safari';\n        }\n\n        return 'Mozilla';\n      }\n\n      if (userAgent.indexOf('Opera') >= 0) {\n        return 'Opera';\n      }\n    }\n\n    isTouchDevice() {\n      return 'ontouchstart' in document.documentElement;\n    }\n\n    isMobileDevice() {\n      return /iPhone|iPad|iPod|Macintosh|Android|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    }\n\n    getHumanFileSize(value, decimals) {\n      const i = Math.floor(Math.log(value) / Math.log(1024));\n      return (value / Math.pow(1024, i)).toFixed(decimals) + ' ' + ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'][i];\n    }\n\n    getZoomMenuItems() {\n      const items = [{\n        name: 'Zoom25',\n        caption: '25%',\n        img: ''\n      }, {\n        name: 'Zoom50',\n        caption: '50%',\n        img: ''\n      }, {\n        name: 'Zoom75',\n        caption: '75%',\n        img: ''\n      }, {\n        name: 'Zoom100',\n        caption: '100%',\n        img: ''\n      }, {\n        name: 'Zoom150',\n        caption: '150%',\n        img: ''\n      }, {\n        name: 'Zoom200',\n        caption: '200%',\n        img: ''\n      }];\n\n      if (this.model.options.toolbar.displayMode !== 'Separated') {\n        items.push({\n          type: 'separator'\n        });\n        items.push({\n          name: 'ZoomOnePage',\n          caption: this.model.loc('ZoomOnePage'),\n          img: 'ZoomOnePage.png'\n        });\n        items.push({\n          name: 'ZoomPageWidth',\n          caption: this.model.loc('ZoomPageWidth'),\n          img: 'ZoomPageWidth.png'\n        });\n      }\n\n      return items;\n    }\n\n    get helpLinks() {\n      return {\n        Print: 'user-manual/index.html?viewer_reports.htm#toolbar',\n        Save: 'user-manual/index.html?viewer_reports.htm#toolbar',\n        SendEmail: 'user-manual/index.html?viewer_reports.htm#toolbar',\n        Bookmarks: 'user-manual/index.html?viewer_reports.htm#toolbar',\n        Parameters: 'user-manual/index.html?viewer_reports.htm#toolbar',\n        FirstPage: 'user-manual/index.html?viewer_reports.htm#statusbar',\n        PrevPage: 'user-manual/index.html?viewer_reports.htm#statusbar',\n        NextPage: 'user-manual/index.html?viewer_reports.htm#statusbar',\n        LastPage: 'user-manual/index.html?viewer_reports.htm#statusbar',\n        FullScreen: 'user-manual/index.html?viewer_reports.htm#toolbar',\n        Zoom: 'user-manual/index.html?viewer_reports.htm#statusbar',\n        ViewMode: 'user-manual/index.html?viewer_reports.htm#displayingmode',\n        Editor: 'user-manual/index.html?viewer_reports.htm#toolbar',\n        Find: 'user-manual/index.html?viewer_reports.htm#searchpanel',\n        DashboardToolbar: 'user-manual/index.html?viewer_dashboards.htm#controlbuttonsofthedashboard',\n        DashboardElementToolbar: 'user-manual/index.html?viewer_dashboards.htm#elementcontrols',\n        DashboardExport: 'user-manual/index.html?exports_dashboards.htm',\n        DashboardPdfExport: 'user-manual/index.html?exports_dashboards.htm#pdfexportsettings',\n        DashboardExcelExport: 'user-manual/index.html?exports_dashboards.htm#excelexportsettings',\n        DashboardImageExport: 'user-manual/index.html?exports_dashboards.htm#imageexportsettings',\n        DashboardDataExport: 'user-manual/index.html?exports_dashboards.htm#exportsettingsofdata'\n      };\n    }\n\n    getBackText(withoutBrackets) {\n      const backText = String.fromCharCode(84) + 'r' + String.fromCharCode(105) + 'a';\n\n      if (withoutBrackets) {\n        return backText + String.fromCharCode(108);\n      }\n\n      return String.fromCharCode(91) + backText + String.fromCharCode(108) + String.fromCharCode(93);\n    }\n\n  }\n\n  HelperService.ɵfac = function HelperService_Factory(t) {\n    return new (t || HelperService)(i0.ɵɵinject(ModelService), i0.ɵɵinject(AnimationService));\n  };\n\n  HelperService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: HelperService,\n    factory: HelperService.ɵfac\n  });\n  return HelperService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet StiHttpClientService = /*#__PURE__*/(() => {\n  class StiHttpClientService {\n    constructor(httpClient, model, helper) {\n      this.httpClient = httpClient;\n      this.model = model;\n      this.helper = helper;\n    }\n\n    post(url, data, responseType = 'json') {\n      var _a, _b, _c, _d;\n\n      const model = this.model;\n      model.showProgress = true;\n      const reqTimeout = ((_b = (_a = this.model.options) === null || _a === void 0 ? void 0 : _a.server) === null || _b === void 0 ? void 0 : _b.requestTimeout) > 0 ? ((_d = (_c = this.model.options) === null || _c === void 0 ? void 0 : _c.server) === null || _d === void 0 ? void 0 : _d.requestTimeout) * 1000 : 1000 * 1000;\n\n      if (responseType === 'json') {\n        return this.httpClient.post(url, this.getFormData(data)).pipe( // retry(3),\n        timeout(reqTimeout), catchError(error => {\n          model.httpError = error;\n          model.showProgress = false;\n          this.model.controls.navigatePanel.enabled = true;\n          this.model.controls.toolbar.enabled = true;\n          return throwError('Something bad happened; please try again later.');\n        }));\n      } else {\n        return this.httpClient.post(url, this.getFormData(data), {\n          responseType: 'text'\n        }).pipe( // retry(3),\n        timeout(reqTimeout), catchError(error => {\n          model.httpError = error;\n          model.showProgress = false;\n          this.model.controls.navigatePanel.enabled = true;\n          this.model.controls.toolbar.enabled = true;\n          return throwError('Something bad happened; please try again later.');\n        }));\n      }\n    }\n\n    getFormData(data) {\n      const formData = new FormData();\n      Object.keys(data).forEach(key => formData.append(key, data[key]));\n      return formData;\n    }\n\n    postForm(url, data, doc, postOnlyData = false) {\n      if (!doc) {\n        doc = document;\n      }\n\n      const form = doc.createElement('FORM');\n      form.setAttribute('method', 'POST');\n      form.setAttribute('action', url);\n      const params = postOnlyData ? data : this.model.createPostParameters(data, true);\n      Object.keys(params).forEach(key => {\n        const paramsField = doc.createElement('INPUT');\n        paramsField.setAttribute('type', 'hidden');\n        paramsField.setAttribute('name', key);\n        paramsField.setAttribute('value', params[key]);\n        form.appendChild(paramsField);\n      });\n\n      if (this.model.options.jsDesigner) {\n        this.model.options.jsDesigner.options.ignoreBeforeUnload = true;\n      }\n\n      doc.body.appendChild(form);\n      form.submit();\n      doc.body.removeChild(form);\n      setTimeout(() => {\n        if (this.model.options.jsDesigner) {\n          this.model.options.jsDesigner.options.ignoreBeforeUnload = false;\n        }\n      }, 500);\n    }\n\n  }\n\n  StiHttpClientService.ɵfac = function StiHttpClientService_Factory(t) {\n    return new (t || StiHttpClientService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(ModelService), i0.ɵɵinject(HelperService));\n  };\n\n  StiHttpClientService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: StiHttpClientService,\n    factory: StiHttpClientService.ɵfac\n  });\n  return StiHttpClientService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet StylesService = /*#__PURE__*/(() => {\n  class StylesService {\n    constructor(model) {\n      this.model = model;\n      this.pagesCss = {};\n    }\n\n    setupStyle(style, id) {\n      var _a;\n\n      if (this.pagesCss[id] == null) {\n        this.pagesCss[id] = document.createElement('STYLE');\n        this.pagesCss[id].id = ((_a = this.model.options) === null || _a === void 0 ? void 0 : _a.viewerId) + 'Styles';\n        this.pagesCss[id].setAttribute('type', 'text/css');\n        this.model.controls.head.appendChild(this.pagesCss[id]);\n      }\n\n      if (this.pagesCss[id].styleSheet) {\n        this.pagesCss[id].styleSheet.cssText = style;\n      } else {\n        this.pagesCss[id].innerHTML = style;\n      }\n    }\n\n    addCustomFontStyles(customFonts) {\n      if (!customFonts) {\n        return;\n      }\n\n      let existsStyles = [];\n\n      try {\n        existsStyles = document.getElementsByTagName('head')[0].getElementsByTagName('style');\n      } catch (e) {}\n\n      customFonts.forEach(customFont => {\n        if (customFont.contentForCss && customFont.originalFontFamily) {\n          const style = document.createElement('style');\n          style.innerHTML = `@font-face {\\r\\nfont-family: '${customFont.originalFontFamily}';\\r\\n src: url(${customFont.contentForCss});\\r\\n }`;\n          let existsThisStyle = false;\n\n          for (const estyle of existsStyles) {\n            if (estyle.innerHTML.indexOf(`font-family: '${customFont.originalFontFamily}'`) > 0) {\n              existsThisStyle = true;\n              break;\n            }\n          }\n\n          if (!existsThisStyle) {\n            document.getElementsByTagName('head')[0].appendChild(style);\n          }\n        }\n      });\n    }\n\n    addChartScript(script) {\n      const currChartScripts = document.getElementById(this.model.options.viewerId + 'chartScriptJsViewer');\n\n      if (currChartScripts) {\n        this.model.controls.head.removeChild(currChartScripts);\n      }\n\n      if (script) {\n        const chartScripts = document.createElement('Script');\n        chartScripts.setAttribute('type', 'text/javascript');\n        chartScripts.id = this.model.options.viewerId + 'chartScriptJsViewer';\n        chartScripts.textContent = script;\n        this.model.controls.head.appendChild(chartScripts);\n      }\n    }\n\n  }\n\n  StylesService.ɵfac = function StylesService_Factory(t) {\n    return new (t || StylesService)(i0.ɵɵinject(ModelService));\n  };\n\n  StylesService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: StylesService,\n    factory: StylesService.ɵfac\n  });\n  return StylesService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet PageService = /*#__PURE__*/(() => {\n  class PageService {\n    constructor(model, helper) {\n      this.model = model;\n      this.helper = helper;\n      Object.keys(model.controls).forEach(k => model.controls[k].pageService = this);\n    }\n\n    calculateLayout() {\n      setTimeout(() => {\n        this.calculateLayoutInner();\n      });\n    }\n\n    calculateLayoutInner() {\n      var _a;\n\n      const reportLayout = new Rectangle();\n      const paramsLayout = new Rectangle();\n\n      if (!this.model.controls.reportPanel.el) {\n        return reportLayout;\n      }\n\n      if (this.model.controls.dashboardsPanel.el) {\n        reportLayout.top += this.model.controls.dashboardsPanel.offsetHeight;\n      }\n\n      if (this.model.reportParams.type === 'Report') {\n        if (this.model.controls.toolbar && this.model.controls.toolbar.visible && !(this.model.options.isMobileDevice && this.model.options.toolbar.autoHide)) {\n          reportLayout.top += this.model.controls.toolbar.offsetHeight;\n        }\n\n        if (this.model.controls.drillDownPanel && this.model.controls.drillDownPanel.visible) {\n          reportLayout.top += this.model.controls.drillDownPanel.offsetHeight;\n        }\n\n        if (this.model.controls.findPanel && this.model.controls.findPanel.visible) {\n          reportLayout.top += this.model.controls.findPanel.offsetHeight;\n        }\n\n        if (this.model.controls.resourcesPanel && this.model.controls.resourcesPanel.visible) {\n          reportLayout.top += this.model.controls.resourcesPanel.offsetHeight;\n        }\n\n        if (this.model.controls.bookmarksPanel && this.model.controls.bookmarksPanel.visible) {\n          reportLayout.left += this.model.options.appearance.bookmarksTreeWidth;\n\n          if (this.model.options.toolbar.displayMode === 'Simple') {\n            reportLayout.left += 2;\n          }\n        }\n\n        if (this.model.controls.navigatePanel && this.model.controls.navigatePanel.visible && !(this.model.options.isMobileDevice && this.model.options.toolbar.autoHide)) {\n          reportLayout.bottom = this.model.controls.navigatePanel.offsetHeight;\n        }\n      }\n\n      if (this.model.controls.parametersPanel && this.model.controls.parametersPanel.visible) {\n        this.model.controls.parametersPanel.layout = paramsLayout;\n        paramsLayout.top = reportLayout.top;\n\n        if (this.model.options.appearance.parametersPanelPosition === 'Left') {\n          paramsLayout.left = reportLayout.left;\n          paramsLayout.width = this.model.controls.parametersPanel.el.nativeElement.firstChild.offsetWidth;\n          reportLayout.left += paramsLayout.width;\n\n          if (this.model.options.toolbar.displayMode === 'Simple') {\n            reportLayout.left += 2;\n          }\n        }\n\n        if (this.model.options.appearance.parametersPanelPosition === 'Top') {\n          paramsLayout.height = this.model.controls.parametersPanel.offsetHeight;\n          reportLayout.top += paramsLayout.height;\n        }\n      }\n\n      if (this.model.controls.bookmarksPanel) {\n        // this.model.controls.bookmarksPanel.layout = new Rectangle();\n        let styleTop = this.model.options.toolbar.visible ? this.model.controls.toolbar.offsetHeight : 0;\n\n        if (this.model.options.isMobileDevice && this.model.options.toolbar.autoHide) {\n          styleTop = 0;\n        }\n\n        styleTop += this.model.controls.parametersPanel.exists && this.model.options.appearance.parametersPanelPosition === 'Top' ? this.model.controls.parametersPanel.offsetHeight : 0;\n        styleTop += this.model.controls.findPanel.exists ? this.model.controls.findPanel.offsetHeight : 0;\n        styleTop += this.model.controls.drillDownPanel.exists ? this.model.controls.drillDownPanel.offsetHeight : 0;\n        styleTop += this.model.controls.resourcesPanel.exists ? this.model.controls.resourcesPanel.offsetHeight : 0;\n        this.model.controls.bookmarksPanel.layout.top = styleTop; // reportLayout.top;\n      }\n\n      if (this.model.options.toolbar.displayMode === 'Simple' && reportLayout.top > 0) {\n        reportLayout.top += 2;\n      }\n\n      if (((_a = this.model.controls.reportPanel.el) === null || _a === void 0 ? void 0 : _a.nativeElement.style.position) === 'relative') {\n        reportLayout.top = paramsLayout.height;\n      }\n\n      const reportMargins = {\n        top: parseInt(this.model.controls.reportPanel.el.nativeElement.style.marginTop ? this.model.controls.reportPanel.el.nativeElement.style.marginTop : 0),\n        right: parseInt(this.model.controls.reportPanel.el.nativeElement.style.marginRight ? this.model.controls.reportPanel.el.nativeElement.style.marginRight : 0),\n        bottom: parseInt(this.model.controls.reportPanel.el.nativeElement.style.marginBottom ? this.model.controls.reportPanel.el.nativeElement.style.marginBottom : 0),\n        left: parseInt(this.model.controls.reportPanel.el.nativeElement.style.marginLeft ? this.model.controls.reportPanel.el.nativeElement.style.marginLeft : 0)\n      };\n      reportLayout.width = this.model.controls.reportPanel.offsetWidth - reportLayout.left - reportLayout.right + reportMargins.left + reportMargins.right;\n      reportLayout.height = this.model.controls.reportPanel.el.nativeElement.style.position === 'absolute' ? this.model.controls.reportPanel.offsetHeight - reportLayout.top - reportLayout.bottom + reportMargins.top + reportMargins.bottom : Math.round(reportLayout.width * 0.56); // use 16:9 aspect ratio for automatic height\n\n      this.model.controls.reportPanel.layout = reportLayout;\n    }\n\n    getZoomByPageWidth() {\n      var _a, _b;\n\n      const pageNumber = this.model.reportParams.viewMode === 'SinglePage' ? 0 : this.model.reportParams.pageNumber || 0;\n      return (this.model.controls.reportPanel.layout.width - 40) * this.getZoom() / (((_b = (_a = this.model.pages[pageNumber]) === null || _a === void 0 ? void 0 : _a.page) === null || _b === void 0 ? void 0 : _b.offsetWidth) || 1);\n    }\n\n    getZoomByPageHeight() {\n      var _a, _b;\n\n      const pageNumber = this.model.reportParams.viewMode === 'SinglePage' ? 0 : this.model.reportParams.pageNumber || 0;\n      return (this.model.controls.reportPanel.layout.height - 40) * this.getZoom() / (((_b = (_a = this.model.pages[pageNumber]) === null || _a === void 0 ? void 0 : _a.page) === null || _b === void 0 ? void 0 : _b.offsetHeight) || 1);\n    }\n\n    getZoom() {\n      return this.model.reportParams.zoom < 0 ? 100 : this.model.reportParams.zoom;\n    }\n\n  }\n\n  PageService.ɵfac = function PageService_Factory(t) {\n    return new (t || PageService)(i0.ɵɵinject(ModelService), i0.ɵɵinject(HelperService));\n  };\n\n  PageService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: PageService,\n    factory: PageService.ɵfac\n  });\n  return PageService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet MouseService = /*#__PURE__*/(() => {\n  class MouseService {\n    constructor() {\n      this.documetMouseDown = new Subject();\n      this.documetMouseMove = new Subject();\n      this.documetMouseUp = new Subject();\n      document.addEventListener('mouseup', event => {\n        this.documetMouseUp.next(event);\n      });\n      document.addEventListener('mousemove', event => {\n        this.documetMouseMove.next(event);\n      });\n      document.addEventListener('mousedown', event => {\n        this.documetMouseDown.next(event);\n      });\n    }\n\n    getDocumentMouseUp() {\n      return this.documetMouseUp.asObservable();\n    }\n\n    getDocumentMouseMove() {\n      return this.documetMouseMove.asObservable();\n    }\n\n    getDocumentMouseDown() {\n      return this.documetMouseDown.asObservable();\n    }\n\n  }\n\n  MouseService.ɵfac = function MouseService_Factory(t) {\n    return new (t || MouseService)();\n  };\n\n  MouseService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MouseService,\n    factory: MouseService.ɵfac\n  });\n  return MouseService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nclass Menu {\n  constructor() {}\n\n  get state() {\n    return this._state;\n  }\n\n  set state(value) {\n    let oldState = this._state;\n    this._state = value;\n\n    if (oldState != 'initialDown' && oldState != '' && value == 'initialDown' && this.onCloseEvent) {\n      this.onCloseEvent();\n    }\n  }\n\n}\n\nlet MenuService = /*#__PURE__*/(() => {\n  class MenuService {\n    constructor(helper, model, mouseService) {\n      this.helper = helper;\n      this.model = model;\n      this.mouseService = mouseService;\n      this.VERTICAL_MENU_NAME = 'verticalMenu';\n      this.menuMouseUp = '';\n      this._menus = {};\n      this.subject = new Subject();\n      this.mouseService.getDocumentMouseUp().subscribe(event => {\n        if (this.menuMouseUp === '') {\n          this.closeAllMenus();\n        } else if (this.menuMouseUp !== 'datePickerMenu' && this.menuMouseUp !== this.VERTICAL_MENU_NAME) {\n          const datePicker = Object.values(this._menus).find(m => m.type === 'datePickerMenu');\n\n          if (datePicker != null) {\n            datePicker.state = 'initialDown';\n          }\n        }\n\n        this.menuMouseUp = '';\n      });\n    }\n\n    getVisibility() {\n      return this.subject.asObservable();\n    }\n\n    addMenu(menu) {\n      let inMenu = new Menu();\n\n      for (let key in menu) {\n        inMenu[key] = menu[key];\n      }\n\n      this._menus[menu.name] = inMenu;\n    }\n\n    closeAllMenus() {\n      Object.values(this._menus).forEach(m => m.state = m.type === 'buttonMenu' && this.model.options.isMobileDevice ? 'initialLeft' : 'initialDown');\n    }\n\n    isMenuVisible() {\n      return Object.values(this._menus).find(m => m.state === 'expanded') != null;\n    }\n\n    showMenu(menuName) {\n      const menu = this._menus[menuName];\n\n      if ((menu === null || menu === void 0 ? void 0 : menu.type) !== 'datePickerMenu' && (menu === null || menu === void 0 ? void 0 : menu.type) !== this.VERTICAL_MENU_NAME) {\n        this.closeAllMenus();\n      }\n\n      if (menu) {\n        menu.sizeStyle = 'opacity: 0;';\n\n        if (this.model.options.isMobileDevice && menu.type === 'buttonMenu') {\n          setTimeout(() => {\n            const innerContent = menu.innerContent.nativeElement;\n            menu.left = 0;\n            menu.top = 0;\n            menu.width = innerContent.offsetWidth;\n            menu.height = innerContent.offsetHeight;\n            menu.state = 'initialLeft';\n            menu.sizeStyle = null;\n            setTimeout(() => {\n              menu.state = 'expanded';\n            });\n          });\n        } else {\n          setTimeout(() => {\n            menu.sizeStyle = null;\n            this.showMenuInternal(menu);\n          });\n        }\n\n        this.subject.next(menu);\n      }\n    }\n\n    showMenuInternal(menu) {\n      const isVertMenu = true;\n      const parentButton = menu.parent.nativeElement;\n      const innerContent = menu.innerContent.nativeElement;\n      const offsetHeight = menu.menuEl.nativeElement.offsetHeight;\n      const style = menu.menuEl.nativeElement.style;\n      const coords = this.getMenuCoordinates(parentButton, innerContent, offsetHeight, style, isVertMenu);\n      menu.left = coords.left;\n      menu.top = coords.top;\n      menu.width = menu.width || coords.width;\n      menu.height = coords.height;\n      menu.state = coords.state;\n      setTimeout(() => {\n        menu.state = 'expanded';\n      });\n    }\n\n    getMenuCoordinates(parentButton, innerContent, offsetHeight, style, isVertMenu) {\n      const menu = {};\n      const browserWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n      const browserHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n      const rightAlign = false;\n      const mainClassName = 'stiJsViewerMainPanel';\n      let animDirect = 'Down';\n      const leftOffset = 0;\n      let left = isVertMenu ? this.model.options.appearance.rightToLeft || rightAlign ? this.helper.findPosX(parentButton, mainClassName) - innerContent.offsetWidth + parentButton.offsetWidth - (leftOffset || 0) : this.helper.findPosX(parentButton, mainClassName) - (leftOffset || 0) : animDirect === 'Right' ? this.helper.findPosX(parentButton, mainClassName) + parentButton.offsetWidth + 2 : this.helper.findPosX(parentButton, mainClassName) - parentButton.offsetWidth - 2;\n\n      if (left + innerContent.offsetWidth > browserWidth) {\n        left = browserWidth - innerContent.offsetWidth - 15;\n      }\n\n      if (left < 0) {\n        left = 10;\n      }\n\n      menu.left = left;\n\n      if (animDirect === 'Down' && this.helper.findPosY(parentButton) + parentButton.offsetHeight + innerContent.offsetHeight > browserHeight && this.helper.findPosY(parentButton) - innerContent.offsetHeight > 0) {\n        animDirect = 'Up';\n      }\n\n      menu.top = isVertMenu ? animDirect === 'Down' ? this.helper.findPosY(parentButton, mainClassName) + parentButton.offsetHeight + 2 : this.helper.findPosY(parentButton, mainClassName) - offsetHeight : this.helper.findPosY(parentButton, mainClassName) + parentButton.offsetHeight + innerContent.offsetHeight > browserHeight && browserHeight - innerContent.offsetHeight - 10 > 0 ? browserHeight - innerContent.offsetHeight - 10 : this.helper.findPosY(parentButton, mainClassName);\n      menu.width = innerContent.offsetWidth;\n      menu.height = innerContent.offsetHeight;\n\n      if (menu.top + innerContent.offsetHeight > browserHeight) {\n        menu.top = browserHeight - innerContent.offsetHeight - 10;\n      }\n\n      if (menu.top < 0) {\n        menu.top = 10;\n      }\n\n      menu.state = animDirect === 'Down' ? 'initialDown' : 'initialUp';\n      return menu;\n    }\n\n    get menus() {\n      return Object.values(this._menus);\n    }\n\n    getVerticalMenu() {\n      return this._menus[this.VERTICAL_MENU_NAME];\n    }\n\n    getMenu(name) {\n      return this._menus[name];\n    }\n\n  }\n\n  MenuService.ɵfac = function MenuService_Factory(t) {\n    return new (t || MenuService)(i0.ɵɵinject(HelperService), i0.ɵɵinject(ModelService), i0.ɵɵinject(MouseService));\n  };\n\n  MenuService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MenuService,\n    factory: MenuService.ɵfac\n  });\n  return MenuService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet FormService = /*#__PURE__*/(() => {\n  class FormService {\n    constructor(mouseService, menuService, helper, model) {\n      this.mouseService = mouseService;\n      this.menuService = menuService;\n      this.helper = helper;\n      this.model = model;\n      this.mouseX = 0;\n      this.mouseY = 0;\n      this.formX = 0;\n      this.formY = 0;\n      mouseService.getDocumentMouseMove().subscribe(event => {\n        this.move(event);\n      });\n      mouseService.getDocumentMouseUp().subscribe(event => {\n        this.stopMove();\n      });\n    }\n\n    get form() {\n      return this.model.form;\n    }\n\n    set form(form) {\n      this.model.form = form;\n    }\n\n    showForm(name, formData) {\n      this.form = {\n        name,\n        left: 0,\n        top: 0,\n        isMooving: false,\n        formData\n      };\n    }\n\n    closeForm(name) {\n      var _a, _b;\n\n      if (((_a = this.form) === null || _a === void 0 ? void 0 : _a.name) === 'notificationForm' && ((_b = this.model.notificationFormOptions) === null || _b === void 0 ? void 0 : _b.action)) {\n        this.model.notificationFormOptions.action();\n      }\n\n      this.form = null;\n    }\n\n    centerForm(baseForm, defaultTop) {\n      if (this.form != null) {\n        setTimeout(() => {\n          const position = this.helper.setObjectToCenter(baseForm.element.nativeElement, defaultTop);\n          this.form.left = position.left;\n          this.form.top = position.top;\n          this.form.level = baseForm.level;\n        });\n      }\n    }\n\n    startMove(name, event, touchEvent) {\n      if (event || touchEvent && touchEvent.changedTouches.length > 0) {\n        this.formX = this.form.left;\n        this.formY = this.form.top;\n        this.mouseX = (event === null || event === void 0 ? void 0 : event.screenX) || touchEvent.changedTouches[0].screenX;\n        this.mouseY = (event === null || event === void 0 ? void 0 : event.screenY) || touchEvent.changedTouches[0].screenY;\n        this.form.isMooving = true;\n      }\n    }\n\n    move(event) {\n      var _a;\n\n      if ((_a = this.form) === null || _a === void 0 ? void 0 : _a.isMooving) {\n        const screenX = event.screenX || (event.changedTouches.length > 0 ? event.changedTouches[0].screenX : -1);\n        const screenY = event.screenY || (event.changedTouches.length > 0 ? event.changedTouches[0].screenY : -1);\n        this.form.left = this.formX + (screenX - this.mouseX);\n        this.form.top = this.formY + (screenY - this.mouseY);\n        this.menuService.closeAllMenus();\n      }\n    }\n\n    stopMove() {\n      var _a;\n\n      if ((_a = this.form) === null || _a === void 0 ? void 0 : _a.isMooving) {\n        this.form.isMooving = false;\n      }\n    }\n\n  }\n\n  FormService.ɵfac = function FormService_Factory(t) {\n    return new (t || FormService)(i0.ɵɵinject(MouseService), i0.ɵɵinject(MenuService), i0.ɵɵinject(HelperService), i0.ɵɵinject(ModelService));\n  };\n\n  FormService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: FormService,\n    factory: FormService.ɵfac\n  });\n  return FormService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet FullScreenService = /*#__PURE__*/(() => {\n  class FullScreenService {\n    constructor(model, pageService) {\n      this.model = model;\n      this.pageService = pageService;\n    }\n\n    changeFullScreenMode(fullScreenMode) {\n      this.model.options.appearance.fullScreenMode = fullScreenMode;\n      const viewer = this.model.controls.viewer.el.nativeElement;\n\n      if (fullScreenMode) {\n        this.model.fullScreenOptions = {\n          scrollbarsMode: this.model.options.appearance.scrollbarsMode,\n          zIndex: viewer.style.zIndex,\n          position: viewer.style.position,\n          width: viewer.style.width,\n          height: viewer.style.height,\n          overflow: document.body.style.overflow\n        };\n        this.model.options.appearance.scrollbarsMode = true;\n        viewer.style.zIndex = '1000000';\n        viewer.style.position = this.model.options.reportDesignerMode ? 'absolute' : 'fixed';\n        viewer.style.width = null;\n        viewer.style.height = null;\n        document.body.style.overflow = 'hidden';\n      } else if (this.model.fullScreenOptions) {\n        this.model.options.appearance.scrollbarsMode = this.model.fullScreenOptions.scrollbarsMode;\n        viewer.style.zIndex = this.model.fullScreenOptions.zIndex;\n        viewer.style.position = this.model.fullScreenOptions.position;\n        viewer.style.width = this.model.fullScreenOptions.width;\n        viewer.style.height = this.model.fullScreenOptions.height;\n        document.body.style.overflow = this.model.fullScreenOptions.overflow;\n        this.model.fullScreenOptions = null;\n      }\n\n      this.pageService.calculateLayout();\n    }\n\n  }\n\n  FullScreenService.ɵfac = function FullScreenService_Factory(t) {\n    return new (t || FullScreenService)(i0.ɵɵinject(ModelService), i0.ɵɵinject(PageService));\n  };\n\n  FullScreenService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: FullScreenService,\n    factory: FullScreenService.ɵfac\n  });\n  return FullScreenService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ControllerService = /*#__PURE__*/(() => {\n  class ControllerService {\n    constructor(httpClient, model, stylesService, pageService, helper, formService, fullScreenService, menuService, styleService, animationService) {\n      this.httpClient = httpClient;\n      this.model = model;\n      this.stylesService = stylesService;\n      this.pageService = pageService;\n      this.helper = helper;\n      this.formService = formService;\n      this.fullScreenService = fullScreenService;\n      this.menuService = menuService;\n      this.styleService = styleService;\n      this.animationService = animationService;\n      this.subject = new Subject();\n      this.actionSubject = new Subject();\n      setInterval(() => {\n        var _a, _b;\n\n        if (this.model.httpError) {\n          if ((_a = this.model.httpError.error) === null || _a === void 0 ? void 0 : _a.text) {\n            this.showError((_b = this.model.httpError.error) === null || _b === void 0 ? void 0 : _b.text);\n          } else if (this.model.httpError.message) {\n            this.showError(null, this.model.httpError.message);\n          } else if (this.model.httpError.error instanceof ErrorEvent) {\n            this.showError(this.model.httpError.error.message);\n          }\n\n          this.model.httpError = null;\n        }\n\n        if (this.model.navigateNode) {\n          this.postBookmarkNodeAction(this.model.navigateNode);\n          this.model.navigateNode = null;\n        }\n      }, 250);\n      this.setupHandlers();\n    }\n\n    setupHandlers() {\n      this.getMessage().subscribe(message => {\n        switch (message.action) {\n          case 'GetReport':\n          case 'OpenReport':\n            setTimeout(() => {\n              var _a, _b;\n\n              this.styleService.addCustomFontStyles((_a = message.data) === null || _a === void 0 ? void 0 : _a.customFonts);\n\n              if (this.model.options.appearance.fullScreenMode) {\n                this.fullScreenService.changeFullScreenMode(true);\n              }\n\n              if (((_b = message.data) === null || _b === void 0 ? void 0 : _b.stimulsoftFontContent) && !this.model.options.stimulsoftFontContentLoaded) {\n                this.model.options.stimulsoftFontContentLoaded = message.data.stimulsoftFontContent;\n                this.styleService.addCustomFontStyles([{\n                  contentForCss: message.data.stimulsoftFontContent,\n                  originalFontFamily: 'Stimulsoft'\n                }]);\n              }\n            });\n            break;\n        }\n      });\n      this.model.controls.bookmarksPanel.getVisibility().subscribe(value => {\n        if (value && this.model.options.isMobileDevice) {\n          this.model.controls.parametersPanel.visible = false;\n        }\n\n        if (value) {\n          this.hideToolbar();\n        } else {\n          this.showToolbar();\n        }\n      });\n      this.model.controls.parametersPanel.getVisibility().subscribe(value => {\n        if (value && this.model.options.isMobileDevice) {\n          this.model.controls.bookmarksPanel.visible = false;\n        }\n\n        if (value) {\n          this.hideToolbar();\n        } else {\n          this.showToolbar();\n        }\n      });\n      this.menuService.getVisibility().subscribe(menu => {\n        this.hideToolbar();\n      });\n    }\n\n    hideToolbar() {\n      if (this.model.options.isMobileDevice && this.model.options.toolbar.autoHide) {\n        this.model.controls.toolbar.visible = false;\n        this.model.controls.navigatePanel.visible = false;\n      }\n    }\n\n    showToolbar() {\n      if (this.model.options.isMobileDevice && this.model.options.toolbar.autoHide) {\n        this.model.controls.toolbar.visible = true;\n        this.model.controls.navigatePanel.visible = true;\n        setTimeout(() => {\n          this.keepToolbar();\n        }, 300);\n      }\n    }\n\n    keepToolbar() {\n      if (this.model.options.isMobileDevice && this.model.options.toolbar.autoHide) {\n        clearTimeout(this.model.toolbarHideTimer);\n        this.model.toolbarHideTimer = setTimeout(() => {\n          this.hideToolbar();\n        }, 4000);\n      }\n    }\n\n    getMessage() {\n      return this.subject.asObservable();\n    }\n\n    getActionMessage() {\n      return this.actionSubject.asObservable();\n    }\n\n    post(action, cAction, postData, responseType = 'json', subAction) {\n      this.model.controls.navigatePanel.enabled = false;\n      this.model.controls.toolbar.enabled = false;\n      let url;\n\n      if (!cAction) {\n        url = this.model.requestUrl.replace('{action}', action === 'GetReport' || this.model.options.server.cacheMode === 'None' ? this.model.options.actions.getReport : this.model.options.actions.viewerEvent);\n      } else {\n        url = this.model.requestUrl.replace('{action}', cAction);\n      }\n\n      if (postData) {\n        postData.action = action;\n      } else {\n        postData = {\n          action\n        };\n      }\n\n      this.httpClient.post(url, this.model.createPostParameters(postData), responseType).subscribe(data => {\n        var _a;\n\n        this.model.showProgress = false;\n        this.model.controls.navigatePanel.enabled = true;\n        this.model.controls.toolbar.enabled = true;\n\n        if (data === 'ServerError:The report is not specified.' && ((_a = this.model.options) === null || _a === void 0 ? void 0 : _a.isReportRecieved)) {\n          this.model.options.isReportRecieved = false;\n          this.model.reportParams.prevPageNumber = this.model.reportParams.pageNumber;\n          this.post('GetReport');\n          return;\n        }\n\n        if (data) {\n          this.model.reportParams = data;\n          this.startRefreshReportTimer(data.refreshTime);\n\n          if (data.reportDisplayMode) {\n            this.model.options.displayModeFromReport = data.reportDisplayMode;\n          }\n        }\n\n        this.subject.next({\n          action,\n          data,\n          subAction\n        });\n      });\n    }\n\n    loadViewer() {\n      const url = this.model.requestUrl.replace('{action}', this.model.action);\n      this.httpClient.post(url, this.model.createPostParameters({\n        action: 'AngularViewerData'\n      }, true, false), 'json').subscribe(data => {\n        this.model.clear();\n        this.stylesService.setupStyle(atob(data['styles']), 'viewer');\n        this.model.options = data;\n        this.checkTrExp();\n        this.initAutoUpdateCache();\n        this.subject.next({\n          action: 'viewer_loaded'\n        });\n        this.getReport();\n      });\n    }\n\n    getReport() {\n      this.model.options.paramsVariablesStartValues = null;\n      this.post('GetReport');\n    }\n\n    getPages() {\n      this.post('GetPages');\n    }\n\n    postExport(format, settings, elementName, isDashboardExport = false) {\n      const data = {\n        action: isDashboardExport ? 'ExportDashboard' : 'ExportReport',\n        exportFormat: format,\n        exportSettings: settings,\n        elementName\n      };\n      const doc = settings && settings.OpenAfterExport && this.model.options.appearance.openExportedReportWindow === '_blank' ? this.helper.openNewWindow('about:blank', '_blank').document : null;\n      const url = this.model.requestUrl;\n      this.httpClient.postForm(url.replace('{action}', this.model.options.actions.exportReport), data, doc);\n      this.actionSubject.next({\n        action: 'ExportReport',\n        data\n      });\n    }\n\n    loadFile(fileName, content) {\n      if (typeof content !== 'string' || content === '') {\n        return;\n      }\n\n      if (content.indexOf('<?xml') === 0 || content.indexOf('{') === 0) {\n        content = btoa(content);\n      }\n\n      const data = {\n        action: 'OpenReport',\n        openingFileName: fileName || 'Report.mdc',\n        base64Data: content.indexOf('base64,') > 0 ? content.substr(content.indexOf('base64,') + 7) : content\n      };\n\n      if (fileName && (fileName.toLowerCase().indexOf('.mdx') >= 0 || fileName.toLowerCase().indexOf('.mrx') >= 0)) {\n        this.formService.showForm('passwordForm', data);\n      } else {\n        this.postOpen(data);\n      }\n    }\n\n    postOpen(data) {\n      this.model.clearViewerState();\n      this.model.reportParams.reportFileName = data.openingFileName;\n      this.post('OpenReport', this.model.options.actions.openReport, data);\n    }\n\n    action(event) {\n      switch (event.name) {\n        case 'Find':\n          this.model.controls.findPanel.visible = !this.model.controls.findPanel.visible;\n          return;\n\n        case 'Bookmarks':\n          this.model.controls.bookmarksPanel.visible = !this.model.controls.bookmarksPanel.visible;\n          return;\n\n        case 'Parameters':\n          this.model.controls.parametersPanel.visible = !this.model.controls.parametersPanel.visible;\n          return;\n\n        case 'BookmarkAction':\n          if (this.model.reportParams.pageNumber === event.bookmarkPage || this.model.reportParams.viewMode !== 'SinglePage') {\n            this.helper.scrollToAnchor(event.bookmarkAnchor, event.componentGuid);\n            return;\n          } else {\n            this.model.reportParams.pageNumber = event.bookmarkPage;\n            this.model.options.bookmarkAnchor = event.bookmarkAnchor;\n            this.model.options.componentGuid = event.componentGuid;\n          }\n\n          break;\n\n        case 'GoToPage':\n          this.model.reportParams.pageNumber = event.value;\n          this.scrollToPage();\n          break;\n\n        case 'FirstPage':\n          this.model.reportParams.pageNumber = 0;\n          this.scrollToPage();\n          break;\n\n        case 'PrevPage':\n          this.model.reportParams.pageNumber = Math.max(0, this.model.reportParams.pageNumber - 1);\n          this.scrollToPage();\n          break;\n\n        case 'NextPage':\n          this.model.reportParams.pageNumber = Math.min(this.model.reportParams.pagesCount - 1, this.model.reportParams.pageNumber + 1);\n          this.scrollToPage();\n          break;\n\n        case 'LastPage':\n          this.model.reportParams.pageNumber = this.model.reportParams.pagesCount - 1;\n          this.scrollToPage();\n          break;\n\n        case 'ViewModeSinglePage':\n          this.model.reportParams.viewMode = 'SinglePage';\n          break;\n\n        case 'ViewModeContinuous':\n          this.model.reportParams.viewMode = 'Continuous';\n          break;\n\n        case 'ViewModeMultiplePages':\n          this.model.reportParams.viewMode = 'MultiplePages';\n          break;\n\n        case 'Zoom25':\n          this.model.reportParams.zoom = 25;\n          break;\n\n        case 'Zoom50':\n          this.model.reportParams.zoom = 50;\n          break;\n\n        case 'Zoom75':\n          this.model.reportParams.zoom = 75;\n          break;\n\n        case 'Zoom100':\n          this.model.reportParams.zoom = 100;\n          break;\n\n        case 'Zoom150':\n          this.model.reportParams.zoom = 150;\n          break;\n\n        case 'Zoom200':\n          this.model.reportParams.zoom = 200;\n          break;\n\n        case 'ZoomOnePage':\n        case 'ZoomPageWidth':\n          this.model.reportParams.zoom = event.name === 'ZoomPageWidth' ? this.pageService.getZoomByPageWidth() : this.pageService.getZoomByPageHeight();\n          break;\n\n        case 'Submit':\n          this.model.reportParams.editableParameters = null;\n\n          if (this.model.reportParams.type === 'Report') {\n            this.model.reportParams.pageNumber = 0;\n          }\n\n          if (this.model.options.isMobileDevice) {\n            this.model.controls.parametersPanel.visible = false;\n          }\n\n          this.actionSubject.next({\n            action: 'Variables'\n          });\n          return;\n\n        case 'Reset':\n          if (this.model.options.paramsVariablesStartValues) {\n            this.model.options.paramsVariables = this.model.options.paramsVariablesStartValues;\n          }\n\n          this.actionSubject.next({\n            action: 'Reset'\n          });\n          return;\n\n        case 'Editor':\n          this.actionSubject.next({\n            action: 'Editor',\n            data: {}\n          });\n          return;\n\n        case 'Resources':\n          this.model.controls.resourcesPanel.visible = !this.model.controls.resourcesPanel.visible;\n          return;\n\n        case 'PrintPdf':\n        case 'PrintWithPreview':\n        case 'PrintWithoutPreview':\n          this.actionSubject.next({\n            action: 'Print',\n            data: {\n              format: event.name\n            }\n          });\n          return;\n\n        case 'Print':\n          let format = 'PrintPdf';\n\n          switch (this.model.options.toolbar.printDestination) {\n            case 'Pdf':\n              format = 'PrintPdf';\n              break;\n\n            case 'Direct':\n              format = 'PrintWithoutPreview';\n              break;\n\n            case 'WithPreview':\n              format = 'PrintWithPreview';\n              break;\n          }\n\n          this.actionSubject.next({\n            action: 'Print',\n            data: {\n              format\n            }\n          });\n          return;\n\n        case 'Open':\n          this.model.openDialogFileMask = null;\n          setTimeout(() => {\n            this.model.openDialogFileMask = '.mdc,.mdz,.mdx,.mrt,.mrz,.mrx';\n          });\n          return;\n\n        case 'ResourceView':\n          this.postReportResource(event.value.name, 'View');\n          return;\n\n        case 'ResourceSaveFile':\n          this.postReportResource(event.value.name, 'SaveFile');\n          return;\n\n        case 'FullScreen':\n          this.fullScreenService.changeFullScreenMode(!this.model.options.appearance.fullScreenMode);\n          return;\n\n        case 'About':\n          this.actionSubject.next({\n            action: 'About'\n          });\n          return;\n\n        case 'Pin':\n          this.model.options.toolbar.autoHide = !this.model.options.toolbar.autoHide;\n          this.pageService.calculateLayout();\n\n          if (this.model.options.toolbar.autoHide) {\n            setTimeout(() => {\n              this.hideToolbar();\n            }, 200);\n          }\n\n          return;\n\n        case 'Design':\n          this.actionSubject.next({\n            action: 'Design'\n          });\n          break;\n\n        default:\n          if (event.name.indexOf('saveMenu') === 0) {\n            this.actionSubject.next({\n              action: 'Export',\n              data: {\n                format: event.name.substr(8)\n              }\n            });\n            return;\n          } else if (event.name.indexOf('sendEmailMenu') === 0) {\n            this.actionSubject.next({\n              action: 'SendEmail',\n              data: {\n                format: event.name.substr(13)\n              }\n            });\n            return;\n          }\n\n      }\n\n      this.getPages();\n    }\n\n    scrollToPage() {\n      if (this.model.reportParams.viewMode === 'Continuous') {\n        let panel = this.model.controls.reportPanel.el.nativeElement;\n        const endTime = new Date().getTime() + this.model.options.scrollDuration;\n        let targetTop = this.model.pages[this.model.reportParams.pageNumber].page.offsetTop;\n        this.animationService.showAnimationForScroll(panel, targetTop, endTime, () => {});\n      }\n    }\n\n    showError(message, messageText) {\n      let type = 'Error'; // Check for error in 'ServerError:' string format\n\n      if (message != null && typeof message === 'string' && message.substr(0, 12) === 'ServerError:') {\n        if (message.length <= 13) {\n          messageText = 'An unknown error occurred (the server returned an empty value).';\n        } else {\n          messageText = message.substr(12);\n        }\n      } // Check for error in JSON format\n\n\n      if (message != null && message.success === false && message.type && message.text) {\n        type = message.type;\n        messageText = message.text;\n      }\n\n      this.model.errorMessage = {\n        error: 'Unknown error',\n        type\n      };\n\n      if (messageText != null) {\n        if (messageText === 'The report is not specified.' && !this.model.options.appearance.showReportIsNotSpecifiedMessage) {\n          return true;\n        }\n\n        this.model.errorMessage = {\n          error: messageText.replace('\\n', '<br>'),\n          type\n        };\n\n        if (this.model.images) {\n          this.formService.showForm('errorMessageForm');\n        } else {\n          alert(messageText);\n        }\n\n        this.actionSubject.next({\n          action: 'Error'\n        });\n        return true;\n      }\n\n      return false;\n    }\n\n    postReportResource(resourceName, viewType) {\n      const data = {\n        action: 'ReportResource',\n        reportResourceParams: {\n          resourceName,\n          viewType\n        }\n      };\n      const doc = viewType === 'View' ? this.helper.openNewWindow('about:blank', '_blank').document : null;\n      const url = this.model.requestUrl;\n      this.httpClient.postForm(url.replace('{action}', this.model.options.actions.viewerEvent), data, doc);\n    }\n\n    postBookmarkNodeAction(node) {\n      node.selected = true;\n      this.action({\n        name: 'BookmarkAction',\n        bookmarkPage: node.page,\n        bookmarkAnchor: node.url.replace(/\\\\\\'/g, '\\'').substr(1),\n        componentGuid: node.compunentGuid\n      });\n    }\n\n    viewerResized() {\n      this.menuService.closeAllMenus();\n    }\n\n    initAutoUpdateCache() {\n      if (this.model.options.server.allowAutoUpdateCache) {\n        if (this.model.timerAutoUpdateCache) {\n          clearInterval(this.model.timerAutoUpdateCache);\n        }\n\n        this.model.timerAutoUpdateCache = setInterval(() => this.post('UpdateCache'), this.model.options.server.timeoutAutoUpdateCache);\n      }\n    }\n\n    startRefreshReportTimer(timeout) {\n      if (this.model.refreshReportTimer != null) {\n        clearInterval(this.model.refreshReportTimer);\n        this.model.refreshReportTimer = null;\n      }\n\n      if (timeout && timeout > 0) {\n        this.model.refreshReportTimer = setInterval(() => {\n          if (!this.model.showProgress) {\n            this.post('Refresh');\n          }\n        }, timeout * 1000);\n      }\n    }\n\n    checkTrExp() {\n      if (!this.model.options.cloudMode && !this.model.options.serverMode && !this.model.options.standaloneJsMode && !this.model.options.reportDesignerMode && !this.model.options.alternateValid) {\n        let buildDate = new Date();\n\n        try {\n          /*if (this.model.options.jsMode && typeof Stimulsoft != 'undefined') {\r\n            let innerDate = Stimulsoft.StiVersion.created.innerDate;\r\n            if (innerDate['getFullYear'] && innerDate.getFullYear() > 2017)\r\n              buildDate = Stimulsoft.StiVersion.created.innerDate;\r\n          }\r\n          else*/\n          if (this.model.options.buildDate) {\n            buildDate = new Date(this.model.options.buildDate);\n          }\n        } catch (e) {\n          buildDate = new Date();\n        }\n\n        const trDays = Math.floor((new Date().getTime() - buildDate.getTime()) / 1000 / 60 / 60 / 24);\n\n        if (trDays > 60) {\n          setTimeout(() => {\n            const message = trDays > 120 ? this.model.loc('NoticesYourTrialHasExpired') : this.model.loc('NoticesYouUsingTrialVersion');\n            const image = 'Notifications.Warning.png';\n            const buttonCaption = this.model.loc('ButtonOk');\n            let cancelAction;\n            let action;\n\n            if (trDays > 120) {\n              action = cancelAction = () => {\n                window.location.href = 'https://www.stimulsoft.com/en/online-store';\n              };\n            }\n\n            this.model.notificationFormOptions = {\n              message,\n              image,\n              buttonCaption,\n              cancelAction,\n              action\n            };\n            this.formService.showForm('notificationForm');\n          }, 3000);\n        }\n      }\n    }\n\n  }\n\n  ControllerService.ɵfac = function ControllerService_Factory(t) {\n    return new (t || ControllerService)(i0.ɵɵinject(StiHttpClientService), i0.ɵɵinject(ModelService), i0.ɵɵinject(StylesService), i0.ɵɵinject(PageService), i0.ɵɵinject(HelperService), i0.ɵɵinject(FormService), i0.ɵɵinject(FullScreenService), i0.ɵɵinject(MenuService), i0.ɵɵinject(StylesService), i0.ɵɵinject(AnimationService));\n  };\n\n  ControllerService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ControllerService,\n    factory: ControllerService.ɵfac\n  });\n  return ControllerService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet CollectionsService = /*#__PURE__*/(() => {\n  class CollectionsService {\n    constructor(model) {\n      this.model = model;\n    }\n\n    getImageTypesItems() {\n      const items = [];\n\n      if (this.model.options.exports.showExportToImageBmp) {\n        items.push(new Item('Bmp', 'Bmp', null, 'Bmp'));\n      }\n\n      if (this.model.options.exports.showExportToImageGif) {\n        items.push(new Item('Gif', 'Gif', null, 'Gif'));\n      }\n\n      if (this.model.options.exports.showExportToImageJpeg) {\n        items.push(new Item('Jpeg', 'Jpeg', null, 'Jpeg'));\n      }\n\n      if (this.model.options.exports.showExportToImagePcx) {\n        items.push(new Item('Pcx', 'Pcx', null, 'Pcx'));\n      }\n\n      if (this.model.options.exports.showExportToImagePng) {\n        items.push(new Item('Png', 'Png', null, 'Png'));\n      }\n\n      if (this.model.options.exports.showExportToImageTiff) {\n        items.push(new Item('Tiff', 'Tiff', null, 'Tiff'));\n      }\n\n      if (this.model.options.exports.showExportToImageMetafile) {\n        items.push(new Item('Emf', 'Emf', null, 'Emf'));\n      }\n\n      if (this.model.options.exports.showExportToImageSvg) {\n        items.push(new Item('Svg', 'Svg', null, 'Svg'));\n      }\n\n      if (this.model.options.exports.showExportToImageSvgz) {\n        items.push(new Item('Svgz', 'Svgz', null, 'Svgz'));\n      }\n\n      return items;\n    }\n\n    getDataTypesItems() {\n      const items = [];\n\n      if (this.model.options.exports.showExportToCsv) {\n        items.push(new Item('Csv', 'Csv', null, 'Csv'));\n      }\n\n      if (this.model.options.exports.showExportToDbf) {\n        items.push(new Item('Dbf', 'Dbf', null, 'Dbf'));\n      }\n\n      if (this.model.options.exports.showExportToXml) {\n        items.push(new Item('Xml', 'Xml', null, 'Xml'));\n      }\n\n      if (this.model.options.exports.showExportToDif) {\n        items.push(new Item('Dif', 'Dif', null, 'Dif'));\n      }\n\n      if (this.model.options.exports.showExportToSylk) {\n        items.push(new Item('Sylk', 'Sylk', null, 'Sylk'));\n      }\n\n      if (this.model.options.exports.showExportToJson) {\n        items.push(new Item('Json', 'Json', null, 'Json'));\n      }\n\n      return items;\n    }\n\n    getExcelTypesItems() {\n      const items = [];\n\n      if (this.model.options.exports.showExportToExcel2007) {\n        items.push(new Item('Excel2007', 'Excel', null, 'Excel2007'));\n      }\n\n      if (this.model.options.exports.showExportToExcel) {\n        items.push(new Item('ExcelBinary', 'Excel 97-2003', null, 'ExcelBinary'));\n      }\n\n      if (this.model.options.exports.showExportToExcelXml) {\n        items.push(new Item('ExcelXml', 'Excel Xml 2003', null, 'ExcelXml'));\n      }\n\n      return items;\n    }\n\n    getHtmlTypesItems() {\n      const items = [];\n\n      if (this.model.options.exports.showExportToHtml) {\n        items.push(new Item('Html', 'Html', null, 'Html'));\n      }\n\n      if (this.model.options.exports.showExportToHtml5) {\n        items.push(new Item('Html5', 'Html5', null, 'Html5'));\n      }\n\n      if (this.model.options.exports.showExportToMht) {\n        items.push(new Item('Mht', 'Mht', null, 'Mht'));\n      }\n\n      return items;\n    }\n\n    getZoomItems() {\n      const items = [];\n      [0.25, 0.5, 0.75, 1, 1.25, 1.5, 2].forEach((item, i) => items.push(new Item('item' + i, item * 100 + '%', null, item)));\n      return items;\n    }\n\n    getImageFormatForHtmlItems() {\n      const items = [];\n      items.push(new Item('item0', 'Jpeg', null, 'Jpeg'));\n      items.push(new Item('item1', 'Gif', null, 'Gif'));\n      items.push(new Item('item2', 'Bmp', null, 'Bmp'));\n      items.push(new Item('item3', 'Png', null, 'Png'));\n      return items;\n    }\n\n    getExportModeItems() {\n      const items = [];\n      items.push(new Item('item0', 'Table', null, 'Table'));\n      items.push(new Item('item1', 'Span', null, 'Span'));\n      items.push(new Item('item2', 'Div', null, 'Div'));\n      return items;\n    }\n\n    getImageResolutionItems() {\n      const items = [];\n      ['10', '25', '50', '75', '100', '200', '300', '400', '500'].forEach((item, i) => items.push(new Item('item' + i, item, null, parseInt(item, 10))));\n      return items;\n    }\n\n    getImageCompressionMethodItems() {\n      const items = [];\n      items.push(new Item('item0', 'Jpeg', null, 'Jpeg'));\n      items.push(new Item('item1', 'Flate', null, 'Flate'));\n      return items;\n    }\n\n    getImageQualityItems() {\n      const items = [];\n      [0.25, 0.5, 0.75, 0.85, 0.9, 0.95, 1].forEach((item, i) => items.push(new Item('item' + i, (item * 100).toString(), null, item)));\n      return items;\n    }\n\n    getBorderTypeItems() {\n      const items = [];\n      items.push(new Item('item0', this.model.loc('BorderTypeSimple'), null, 'Simple'));\n      items.push(new Item('item1', this.model.loc('BorderTypeSingle'), null, 'UnicodeSingle'));\n      items.push(new Item('item2', this.model.loc('BorderTypeDouble'), null, 'UnicodeDouble'));\n      return items;\n    }\n\n    getEncodingDataItems() {\n      const items = [];\n      this.model.encodingData.forEach((item, i) => items.push(new Item('item' + i, item.value, null, item.key)));\n      return items;\n    }\n\n    getImageFormatItems(withoutMonochrome = false) {\n      const items = [];\n      items.push(new Item('item0', this.model.loc('ImageFormatColor'), null, 'Color'));\n      items.push(new Item('item1', this.model.loc('ImageFormatGrayscale'), null, 'Grayscale'));\n\n      if (!withoutMonochrome) {\n        items.push(new Item('item2', this.model.loc('ImageFormatMonochrome'), null, 'Monochrome'));\n      }\n\n      return items;\n    }\n\n    getMonochromeDitheringTypeItems() {\n      const items = [];\n      items.push(new Item('item0', 'None', null, 'None'));\n      items.push(new Item('item1', 'FloydSteinberg', null, 'FloydSteinberg'));\n      items.push(new Item('item2', 'Ordered', null, 'Ordered'));\n      return items;\n    }\n\n    getTiffCompressionSchemeItems() {\n      const items = [];\n      items.push(new Item('item0', 'Default', null, 'Default'));\n      items.push(new Item('item1', 'CCITT3', null, 'CCITT3'));\n      items.push(new Item('item2', 'CCITT4', null, 'CCITT4'));\n      items.push(new Item('item3', 'LZW', null, 'LZW'));\n      items.push(new Item('item4', 'None', null, 'None'));\n      items.push(new Item('item5', 'Rle', null, 'Rle'));\n      return items;\n    }\n\n    getEncodingDifFileItems() {\n      const items = [];\n      items.push(new Item('item0', '437', null, '437'));\n      items.push(new Item('item1', '850', null, '850'));\n      items.push(new Item('item2', '852', null, '852'));\n      items.push(new Item('item3', '857', null, '857'));\n      items.push(new Item('item4', '860', null, '860'));\n      items.push(new Item('item5', '861', null, '861'));\n      items.push(new Item('item6', '862', null, '862'));\n      items.push(new Item('item7', '863', null, '863'));\n      items.push(new Item('item8', '865', null, '865'));\n      items.push(new Item('item9', '866', null, '866'));\n      items.push(new Item('item10', '869', null, '869'));\n      return items;\n    }\n\n    getExportModeRtfItems() {\n      const items = [];\n      items.push(new Item('item0', this.model.loc('ExportModeRtfTable'), null, 'Table'));\n      items.push(new Item('item1', this.model.loc('ExportModeRtfFrame'), null, 'Frame'));\n      return items;\n    }\n\n    getEncodingDbfFileItems() {\n      const items = [];\n      items.push(new Item('item0', 'Default', null, 'Default'));\n      items.push(new Item('item1', '437 U.S. MS-DOS', null, 'USDOS'));\n      items.push(new Item('item2', '620 Mazovia(Polish) MS-DOS', null, 'MazoviaDOS'));\n      items.push(new Item('item3', '737 Greek MS-DOS(437G)', null, 'GreekDOS'));\n      items.push(new Item('item4', '850 International MS-DOS', null, 'InternationalDOS'));\n      items.push(new Item('item5', '852 Eastern European MS-DOS', null, 'EasternEuropeanDOS'));\n      items.push(new Item('item6', '857 Turkish MS-DOS', null, 'TurkishDOS'));\n      items.push(new Item('item7', '861 Icelandic MS-DOS', null, 'IcelandicDOS'));\n      items.push(new Item('item8', '865 Nordic MS-DOS', null, 'NordicDOS'));\n      items.push(new Item('item9', '866 Russian MS-DOS', null, 'RussianDOS'));\n      items.push(new Item('item10', '895 Kamenicky(Czech) MS-DOS', null, 'KamenickyDOS'));\n      items.push(new Item('item11', '1250 Eastern European Windows', null, 'EasternEuropeanWindows'));\n      items.push(new Item('item12', '1251 Russian Windows', null, 'RussianWindows'));\n      items.push(new Item('item13', '1252 WindowsANSI', null, 'WindowsANSI'));\n      items.push(new Item('item14', '1253 GreekWindows', null, 'GreekWindows'));\n      items.push(new Item('item15', '1254 TurkishWindows', null, 'TurkishWindows'));\n      items.push(new Item('item16', '10000 StandardMacintosh', null, 'StandardMacintosh'));\n      items.push(new Item('item17', '10006 GreekMacintosh', null, 'GreekMacintosh'));\n      items.push(new Item('item18', '10007 RussianMacintosh', null, 'RussianMacintosh'));\n      items.push(new Item('item19', '10029 EasternEuropeanMacintosh', null, 'EasternEuropeanMacintosh'));\n      return items;\n    }\n\n    getAllowEditableItems() {\n      const items = [];\n      items.push(new Item('item0', this.model.loc('NameYes'), null, 'Yes'));\n      items.push(new Item('item1', this.model.loc('NameNo'), null, 'No'));\n      return items;\n    }\n\n    getEncryptionKeyLengthItems() {\n      const items = [];\n      items.push(new Item('item0', '40 bit RC4 (Acrobat 3)', null, 'Bit40'));\n      items.push(new Item('item1', '128 bit RC4 (Acrobat 5)', null, 'Bit128'));\n      items.push(new Item('item2', '128 bit AES (Acrobat 7)', null, 'Bit128_r4'));\n      items.push(new Item('item3', '256 bit AES (Acrobat 9)', null, 'Bit256_r5'));\n      items.push(new Item('item4', '256 bit AES (Acrobat X)', null, 'Bit256_r6'));\n      return items;\n    }\n\n    getDataExportModeItems() {\n      const items = [];\n      items.push(new Item('item0', this.model.loc('BandsFilterDataOnly'), null, 'Data'));\n      items.push(new Item('item1', this.model.loc('BandsFilterDataAndHeaders'), null, 'DataAndHeaders'));\n      items.push(new Item('item2', this.model.loc('BandsFilterDataAndHeadersFooters'), null, 'DataAndHeadersFooters'));\n      items.push(new Item('item3', this.model.loc('BandsFilterAllBands'), null, 'AllBands'));\n      return items;\n    }\n\n    getFilterConditionItems(dataType) {\n      const items = [];\n\n      switch (dataType) {\n        case 'String':\n          items.push(new Item('item0', this.model.loc('ConditionEqualTo'), '', 'EqualTo'));\n          items.push(new Item('item1', this.model.loc('ConditionNotEqualTo'), '', 'NotEqualTo'));\n          items.push('separator1');\n          items.push(new Item('item2', this.model.loc('ConditionContaining'), '', 'Containing'));\n          items.push(new Item('item3', this.model.loc('ConditionNotContaining'), '', 'NotContaining'));\n          items.push('separator2');\n          items.push(new Item('item4', this.model.loc('ConditionBeginningWith'), '', 'BeginningWith'));\n          items.push(new Item('item5', this.model.loc('ConditionEndingWith'), '', 'EndingWith'));\n          items.push('separator3');\n          items.push(new Item('item2', this.model.loc('ConditionBetween'), '', 'Between'));\n          items.push(new Item('item3', this.model.loc('ConditionNotBetween'), '', 'NotBetween'));\n          items.push('separator4');\n          items.push(new Item('item6', this.model.loc('ConditionGreaterThan'), '', 'GreaterThan'));\n          items.push(new Item('item7', this.model.loc('ConditionGreaterThanOrEqualTo'), '', 'GreaterThanOrEqualTo'));\n          items.push('separator5');\n          items.push(new Item('item8', this.model.loc('ConditionLessThan'), '', 'LessThan'));\n          items.push(new Item('item9', this.model.loc('ConditionLessThanOrEqualTo'), '', 'LessThanOrEqualTo'));\n          items.push('separator6');\n          items.push(new Item('item10', this.model.loc('ConditionIsNull'), '', 'IsNull'));\n          items.push(new Item('item11', this.model.loc('ConditionIsNotNull'), '', 'IsNotNull'));\n          items.push('separator7');\n          items.push(new Item('item12', this.model.loc('ConditionIsBlank'), '', 'IsBlank'));\n          items.push(new Item('item13', this.model.loc('ConditionIsNotBlank'), '', 'IsNotBlank'));\n          break;\n\n        case 'Numeric':\n        case 'DateTime':\n          {\n            items.push(new Item('item0', this.model.loc('ConditionEqualTo'), '', 'EqualTo'));\n          }\n          items.push(new Item('item1', this.model.loc('ConditionNotEqualTo'), '', 'NotEqualTo'));\n          items.push('separator1');\n          items.push(new Item('item2', this.model.loc('ConditionBetween'), '', 'Between'));\n          items.push(new Item('item3', this.model.loc('ConditionNotBetween'), '', 'NotBetween'));\n          items.push('separator2');\n          items.push(new Item('item4', this.model.loc('ConditionGreaterThan'), '', 'GreaterThan'));\n          items.push(new Item('item5', this.model.loc('ConditionGreaterThanOrEqualTo'), '', 'GreaterThanOrEqualTo'));\n          items.push('separator3');\n          items.push(new Item('item6', this.model.loc('ConditionLessThan'), '', 'LessThan'));\n          items.push(new Item('item7', this.model.loc('ConditionLessThanOrEqualTo'), '', 'LessThanOrEqualTo'));\n          items.push('separator4');\n          items.push(new Item('item8', this.model.loc('ConditionIsNull'), '', 'IsNull'));\n          items.push(new Item('item9', this.model.loc('ConditionIsNotNull'), '', 'IsNotNull'));\n          break;\n\n        case 'Boolean':\n          {\n            items.push(new Item('item0', this.model.loc('ConditionEqualTo'), '', 'EqualTo'));\n          }\n          items.push(new Item('item1', this.model.loc('ConditionNotEqualTo'), '', 'NotEqualTo'));\n          break;\n      }\n\n      return items;\n    }\n\n    getBoolItems() {\n      const items = [];\n      items.push(new Item('item0', this.model.loc('NameTrue'), null, 'True'));\n      items.push(new Item('item1', this.model.loc('NameFalse'), null, 'False'));\n      return items;\n    }\n\n    getPaperSizesItems() {\n      const items = [];\n      this.model.paperSizes.forEach((item, i) => items.push(new Item('item' + i, item, null, item)));\n      return items;\n    }\n\n    getOrientationItems() {\n      const items = [];\n      items.push(new Item('item0', this.model.loc('Portrait'), null, 'Portrait'));\n      items.push(new Item('item1', this.model.loc('Landscape'), null, 'Landscape'));\n      return items;\n    }\n\n    getDashboardImageQualityItems() {\n      const items = [];\n      [50, 75, 100, 150, 200, 300, 500].forEach((item, i) => items.push(new Item('item' + i, item + '%', null, item.toString())));\n      return items;\n    }\n\n    getPdfSecurityCertificatesItems() {\n      let items = [];\n\n      if (this.model.pdfSecurityCertificates) {\n        for (var i = 0; i < this.model.pdfSecurityCertificates.length; i++) {\n          var item = this.model.pdfSecurityCertificates[i];\n          items.push(new Item('item' + i, \"Name: \" + item.name + \"<br>Issuer: \" + item.issuer + \"<br>Valid from: \" + item.from + \" to \" + item.to, null, item.thumbprint, null, null, null, 'DigitalSignature'));\n        }\n      }\n\n      return items;\n    }\n\n  }\n\n  CollectionsService.ɵfac = function CollectionsService_Factory(t) {\n    return new (t || CollectionsService)(i0.ɵɵinject(ModelService));\n  };\n\n  CollectionsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: CollectionsService,\n    factory: CollectionsService.ɵfac\n  });\n  return CollectionsService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ExportService = /*#__PURE__*/(() => {\n  class ExportService {\n    constructor(formService, helper, model, collections, controller) {\n      this.formService = formService;\n      this.helper = helper;\n      this.model = model;\n      this.collections = collections;\n      this.controller = controller;\n      this.exportSettings = {};\n      this.sendMail = false;\n      this.subject = new Subject();\n      controller.getActionMessage().subscribe(message => {\n        switch (message.action) {\n          case 'Export':\n            this.export(message.data.format);\n            break;\n\n          case 'SendEmail':\n            this.export(message.data.format, false, true);\n            break;\n        }\n      });\n    }\n\n    getMessage() {\n      return this.subject.asObservable();\n    }\n\n    export(format, update = false, sendMail = false) {\n      if (!this.helper.checkCloudAuthorization('export')) {\n        return;\n      }\n\n      this.sendMail = sendMail;\n      this.format = format;\n      this.exportSettings = this.getDefaultExportSettings(this.format);\n\n      if (this.model.options.exports.showExportDialog && !sendMail || this.model.options.email.showExportDialog && sendMail) {\n        this.exportFormSettings = this.getExportSetings(update);\n\n        if (!update) {\n          this.formService.closeForm('exportForm');\n          setTimeout(() => {\n            this.formService.showForm('exportForm');\n          });\n        }\n      } else {\n        this.postExport();\n      }\n    }\n\n    postExport() {\n      if (!this.sendMail) {\n        this.controller.postExport(this.format, this.exportSettings);\n      } else {\n        this.subject.next('postMail');\n      }\n    }\n\n    getExportSetings(update) {\n      let result;\n      this.getDefaultSettings();\n\n      switch (this.format) {\n        case 'Document':\n          result = {\n            components: this.getComponents(['SaveReportMdc', 'SaveReportMdz', 'SaveReportMdx', 'SaveReportPassword'])\n          };\n          break;\n\n        case 'Pdf':\n          result = {\n            components: this.getComponents(['PageRangeGroup', 'PageRangeAll', 'PageRangeCurrentPage', 'PageRangePages', 'PageRangePagesText', 'SettingsGroup', 'ImageResolution', 'ImageCompressionMethod', 'AllowEditable', 'ImageQuality',\n            /*'StandardPdfFonts',*/\n            'EmbeddedFonts',\n            /*'UseUnicode', 'Compressed',*/\n            'ExportRtfTextAsImage', 'PdfACompliance', 'UseDigitalSignature', 'DocumentSecurityButton', 'DigitalSignatureButton', 'OpenAfterExport', 'PasswordInputUser', 'PasswordInputOwner', 'PrintDocument', 'ModifyContents', 'CopyTextAndGraphics', 'AddOrModifyTextAnnotations', 'KeyLength', 'GetCertificateFromCryptoUI', 'SubjectNameString']),\n            openAfterExport: true\n          };\n          break;\n\n        case 'Xps':\n          result = {\n            components: this.getComponents(['PageRangeGroup', 'PageRangeAll', 'PageRangeCurrentPage', 'PageRangePages', 'PageRangePagesText', 'SettingsGroup', 'ImageResolution', 'ImageQuality', 'OpenAfterExport', 'ExportRtfTextAsImage']),\n            openAfterExport: true\n          };\n          break;\n\n        case 'Ppt2007':\n          result = {\n            components: this.getComponents(['PageRangeGroup', 'PageRangeAll', 'PageRangeCurrentPage', 'PageRangePages', 'PageRangePagesText', 'SettingsGroup', 'ImageResolution', 'ImageQuality'])\n          };\n          break;\n\n        case 'Html':\n          result = {\n            components: this.getComponents(['HtmlType', 'Zoom', 'ImageFormatForHtml', 'ExportMode', 'UseEmbeddedImages', 'AddPageBreaks']),\n            openAfterExport: true\n          };\n          break;\n\n        case 'Html5':\n          result = {\n            components: this.getComponents(['PageRangeGroup', 'PageRangeAll', 'PageRangeCurrentPage', 'PageRangePages', 'PageRangePagesText', 'SettingsGroup', 'HtmlType', 'ImageFormatForHtml', 'ImageResolution', 'ImageQuality', 'ContinuousPages', 'OpenAfterExport']),\n            openAfterExport: true\n          };\n          break;\n\n        case 'Mht':\n          result = {\n            components: this.getComponents(['PageRangeGroup', 'PageRangeAll', 'PageRangeCurrentPage', 'PageRangePages', 'PageRangePagesText', 'SettingsGroup', 'HtmlType', 'Zoom', 'ImageFormatForHtml', 'ExportMode', 'AddPageBreaks'])\n          };\n          break;\n\n        case 'Text':\n          result = {\n            components: this.getComponents(['PageRangeGroup', 'PageRangeAll', 'PageRangeCurrentPage', 'PageRangePages', 'PageRangePagesText', 'SettingsGroup', 'KillSpaceLines', 'PutFeedPageCode', 'DrawBorder', 'CutLongLines', 'BorderType', 'ZoomX', 'ZoomY', 'EncodingTextOrCsvFile'])\n          };\n          break;\n\n        case 'Rtf':\n          result = {\n            components: this.getComponents(['PageRangeGroup', 'PageRangeAll', 'PageRangeCurrentPage', 'PageRangePages', 'PageRangePagesText', 'SettingsGroup', 'ImageResolution', 'ImageQuality', 'ExportModeRtf', 'UsePageHeadersAndFooters', 'RemoveEmptySpaceAtBottom'])\n          };\n          break;\n\n        case 'Word2007':\n          result = {\n            components: this.getComponents(['PageRangeGroup', 'PageRangeAll', 'PageRangeCurrentPage', 'PageRangePages', 'PageRangePagesText', 'SettingsGroup', 'ImageResolution', 'ImageQuality', 'UsePageHeadersAndFooters', 'RemoveEmptySpaceAtBottom'])\n          };\n          break;\n\n        case 'Odt':\n          result = {\n            components: this.getComponents(['PageRangeGroup', 'PageRangeAll', 'PageRangeCurrentPage', 'PageRangePages', 'PageRangePagesText', 'SettingsGroup', 'ImageResolution', 'ImageQuality', 'RemoveEmptySpaceAtBottom'])\n          };\n          break;\n\n        case 'Excel':\n        case 'ExcelBinary':\n          result = {\n            components: this.getComponents(['PageRangeGroup', 'PageRangeAll', 'PageRangeCurrentPage', 'PageRangePages', 'PageRangePagesText', 'SettingsGroup', 'ExcelType', 'ImageResolution', 'ImageQuality', 'DataExportMode', 'ExportObjectFormatting', 'UseOnePageHeaderAndFooter', 'ExportEachPageToSheet', 'ExportPageBreaks']),\n            openAfterExport: true\n          };\n          break;\n\n        case 'ExcelXml':\n          result = {\n            components: this.getComponents(['PageRangeGroup', 'PageRangeAll', 'PageRangeCurrentPage', 'PageRangePages', 'PageRangePagesText', 'SettingsGroup', 'ExcelType'])\n          };\n          break;\n\n        case 'Excel2007':\n          result = {\n            components: this.getComponents(['PageRangeGroup', 'PageRangeAll', 'PageRangeCurrentPage', 'PageRangePages', 'PageRangePagesText', 'SettingsGroup', 'ExcelType', 'ImageResolution', 'ImageQuality', 'DataExportMode', 'ExportObjectFormatting', 'UseOnePageHeaderAndFooter', 'ExportEachPageToSheet', 'ExportPageBreaks'])\n          };\n          break;\n\n        case 'Ods':\n          result = {\n            components: this.getComponents(['PageRangeGroup', 'PageRangeAll', 'PageRangeCurrentPage', 'PageRangePages', 'PageRangePagesText', 'SettingsGroup', 'ImageResolution', 'ImageQuality'])\n          };\n          break;\n\n        case 'Csv':\n          result = {\n            components: this.getComponents(['PageRangeGroup', 'PageRangeAll', 'PageRangeCurrentPage', 'PageRangePages', 'PageRangePagesText', 'SettingsGroup', 'DataType', 'EncodingTextOrCsvFile', 'Separator', 'DataExportMode', 'SkipColumnHeaders'])\n          };\n          break;\n\n        case 'Dbf':\n          result = {\n            components: this.getComponents(['PageRangeGroup', 'PageRangeAll', 'PageRangeCurrentPage', 'PageRangePages', 'PageRangePagesText', 'SettingsGroup', 'DataType', 'EncodingDbfFile'])\n          };\n          break;\n\n        case 'Dif':\n          result = {\n            components: this.getComponents(['PageRangeGroup', 'PageRangeAll', 'PageRangeCurrentPage', 'PageRangePages', 'PageRangePagesText', 'SettingsGroup', 'DataType', 'ExportDataOnly', 'UseDefaultSystemEncoding', 'EncodingDifFile'])\n          };\n          break;\n\n        case 'Sylk':\n          result = {\n            components: this.getComponents(['PageRangeGroup', 'PageRangeAll', 'PageRangeCurrentPage', 'PageRangePages', 'PageRangePagesText', 'SettingsGroup', 'DataType', 'ExportDataOnly', 'UseDefaultSystemEncoding', 'EncodingDifFile'])\n          };\n          break;\n\n        case 'Json':\n          result = {\n            components: this.getComponents(['PageRangeGroup', 'PageRangeAll', 'PageRangeCurrentPage', 'PageRangePages', 'PageRangePagesText', 'SettingsGroup', 'DataType', 'DataExportMode'])\n          };\n          break;\n\n        case 'Xml':\n          result = {\n            components: this.getComponents(['PageRangeGroup', 'PageRangeAll', 'PageRangeCurrentPage', 'PageRangePages', 'PageRangePagesText', 'SettingsGroup', 'DataType'])\n          };\n          break;\n\n        case 'ImageBmp':\n        case 'ImageGif':\n        case 'ImageJpeg':\n        case 'ImagePcx':\n        case 'ImagePng':\n        case 'ImageTiff':\n        case 'ImageEmf':\n        case 'ImageSvg':\n        case 'ImageSvgz':\n          result = {\n            components: this.getComponents(['PageRangeGroup', 'PageRangeAll', 'PageRangeCurrentPage', 'PageRangePages', 'PageRangePagesText', 'SettingsGroup', 'ImageType', 'ImageZoom', 'ImageResolution', 'ImageFormat', 'DitheringType', 'TiffCompressionScheme', 'CompressToArchive', 'CutEdges'])\n          };\n          break;\n      }\n\n      result.groups = this.getGroups(this.format);\n      result.update = update;\n      return result;\n    }\n\n    getComponents(names) {\n      const mrgn = '8px';\n      const components = [];\n      names.forEach(name => {\n        switch (name) {\n          case 'ImageType':\n            components.push({\n              name,\n              type: 'DropDownListForExportForm',\n              label: this.model.loc('Type'),\n              width: 160,\n              tooltip: this.model.loc('TypeTooltip'),\n              margin: '2px ' + mrgn + ' 2px ' + mrgn,\n              items: this.collections.getImageTypesItems()\n            });\n            break;\n\n          case 'DataType':\n            components.push({\n              name,\n              type: 'DropDownListForExportForm',\n              label: this.model.loc('Type'),\n              width: 160,\n              tooltip: this.model.loc('TypeTooltip'),\n              margin: '2px ' + mrgn + ' 2px ' + mrgn,\n              items: this.collections.getDataTypesItems()\n            });\n            break;\n\n          case 'ExcelType':\n            components.push({\n              name,\n              type: 'DropDownListForExportForm',\n              label: this.model.loc('Type'),\n              width: 160,\n              tooltip: this.model.loc('TypeTooltip'),\n              margin: '2px ' + mrgn + ' 2px ' + mrgn,\n              items: this.collections.getExcelTypesItems()\n            });\n            break;\n\n          case 'HtmlType':\n            components.push({\n              name,\n              type: 'DropDownListForExportForm',\n              label: this.model.loc('Type'),\n              width: 160,\n              tooltip: this.model.loc('TypeTooltip'),\n              margin: '2px ' + mrgn + ' 2px ' + mrgn,\n              items: this.collections.getHtmlTypesItems()\n            });\n            break;\n\n          case 'Zoom':\n            components.push({\n              name,\n              type: 'DropDownListForExportForm',\n              label: this.model.loc('ZoomHtml'),\n              width: 160,\n              tooltip: this.model.loc('ZoomHtmlTooltip'),\n              margin: '2px ' + mrgn + ' 2px ' + mrgn,\n              items: this.collections.getZoomItems()\n            });\n            break;\n\n          case 'ImageZoom':\n            components.push({\n              name,\n              type: 'DropDownListForExportForm',\n              label: this.model.loc('ZoomHtml'),\n              width: 160,\n              tooltip: this.model.loc('ZoomHtmlTooltip'),\n              margin: '2px ' + mrgn + ' 2px ' + mrgn,\n              items: this.collections.getZoomItems()\n            });\n            break;\n\n          case 'ImageFormatForHtml':\n            components.push({\n              name,\n              type: 'DropDownListForExportForm',\n              label: this.model.loc('ImageFormatForHtml'),\n              width: 160,\n              tooltip: this.model.loc('ImageFormatForHtmlTooltip'),\n              margin: '2px ' + mrgn + ' 2px ' + mrgn,\n              items: this.collections.getImageFormatForHtmlItems()\n            });\n            break;\n\n          case 'ExportMode':\n            components.push({\n              name,\n              type: 'DropDownListForExportForm',\n              label: this.model.loc('ExportMode'),\n              width: 160,\n              tooltip: this.model.loc('ExportModeTooltip'),\n              margin: '2px ' + mrgn + ' 2px ' + mrgn,\n              items: this.collections.getExportModeItems()\n            });\n            break;\n\n          case 'CompressToArchive':\n            components.push({\n              name,\n              type: 'CheckBox',\n              caption: this.model.loc('CompressToArchive'),\n              tooltip: this.model.loc('CompressToArchiveTooltip'),\n              margin: '4px ' + mrgn + ' 4px ' + mrgn\n            });\n            break;\n\n          case 'UseEmbeddedImages':\n            components.push({\n              name,\n              type: 'CheckBox',\n              caption: this.model.loc('EmbeddedImageData'),\n              tooltip: this.model.loc('EmbeddedImageDataTooltip'),\n              margin: '4px ' + mrgn + ' 4px ' + mrgn\n            });\n            break;\n\n          case 'AddPageBreaks':\n            components.push({\n              name,\n              type: 'CheckBox',\n              caption: this.model.loc('AddPageBreaks'),\n              tooltip: this.model.loc('AddPageBreaksTooltip'),\n              margin: '4px ' + mrgn + ' 4px ' + mrgn\n            });\n            break;\n\n          case 'ImageResolution':\n            components.push({\n              name,\n              type: 'DropDownListForExportForm',\n              label: this.model.loc('ImageResolution'),\n              width: 160,\n              tooltip: this.model.loc('ImageResolutionTooltip'),\n              margin: '2px 4px 2px ' + mrgn,\n              items: this.collections.getImageResolutionItems()\n            });\n            break;\n\n          case 'ImageCompressionMethod':\n            components.push({\n              name,\n              type: 'DropDownListForExportForm',\n              label: this.model.loc('ImageCompressionMethod'),\n              width: 160,\n              tooltip: this.model.loc('ImageCompressionMethodTooltip'),\n              margin: '2px ' + mrgn + ' 2px ' + mrgn,\n              items: this.collections.getImageCompressionMethodItems()\n            });\n            break;\n\n          case 'AllowEditable':\n            components.push({\n              name,\n              type: 'DropDownListForExportForm',\n              label: this.model.loc('AllowEditable'),\n              width: 160,\n              tooltip: this.model.loc('AllowEditableTooltip'),\n              margin: '2px ' + mrgn + ' 2px ' + mrgn,\n              items: this.collections.getAllowEditableItems()\n            });\n            break;\n\n          case 'ImageQuality':\n            components.push({\n              name,\n              type: 'DropDownListForExportForm',\n              label: this.model.loc('ImageQuality'),\n              width: 160,\n              tooltip: this.model.loc('ImageQualityTooltip'),\n              margin: '2px 4px 2px ' + mrgn,\n              items: this.collections.getImageQualityItems()\n            });\n            break;\n\n          case 'ContinuousPages':\n            components.push({\n              name,\n              type: 'CheckBox',\n              caption: this.model.loc('ContinuousPages'),\n              tooltip: this.model.loc('ContinuousPagesTooltip'),\n              margin: '4px ' + mrgn + ' 4px ' + mrgn\n            });\n            break;\n\n          case 'StandardPdfFonts':\n            components.push({\n              name,\n              type: 'CheckBox',\n              caption: this.model.loc('StandardPDFFonts'),\n              tooltip: this.model.loc('StandardPDFFontsTooltip'),\n              margin: '4px ' + mrgn + ' 4px ' + mrgn\n            });\n            break;\n\n          case 'EmbeddedFonts':\n            components.push({\n              name,\n              type: 'CheckBox',\n              caption: this.model.loc('EmbeddedFonts'),\n              tooltip: this.model.loc('EmbeddedFontsTooltip'),\n              margin: '4px ' + mrgn + ' 4px ' + mrgn\n            });\n            break;\n\n          case 'UseUnicode':\n            components.push({\n              name,\n              type: 'CheckBox',\n              caption: this.model.loc('UseUnicode'),\n              tooltip: this.model.loc('UseUnicodeTooltip'),\n              margin: '4px ' + mrgn + ' 4px ' + mrgn\n            });\n            break;\n\n          case 'Compressed':\n            components.push({\n              name,\n              type: 'CheckBox',\n              caption: this.model.loc('Compressed'),\n              tooltip: this.model.loc('CompressedTooltip'),\n              margin: '4px ' + mrgn + ' 4px ' + mrgn\n            });\n            break;\n\n          case 'ExportRtfTextAsImage':\n            components.push({\n              name,\n              type: 'CheckBox',\n              caption: this.model.loc('ExportRtfTextAsImage'),\n              tooltip: this.model.loc('ExportRtfTextAsImageTooltip'),\n              margin: '4px ' + mrgn + ' 4px ' + mrgn\n            });\n            break;\n\n          case 'PdfACompliance':\n            components.push({\n              name,\n              type: 'CheckBox',\n              caption: this.model.loc('PdfACompliance'),\n              tooltip: this.model.loc('PdfAComplianceTooltip'),\n              margin: '4px ' + mrgn + ' 4px ' + mrgn\n            });\n            break;\n\n          case 'KillSpaceLines':\n            components.push({\n              name,\n              type: 'CheckBox',\n              caption: this.model.loc('KillSpaceLines'),\n              tooltip: this.model.loc('KillSpaceLinesTooltip'),\n              margin: '4px ' + mrgn + ' 4px ' + mrgn\n            });\n            break;\n\n          case 'PutFeedPageCode':\n            components.push({\n              name,\n              type: 'CheckBox',\n              caption: this.model.loc('PutFeedPageCode'),\n              tooltip: this.model.loc('PutFeedPageCodeTooltip'),\n              margin: '4px ' + mrgn + ' 4px ' + mrgn\n            });\n            break;\n\n          case 'DrawBorder':\n            components.push({\n              name,\n              type: 'CheckBox',\n              caption: this.model.loc('DrawBorder'),\n              tooltip: this.model.loc('DrawBorderTooltip'),\n              margin: '4px ' + mrgn + ' 4px ' + mrgn\n            });\n            break;\n\n          case 'CutLongLines':\n            components.push({\n              name,\n              type: 'CheckBox',\n              caption: this.model.loc('CutLongLines'),\n              tooltip: this.model.loc('CutLongLinesTooltip'),\n              margin: '4px ' + mrgn + ' 4px ' + mrgn\n            });\n            break;\n\n          case 'BorderType':\n            components.push({\n              name,\n              type: 'DropDownListForExportForm',\n              label: this.model.loc('BorderType'),\n              width: 160,\n              tooltip: this.model.loc('BorderTypeTooltip'),\n              margin: '2px ' + mrgn + ' 2px ' + mrgn,\n              items: this.collections.getBorderTypeItems()\n            });\n            break;\n\n          case 'ZoomX':\n            components.push({\n              name,\n              type: 'DropDownListForExportForm',\n              label: this.model.loc('ZoomXY').replace(':', '') + ' X ',\n              width: 160,\n              tooltip: this.model.loc('ZoomXYTooltip'),\n              margin: '2px ' + mrgn + ' 2px ' + mrgn,\n              items: this.collections.getZoomItems()\n            });\n            break;\n\n          case 'ZoomY':\n            components.push({\n              name,\n              type: 'DropDownListForExportForm',\n              label: this.model.loc('ZoomXY').replace(':', '') + ' Y ',\n              width: 160,\n              tooltip: this.model.loc('ZoomXYTooltip'),\n              margin: '2px ' + mrgn + ' 2px ' + mrgn,\n              items: this.collections.getZoomItems()\n            });\n            break;\n\n          case 'EncodingTextOrCsvFile':\n            components.push({\n              name,\n              type: 'DropDownListForExportForm',\n              label: this.model.loc('EncodingData'),\n              width: 160,\n              tooltip: this.model.loc('EncodingDataTooltip'),\n              margin: '2px ' + mrgn + ' 2px ' + mrgn,\n              items: this.collections.getEncodingDataItems()\n            });\n            break;\n\n          case 'ImageFormat':\n            components.push({\n              name,\n              type: 'DropDownListForExportForm',\n              label: this.model.loc('ImageFormat'),\n              width: 160,\n              tooltip: this.model.loc('ImageFormatTooltip'),\n              margin: '2px ' + mrgn + ' 2px ' + mrgn,\n              items: this.collections.getImageFormatItems()\n            });\n            break;\n\n          case 'DitheringType':\n            components.push({\n              name,\n              type: 'DropDownListForExportForm',\n              label: this.model.loc('MonochromeDitheringType'),\n              width: 160,\n              tooltip: this.model.loc('MonochromeDitheringTypeTooltip'),\n              margin: '2px ' + mrgn + ' 2px ' + mrgn,\n              items: this.collections.getMonochromeDitheringTypeItems()\n            });\n            break;\n\n          case 'TiffCompressionScheme':\n            components.push({\n              name,\n              type: 'DropDownListForExportForm',\n              label: this.model.loc('TiffCompressionScheme'),\n              width: 160,\n              tooltip: this.model.loc('TiffCompressionSchemeTooltip'),\n              margin: '2px ' + mrgn + ' 2px ' + mrgn,\n              items: this.collections.getTiffCompressionSchemeItems()\n            });\n            break;\n\n          case 'CutEdges':\n            components.push({\n              name,\n              type: 'CheckBox',\n              caption: this.model.loc('CutEdges'),\n              tooltip: this.model.loc('CutEdgesTooltip'),\n              margin: '4px ' + mrgn + ' 4px ' + mrgn\n            });\n            break;\n\n          case 'MultipleFiles':\n            components.push({\n              name,\n              type: 'CheckBox',\n              caption: this.model.loc('MultipleFiles'),\n              tooltip: this.model.loc('MultipleFilesTooltip'),\n              margin: '4px ' + mrgn + ' 4px ' + mrgn\n            });\n            break;\n\n          case 'ExportDataOnly':\n            components.push({\n              name,\n              type: 'CheckBox',\n              caption: this.model.loc('ExportDataOnly'),\n              tooltip: this.model.loc('ExportDataOnlyTooltip'),\n              margin: '4px ' + mrgn + ' 4px ' + mrgn\n            });\n            break;\n\n          case 'UseDefaultSystemEncoding':\n            components.push({\n              name,\n              type: 'CheckBox',\n              caption: this.model.loc('UseDefaultSystemEncoding'),\n              tooltip: this.model.loc('UseDefaultSystemEncodingTooltip'),\n              margin: '4px ' + mrgn + ' 4px ' + mrgn\n            });\n            break;\n\n          case 'EncodingDifFile':\n            components.push({\n              name,\n              type: 'DropDownListForExportForm',\n              label: this.model.loc('EncodingDifFile'),\n              width: 160,\n              tooltip: this.model.loc('EncodingDifFileTooltip'),\n              margin: '2px ' + mrgn + ' 2px ' + mrgn,\n              items: this.collections.getEncodingDifFileItems()\n            });\n            break;\n\n          case 'ExportModeRtf':\n            components.push({\n              name,\n              type: 'DropDownListForExportForm',\n              label: this.model.loc('ExportModeRtf'),\n              width: 160,\n              tooltip: this.model.loc('ExportModeRtfTooltip'),\n              margin: '2px ' + mrgn + ' 2px ' + mrgn,\n              items: this.collections.getExportModeRtfItems()\n            });\n            break;\n\n          case 'UsePageHeadersAndFooters':\n            components.push({\n              name,\n              type: 'CheckBox',\n              caption: this.model.loc('UsePageHeadersFooters'),\n              tooltip: this.model.loc('UsePageHeadersFootersTooltip'),\n              margin: '4px ' + mrgn + ' 4px ' + mrgn\n            });\n            break;\n\n          case 'RemoveEmptySpaceAtBottom':\n            components.push({\n              name,\n              type: 'CheckBox',\n              caption: this.model.loc('RemoveEmptySpace'),\n              tooltip: this.model.loc('RemoveEmptySpaceTooltip'),\n              margin: '4px ' + mrgn + ' 4px ' + mrgn\n            });\n            break;\n\n          case 'Separator':\n            components.push({\n              name,\n              type: 'TextBox',\n              label: this.model.loc('Separator'),\n              tooltip: this.model.loc('SeparatorTooltip'),\n              width: 160,\n              margin: '2px ' + mrgn + ' 2px ' + mrgn\n            });\n            break;\n\n          case 'DataExportMode':\n            components.push({\n              name,\n              type: 'DropDownListForExportForm',\n              label: this.model.loc('BandsFilter'),\n              width: 160,\n              tooltip: this.model.loc('BandsFilterTooltip'),\n              margin: '2px ' + mrgn + ' 2px ' + mrgn,\n              items: this.collections.getDataExportModeItems()\n            });\n            break;\n\n          case 'SkipColumnHeaders':\n            components.push({\n              name,\n              type: 'CheckBox',\n              caption: this.model.loc('SkipColumnHeaders'),\n              tooltip: this.model.loc('SkipColumnHeadersTooltip'),\n              margin: '4px ' + mrgn + ' 4px ' + mrgn\n            });\n            break;\n\n          case 'ExportObjectFormatting':\n            components.push({\n              name,\n              type: 'CheckBox',\n              caption: this.model.loc('ExportObjectFormatting'),\n              tooltip: this.model.loc('ExportObjectFormattingTooltip'),\n              margin: '4px ' + mrgn + ' 4px ' + mrgn\n            });\n            break;\n\n          case 'UseOnePageHeaderAndFooter':\n            components.push({\n              name,\n              type: 'CheckBox',\n              caption: this.model.loc('UseOnePageHeaderFooter'),\n              tooltip: this.model.loc('UseOnePageHeaderFooterTooltip'),\n              margin: '4px ' + mrgn + ' 4px ' + mrgn\n            });\n            break;\n\n          case 'ExportEachPageToSheet':\n            components.push({\n              name,\n              type: 'CheckBox',\n              caption: this.model.loc('ExportEachPageToSheet'),\n              tooltip: this.model.loc('ExportEachPageToSheetTooltip'),\n              margin: '4px ' + mrgn + ' 4px ' + mrgn\n            });\n            break;\n\n          case 'ExportPageBreaks':\n            components.push({\n              name,\n              type: 'CheckBox',\n              caption: this.model.loc('ExportPageBreaks'),\n              tooltip: this.model.loc('ExportPageBreaksTooltip'),\n              margin: '4px ' + mrgn + ' 4px ' + mrgn\n            });\n            break;\n\n          case 'EncodingDbfFile':\n            components.push({\n              name,\n              type: 'DropDownListForExportForm',\n              label: this.model.loc('EncodingDbfFile'),\n              width: 160,\n              tooltip: this.model.loc('EncodingDbfFileTooltip'),\n              margin: '2px ' + mrgn + ' 2px ' + mrgn,\n              items: this.collections.getEncodingDbfFileItems()\n            });\n            break;\n\n          case 'DocumentSecurityButton':\n            components.push({\n              name,\n              type: 'SmallButton',\n              caption: this.model.loc('DocumentSecurityButton'),\n              width: 160,\n              margin: '2px ' + mrgn + ' 2px ' + mrgn,\n              items: this.collections.getEncodingDbfFileItems()\n            });\n            break;\n\n          case 'UseDigitalSignature':\n            components.push({\n              name,\n              caption: this.model.loc('DigitalSignatureButton'),\n              type: 'DropDownListForExportForm',\n              tooltip: this.model.loc('UseDigitalSignatureTooltip'),\n              width: 160,\n              items: this.collections.getPdfSecurityCertificatesItems(),\n              margin: '4px ' + mrgn + ' 4px ' + mrgn\n            });\n            break;\n\n          default:\n            break;\n        }\n      });\n      return components;\n    }\n\n    getGroups(format) {\n      const openingGroupsStr = this.helper.getCookie('StimulsoftWebViewerExportSettingsOpeningGroups');\n      const openingGroups = openingGroupsStr ? JSON.parse(openingGroupsStr) : null;\n      const pageRangeAllIsDisabled = format.indexOf('Image') === 0 && format !== 'ImageTiff';\n      return {\n        savingReportGroup: {\n          visible: format === 'Document',\n          opened: openingGroups ? openingGroups.SavingReportGroup : true\n        },\n        pageRangeGroup: {\n          visible: format !== 'Document',\n          opened: openingGroups ? openingGroups.PageRangeGroup : true,\n          pageRangeAllIsDisabled\n        },\n        settingsGroup: {\n          visible: format !== 'Document',\n          opened: openingGroups ? openingGroups.SettingsGroup : false\n        }\n      };\n    }\n\n    getDefaultSettings() {\n      let settings;\n\n      if (this.model.options.exports.storeExportSettings && this.helper.getCookie('StimulsoftWebViewerExportSettings' + this.getCommonExportFormat())) {\n        const exportSettingsStr = this.helper.getCookie('StimulsoftWebViewerExportSettings' + this.getCommonExportFormat());\n        const exportSettings = JSON.parse(exportSettingsStr);\n        let exportFormat = exportSettings.ImageType || exportSettings.DataType || exportSettings.ExcelType || exportSettings.HtmlType;\n\n        if (exportFormat === 'ExcelBinary') {\n          exportFormat = 'Excel';\n        }\n\n        this.format = exportFormat ? exportSettings.ImageType ? 'Image' + exportFormat : exportFormat : this.format;\n        const defSettings = this.getDefaultExportSettings(this.format);\n        const resultSettings = {};\n        Object.keys(defSettings).forEach(key => resultSettings[key] = exportSettings[key] || defSettings[key]);\n        Object.keys(exportSettings).forEach(key => resultSettings[key] = exportSettings[key] || defSettings[key]);\n\n        if (this.model.options.exports.showOpenAfterExport === false) {\n          resultSettings.OpenAfterExport = true;\n        } else if (!(this.format === 'Pdf' || this.format === 'Xps' || this.format === 'Html' || this.format === 'Excel' || this.format === 'ExcelBinary')) {\n          resultSettings.OpenAfterExport = false;\n        }\n\n        if (this.model.options.exports.openAfterExport === true || this.model.options.exports.openAfterExport === false) {\n          resultSettings.OpenAfterExport = this.model.options.exports.openAfterExport;\n        }\n\n        settings = resultSettings;\n      } else {\n        settings = this.getDefaultExportSettings(this.format);\n      }\n\n      this.updateTypes(settings);\n      this.exportSettings = this.helper.copyObject(settings);\n    }\n\n    updateTypes(defaultExportSettings) {\n      const types = ['ImageType', 'DataType', 'ExcelType', 'HtmlType'];\n      types.forEach(propertyName => {\n        if (defaultExportSettings[propertyName]) {\n          switch (propertyName) {\n            case 'ImageType':\n              if (!this.model.options.exports.showExportToImageBmp && defaultExportSettings[propertyName] === 'Bmp') {\n                defaultExportSettings[propertyName] = 'Gif';\n              }\n\n              if (!this.model.options.exports.showExportToImageGif && defaultExportSettings[propertyName] === 'Gif') {\n                defaultExportSettings[propertyName] = 'Jpeg';\n              }\n\n              if (!this.model.options.exports.showExportToImageJpeg && defaultExportSettings[propertyName] === 'Jpeg') {\n                defaultExportSettings[propertyName] = 'Pcx';\n              }\n\n              if (!this.model.options.exports.showExportToImagePcx && defaultExportSettings[propertyName] === 'Pcx') {\n                defaultExportSettings[propertyName] = 'Png';\n              }\n\n              if (!this.model.options.exports.showExportToImagePng && defaultExportSettings[propertyName] === 'Png') {\n                defaultExportSettings[propertyName] = 'Tiff';\n              }\n\n              if (!this.model.options.exports.showExportToImageTiff && defaultExportSettings[propertyName] === 'Tiff') {\n                defaultExportSettings[propertyName] = 'Emf';\n              }\n\n              if (!this.model.options.exports.showExportToImageMetafile && defaultExportSettings[propertyName] === 'Emf') {\n                defaultExportSettings[propertyName] = 'Svg';\n              }\n\n              if (!this.model.options.exports.showExportToImageSvg && defaultExportSettings[propertyName] === 'Svg') {\n                defaultExportSettings[propertyName] = 'Svgz';\n              }\n\n              if (!this.model.options.exports.showExportToImageSvgz && defaultExportSettings[propertyName] === 'Svgz') {\n                defaultExportSettings[propertyName] = 'Bmp';\n              }\n\n              break;\n\n            case 'DataType':\n              if (!this.model.options.exports.showExportToCsv && defaultExportSettings[propertyName] === 'Csv') {\n                defaultExportSettings[propertyName] = 'Dbf';\n              }\n\n              if (!this.model.options.exports.showExportToDbf && defaultExportSettings[propertyName] === 'Dbf') {\n                defaultExportSettings[propertyName] = 'Xml';\n              }\n\n              if (!this.model.options.exports.showExportToXml && defaultExportSettings[propertyName] === 'Xml') {\n                defaultExportSettings[propertyName] = 'Dif';\n              }\n\n              if (!this.model.options.exports.showExportToDif && defaultExportSettings[propertyName] === 'Dif') {\n                defaultExportSettings[propertyName] = 'Sylk';\n              }\n\n              if (!this.model.options.exports.showExportToSylk && defaultExportSettings[propertyName] === 'Sylk') {\n                defaultExportSettings[propertyName] = 'Csv';\n              }\n\n              if (!this.model.options.exports.showExportToJson && defaultExportSettings[propertyName] === 'Json') {\n                defaultExportSettings[propertyName] = 'Json';\n              }\n\n              break;\n\n            case 'ExcelType':\n              if (!this.model.options.exports.showExportToExcel2007 && defaultExportSettings[propertyName] === 'Excel2007') {\n                defaultExportSettings[propertyName] = 'ExcelBinary';\n              }\n\n              if (!this.model.options.exports.showExportToExcel && defaultExportSettings[propertyName] === 'ExcelBinary') {\n                defaultExportSettings[propertyName] = 'ExcelXml';\n              }\n\n              if (!this.model.options.exports.showExportToExcelXml && defaultExportSettings[propertyName] === 'ExcelXml') {\n                defaultExportSettings[propertyName] = 'Excel2007';\n              }\n\n              break;\n\n            case 'HtmlType':\n              if (!this.model.options.exports.showExportToHtml && defaultExportSettings[propertyName] === 'Html') {\n                defaultExportSettings[propertyName] = 'Html5';\n              }\n\n              if (!this.model.options.exports.showExportToHtml5 && defaultExportSettings[propertyName] === 'Html5') {\n                defaultExportSettings[propertyName] = 'Mht';\n              }\n\n              if (!this.model.options.exports.showExportToMht && defaultExportSettings[propertyName] === 'Mht') {\n                defaultExportSettings[propertyName] = 'Html';\n              }\n\n              break;\n          }\n        }\n      });\n    }\n\n    getCommonExportFormat() {\n      if (this.format === 'Html' || this.format === 'Html5' || this.format === 'Mht') {\n        return 'Html';\n      }\n\n      if (this.format === 'Excel' || this.format === 'Excel2007' || this.format === 'ExcelXml') {\n        return 'Excel';\n      }\n\n      if (this.format === 'Csv' || this.format === 'Dbf' || this.format === 'Xml' || this.format === 'Dif' || this.format === 'Sylk') {\n        return 'Data';\n      }\n\n      if (this.format === 'ImageBmp' || this.format === 'ImageGif' || this.format === 'ImageJpeg' || this.format === 'ImagePcx' || this.format === 'ImagePng' || this.format === 'ImageTiff' || this.format === 'ImageEmf' || this.format === 'ImageSvg' || this.format === 'ImageSvgz') {\n        return 'Image';\n      }\n\n      return this.format;\n    }\n\n    getDefaultExportSettings(format, isDashboardExport = false) {\n      let exportSettings = null;\n\n      if (isDashboardExport) {\n        return this.model.options.exports.defaultSettings['Dashboard' + format];\n      }\n\n      switch (format) {\n        case 'Document':\n          exportSettings = {\n            Format: 'Mdc'\n          };\n          break;\n\n        case 'Pdf':\n          exportSettings = this.model.options.exports.defaultSettings['StiPdfExportSettings'];\n          break;\n\n        case 'Xps':\n          exportSettings = this.model.options.exports.defaultSettings['StiXpsExportSettings'];\n          break;\n\n        case 'Ppt2007':\n          exportSettings = this.model.options.exports.defaultSettings['StiPpt2007ExportSettings'];\n          break;\n\n        case 'Html':\n          exportSettings = this.model.options.exports.defaultSettings['StiHtmlExportSettings'];\n          exportSettings.HtmlType = 'Html';\n          break;\n\n        case 'Html5':\n          exportSettings = this.model.options.exports.defaultSettings['StiHtmlExportSettings'];\n          exportSettings.HtmlType = 'Html5';\n          break;\n\n        case 'Mht':\n          exportSettings = this.model.options.exports.defaultSettings['StiHtmlExportSettings'];\n          exportSettings.HtmlType = 'Mht';\n          break;\n\n        case 'Text':\n          exportSettings = this.model.options.exports.defaultSettings['StiTxtExportSettings'];\n          break;\n\n        case 'Rtf':\n          exportSettings = this.model.options.exports.defaultSettings['StiRtfExportSettings'];\n          break;\n\n        case 'Word2007':\n          exportSettings = this.model.options.exports.defaultSettings['StiWord2007ExportSettings'];\n          break;\n\n        case 'Odt':\n          exportSettings = this.model.options.exports.defaultSettings['StiOdtExportSettings'];\n          break;\n\n        case 'Excel':\n          exportSettings = this.model.options.exports.defaultSettings['StiExcelExportSettings'];\n          exportSettings.ExcelType = 'ExcelBinary';\n          break;\n\n        case 'ExcelXml':\n          exportSettings = this.model.options.exports.defaultSettings['StiExcelExportSettings'];\n          exportSettings.ExcelType = 'ExcelXml';\n          break;\n\n        case 'Excel2007':\n          exportSettings = this.model.options.exports.defaultSettings['StiExcelExportSettings'];\n          exportSettings.ExcelType = 'Excel2007';\n          break;\n\n        case 'Ods':\n          exportSettings = this.model.options.exports.defaultSettings['StiOdsExportSettings'];\n          break;\n\n        case 'ImageBmp':\n          exportSettings = this.model.options.exports.defaultSettings['StiImageExportSettings'];\n          exportSettings.ImageType = 'Bmp';\n          break;\n\n        case 'ImageGif':\n          exportSettings = this.model.options.exports.defaultSettings['StiImageExportSettings'];\n          exportSettings.ImageType = 'Gif';\n          break;\n\n        case 'ImageJpeg':\n          exportSettings = this.model.options.exports.defaultSettings['StiImageExportSettings'];\n          exportSettings.ImageType = 'Jpeg';\n          break;\n\n        case 'ImagePcx':\n          exportSettings = this.model.options.exports.defaultSettings['StiImageExportSettings'];\n          exportSettings.ImageType = 'Pcx';\n          break;\n\n        case 'ImagePng':\n          exportSettings = this.model.options.exports.defaultSettings['StiImageExportSettings'];\n          exportSettings.ImageType = 'Png';\n          break;\n\n        case 'ImageTiff':\n          exportSettings = this.model.options.exports.defaultSettings['StiImageExportSettings'];\n          exportSettings.ImageType = 'Tiff';\n          break;\n\n        case 'ImageSvg':\n          exportSettings = this.model.options.exports.defaultSettings['StiImageExportSettings'];\n          exportSettings.ImageType = 'Svg';\n          break;\n\n        case 'ImageSvgz':\n          exportSettings = this.model.options.exports.defaultSettings['StiImageExportSettings'];\n          exportSettings.ImageType = 'Svgz';\n          break;\n\n        case 'ImageEmf':\n          exportSettings = this.model.options.exports.defaultSettings['StiImageExportSettings'];\n          exportSettings.ImageType = 'Emf';\n          break;\n\n        case 'Xml':\n          exportSettings = this.model.options.exports.defaultSettings['StiDataExportSettings'];\n          exportSettings.DataType = 'Xml';\n          break;\n\n        case 'Csv':\n          exportSettings = this.model.options.exports.defaultSettings['StiDataExportSettings'];\n          exportSettings.DataType = 'Csv';\n          break;\n\n        case 'Dbf':\n          exportSettings = this.model.options.exports.defaultSettings['StiDataExportSettings'];\n          exportSettings.DataType = 'Dbf';\n          break;\n\n        case 'Dif':\n          exportSettings = this.model.options.exports.defaultSettings['StiDataExportSettings'];\n          exportSettings.DataType = 'Dif';\n          break;\n\n        case 'Sylk':\n          exportSettings = this.model.options.exports.defaultSettings['StiDataExportSettings'];\n          exportSettings.DataType = 'Sylk';\n          break;\n      }\n\n      exportSettings.OpenAfterExport = !(this.model.options.exports.showOpenAfterExport === false);\n\n      if (!(format === 'Pdf' || format === 'Xps' || format === 'Html' || format === 'Excel' || format === 'ExcelBinary')) {\n        exportSettings.OpenAfterExport = false;\n      }\n\n      return exportSettings;\n    }\n\n  }\n\n  ExportService.ɵfac = function ExportService_Factory(t) {\n    return new (t || ExportService)(i0.ɵɵinject(FormService), i0.ɵɵinject(HelperService), i0.ɵɵinject(ModelService), i0.ɵɵinject(CollectionsService), i0.ɵɵinject(ControllerService));\n  };\n\n  ExportService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ExportService,\n    factory: ExportService.ɵfac\n  });\n  return ExportService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet MailService = /*#__PURE__*/(() => {\n  class MailService {\n    constructor(model, exportService, formService, controller) {\n      this.model = model;\n      this.exportService = exportService;\n      this.formService = formService;\n      this.controller = controller;\n      exportService.getMessage().subscribe(event => {\n        if (event === 'postMail') {\n          this.postMail();\n        }\n      });\n    }\n\n    postMail() {\n      this.fillDefaults();\n\n      if (this.model.options.email.showEmailDialog) {\n        this.formService.showForm('sendEmailForm');\n      } else {\n        this.sendMail();\n      }\n    }\n\n    sendMail() {\n      const data = {\n        exportFormat: this.exportService.format,\n        exportSettings: this.exportService.exportSettings\n      };\n      this.formService.closeForm('sendEmailForm');\n      this.controller.post('EmailReport', this.model.options.actions.emailReport, data);\n      this.controller.actionSubject.next({\n        action: 'Email',\n        data\n      });\n    }\n\n    fillDefaults() {\n      this.exportService.exportSettings.Email = this.model.options.email.defaultEmailAddress;\n      this.exportService.exportSettings.Message = this.model.options.email.defaultEmailMessage;\n      this.exportService.exportSettings.Subject = this.model.options.email.defaultEmailSubject;\n      let ext = this.exportService.format.toLowerCase().replace('image', '');\n\n      switch (ext) {\n        case 'excel':\n          ext = 'xls';\n          break;\n\n        case 'excel2007':\n          ext = 'xlsx';\n          break;\n\n        case 'excelxml':\n          ext = 'xls';\n          break;\n\n        case 'html5':\n          ext = 'html';\n          break;\n\n        case 'jpeg':\n          ext = 'jpg';\n          break;\n\n        case 'ppt2007':\n          ext = 'ppt';\n          break;\n\n        case 'text':\n          ext = 'txt';\n          break;\n\n        case 'word2007':\n          ext = 'docx';\n          break;\n      }\n\n      this.exportService.exportSettings.Attachment = this.model.reportParams.reportFileName + '.' + ext;\n    }\n\n  }\n\n  MailService.ɵfac = function MailService_Factory(t) {\n    return new (t || MailService)(i0.ɵɵinject(ModelService), i0.ɵɵinject(ExportService), i0.ɵɵinject(FormService), i0.ɵɵinject(ControllerService));\n  };\n\n  MailService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MailService,\n    factory: MailService.ɵfac\n  });\n  return MailService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ApiService = /*#__PURE__*/(() => {\n  class ApiService {\n    constructor(model, controller, exportService, helper, mailService) {\n      this.model = model;\n      this.controller = controller;\n      this.exportService = exportService;\n      this.helper = helper;\n      this.mailService = mailService;\n      this.EXPORT_FORMATS = ['Document', 'Pdf', 'Xps', 'Ppt2007', 'Html', 'Html5', 'Mht', 'Text', 'Rtf', 'Word2007', 'Odt', 'Excel', 'ExcelBinary', 'ExcelXml', 'Excel2007', 'Ods', 'Csv', 'Dbf', 'Dif', 'Sylk', 'Json', 'Xml', 'ImageBmp', 'ImageGif', 'ImageJpeg', 'ImagePcx', 'ImagePng', 'ImageTiff', 'ImageEmf', 'ImageSvg', 'ImageSvgz'];\n    }\n    /**\r\n     * The current page number\r\n     */\n\n\n    get currentPage() {\n      return this.model.reportParams.pageNumber;\n    }\n\n    set currentPage(value) {\n      if (value >= 0 && value < this.model.reportParams.pagesCount) {\n        this.model.reportParams.pageNumber = value;\n        this.controller.getPages();\n      }\n    }\n    /**\r\n     * The total pages count\r\n     */\n\n\n    get pageCount() {\n      return this.model.reportParams.pageNumber;\n    }\n    /**\r\n     * The view mode, can be 'SinglePage', 'Continuous' & 'MultiplePages'\r\n     */\n\n\n    get viewMode() {\n      return this.model.reportParams.viewMode;\n    }\n\n    set viewMode(value) {\n      if (value === 'SinglePage' || value === 'Continuous' || value === 'MultiplePages') {\n        this.model.reportParams.viewMode = value;\n        this.controller.getPages();\n      }\n    }\n    /**\r\n     * The page zoom in percent\r\n     * From 1 to 1000\r\n     */\n\n\n    get zoom() {\n      return this.model.reportParams.zoom;\n    }\n\n    set zoom(value) {\n      if (value >= 1 && value <= 1000) {\n        this.model.reportParams.zoom = value;\n        this.controller.getPages();\n      }\n    }\n    /**\r\n     * Zoom page in height\r\n     */\n\n\n    zoomPageHeight() {\n      this.controller.action({\n        name: 'ZoomOnePage'\n      });\n    }\n    /**\r\n     * Zoom page in width\r\n     */\n\n\n    zoomPageWidth() {\n      this.controller.action({\n        name: 'ZoomPageWidth'\n      });\n    }\n    /**\r\n     * Print to PDF\r\n     */\n\n\n    printPdf() {\n      this.controller.action({\n        name: 'PrintPdf'\n      });\n    }\n    /**\r\n     * Print with preview\r\n     */\n\n\n    printWithPreview() {\n      this.controller.action({\n        name: 'PrintWithPreview'\n      });\n    }\n    /**\r\n     * Print without preview\r\n     */\n\n\n    printWithoutPreview() {\n      this.controller.action({\n        name: 'PrintWithoutPreview'\n      });\n    }\n    /**\r\n     * Show export form\r\n     *\r\n     * @param format The format to export, can be 'Document', 'Pdf', 'Xps', 'Ppt2007', 'Html', 'Html5', 'Mht', 'Text', 'Rtf', 'Word2007', 'Odt', 'Excel',\r\n     * 'ExcelBinary', 'ExcelXml', 'Excel2007', 'Ods', 'Csv', 'Dbf', 'Dif', 'Sylk', 'Json', 'Xml', 'ImageBmp',\r\n     * 'ImageGif', 'ImageJpeg', 'ImagePcx', 'ImagePng', 'ImageTiff', 'ImageEmf', 'ImageSvg', 'ImageSvgz'\r\n     */\n\n\n    showExportForm(format) {\n      if (this.EXPORT_FORMATS.some(f => f === format)) {\n        this.controller.actionSubject.next({\n          action: 'Export',\n          data: {\n            format\n          }\n        });\n      }\n    }\n    /**\r\n     * Show export form & email\r\n     *\r\n     * @param format The format to export, can be 'Document', 'Pdf', 'Xps', 'Ppt2007', 'Html', 'Html5', 'Mht', 'Text', 'Rtf', 'Word2007', 'Odt', 'Excel',\r\n     * 'ExcelBinary', 'ExcelXml', 'Excel2007', 'Ods', 'Csv', 'Dbf', 'Dif', 'Sylk', 'Json', 'Xml', 'ImageBmp',\r\n     * 'ImageGif', 'ImageJpeg', 'ImagePcx', 'ImagePng', 'ImageTiff', 'ImageEmf', 'ImageSvg', 'ImageSvgz'\r\n     */\n\n\n    showExportEmailForm(format) {\n      if (this.EXPORT_FORMATS.some(f => f === format)) {\n        this.controller.actionSubject.next({\n          action: 'SendEmail',\n          data: {\n            format\n          }\n        });\n      }\n    }\n    /**\r\n     * Export report/dashboard to selected format\r\n     * Use default settings if not specified\r\n     *\r\n     * @param format The format to export, can be 'Document', 'Pdf', 'Xps', 'Ppt2007', 'Html', 'Html5', 'Mht', 'Text', 'Rtf', 'Word2007', 'Odt', 'Excel',\r\n     * 'ExcelBinary', 'ExcelXml', 'Excel2007', 'Ods', 'Csv', 'Dbf', 'Dif', 'Sylk', 'Json', 'Xml', 'ImageBmp',\r\n     * 'ImageGif', 'ImageJpeg', 'ImagePcx', 'ImagePng', 'ImageTiff', 'ImageEmf', 'ImageSvg', 'ImageSvgz'\r\n     *\r\n     * @param settings The export settings\r\n     */\n\n\n    export(format, settings) {\n      if (this.EXPORT_FORMATS.some(f => f === format)) {\n        const exportSettings = this.getExportSettings(format, settings);\n        this.controller.postExport(format, exportSettings);\n      }\n    }\n    /**\r\n     * Export report/dashboard to seleted format & email\r\n     * Use default settings if not specified\r\n     * Use default email settings if not specified\r\n     *\r\n     * @param format The format to export, can be 'Document', 'Pdf', 'Xps', 'Ppt2007', 'Html', 'Html5', 'Mht', 'Text', 'Rtf', 'Word2007', 'Odt', 'Excel',\r\n     * 'ExcelBinary', 'ExcelXml', 'Excel2007', 'Ods', 'Csv', 'Dbf', 'Dif', 'Sylk', 'Json', 'Xml', 'ImageBmp',\r\n     * 'ImageGif', 'ImageJpeg', 'ImagePcx', 'ImagePng', 'ImageTiff', 'ImageEmf', 'ImageSvg', 'ImageSvgz'\r\n     *\r\n     * @param settings The export settings\r\n     *\r\n     * @param email The email\r\n     *\r\n     * @param message The email message\r\n     *\r\n     * @param subject The email subject\r\n     */\n\n\n    exportEmail(format, settings, email, subject, message) {\n      if (this.EXPORT_FORMATS.some(f => f === format)) {\n        this.exportService.exportSettings = this.getExportSettings(format, settings);\n        this.exportService.format = format;\n        this.mailService.fillDefaults();\n\n        if (email) {\n          this.exportService.exportSettings.Email = email;\n        }\n\n        if (message) {\n          this.exportService.exportSettings.Message = message;\n        }\n\n        if (subject) {\n          this.exportService.exportSettings.Subject = subject;\n        }\n\n        this.mailService.sendMail();\n      }\n    }\n\n    getExportSettings(format, settings) {\n      this.exportService.sendMail = false;\n      this.exportService.format = format;\n      const exportSettings = this.helper.copyObject(this.exportService.getDefaultExportSettings(format));\n\n      if (settings) {\n        Object.keys(settings).forEach(key => exportSettings[key] = settings[key]);\n      }\n\n      return exportSettings;\n    }\n\n  }\n\n  ApiService.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(ModelService), i0.ɵɵinject(ControllerService), i0.ɵɵinject(ExportService), i0.ɵɵinject(HelperService), i0.ɵɵinject(MailService));\n  };\n\n  ApiService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac\n  });\n  return ApiService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet PrintService = /*#__PURE__*/(() => {\n  class PrintService {\n    constructor(model, exportService, helper, httpClient, controller) {\n      this.model = model;\n      this.exportService = exportService;\n      this.helper = helper;\n      this.httpClient = httpClient;\n      this.controller = controller;\n      controller.getActionMessage().subscribe(message => {\n        if (message.action === 'Print') {\n          this.postPrint(message.data.format);\n        }\n      });\n      controller.getMessage().subscribe(message => {\n        if (message.action === 'PrintReport') {\n          switch (message.subAction) {\n            case 'PrintWithPreview':\n              this.printAsPopup(message.data);\n              break;\n\n            case 'PrintWithoutPreview':\n              this.printAsHtml(message.data);\n              break;\n          }\n        }\n      });\n    }\n\n    postPrint(printAction) {\n      if (printAction === 'PrintPdf' && /iPhone|iPad|iPod|Macintosh/i.test(navigator.userAgent) && this.helper.isTouchDevice()) {\n        const settings = this.exportService.getDefaultExportSettings('Pdf');\n        settings.OpenAfterExport = true;\n        this.postExport('Pdf', settings);\n        return;\n      }\n\n      const data = {\n        action: 'PrintReport',\n        printAction,\n        bookmarksPrint: this.model.options.appearance.bookmarksPrint\n      };\n      const url = ''; // this.model.options.requestUrl.replace('{action}', this.model.options.actions.printReport);\n\n      switch (printAction) {\n        case 'PrintPdf':\n          if (this.model.options.appearance.printToPdfMode === 'Popup' || this.helper.getNavigatorName() == 'Safari' || this.helper.getNavigatorName() == 'iPad') {\n            this.printAsPdfPopup(data);\n          } else {\n            this.printAsPdf(url, data);\n          }\n\n          break;\n\n        default:\n          this.controller.post('PrintReport', this.model.options.actions.printReport, data, 'text', printAction);\n          break;\n      }\n    }\n\n    postExport(format, settings, elementName, isDashboardExport) {\n      const data = {\n        action: isDashboardExport ? 'ExportDashboard' : 'ExportReport',\n        exportFormat: format,\n        exportSettings: settings,\n        elementName\n      };\n      const doc = settings && settings.OpenAfterExport && this.model.options.appearance.openExportedReportWindow === '_blank' ? this.helper.openNewWindow('about:blank', '_blank').document : null;\n      const url = this.model.requestUrl;\n      this.httpClient.postForm(url.replace('{action}', this.model.options.actions.exportReport), data, doc);\n    }\n\n    printAsPdfPopup(data) {\n      const url = this.model.requestUrl.replace('{action}', this.model.options.actions.printReport);\n      const win = this.helper.openNewWindow('about:blank', '_blank');\n\n      if (win != null) {\n        this.httpClient.postForm(url, data, win.document);\n      }\n    }\n\n    printAsPdf(url, data) {\n      data.responseType = 'blob';\n      const viewer = this.model.controls.viewer.el.nativeElement;\n      const printFrameId = this.model.options.viewerId + '_PdfPrintFrame';\n      let printFrame = document.getElementById(printFrameId);\n\n      if (printFrame) {\n        viewer.removeChild(printFrame);\n      }\n\n      printFrame = document.createElement('iframe');\n      printFrame.id = printFrameId;\n      printFrame.name = printFrameId;\n      printFrame.width = '0';\n      printFrame.height = '0';\n      printFrame.style.position = 'absolute';\n      printFrame.style.border = 'none'; // Firefox does not load the invisible content of the iframe\n\n      if (this.helper.getNavigatorName() === 'Mozilla') {\n        printFrame.width = '100px';\n        printFrame.height = '100px';\n        printFrame.style.visibility = 'hidden';\n        printFrame.style.zIndex = '-100';\n        printFrame.style.pointerEvents = 'none';\n      }\n\n      viewer.insertBefore(printFrame, viewer.firstChild); // Manual printing in browsers that do not support automatic PDF printing\n\n      if (this.helper.getNavigatorName() !== 'Mozilla') {\n        printFrame.onload = () => {\n          printFrame.contentWindow.focus();\n          printFrame.contentWindow.print();\n        };\n      }\n\n      const form = document.createElement('FORM');\n      form.setAttribute('id', 'printForm');\n      form.setAttribute('method', 'POST');\n      form.setAttribute('action', this.model.requestUrl.replace('{action}', this.model.options.actions.printReport));\n      form.setAttribute('target', this.model.options.viewerId + '_PdfPrintFrame');\n      const params = this.model.createPostParameters(data, true);\n      Object.keys(params).forEach(key => {\n        const paramsField = document.createElement('INPUT');\n        paramsField.setAttribute('type', 'hidden');\n        paramsField.setAttribute('name', key);\n        paramsField.setAttribute('value', params[key]);\n        form.appendChild(paramsField);\n      });\n      document.body.appendChild(form);\n      form.submit();\n      document.body.removeChild(form);\n    }\n\n    printAsPopup(text) {\n      const width = this.model.reportParams.pagesWidth || 790;\n      const win = this.helper.openNewWindow('about:blank', 'PrintReport', 'height=900,width=' + width + ',toolbar=no,menubar=yes,scrollbars=yes,resizable=yes,location=no,directories=no,status=no');\n\n      if (win != null) {\n        win.document.open();\n        win.document.write(text);\n        win.document.close();\n      }\n    }\n\n    printAsHtml(text) {\n      if (this.controller.showError(text)) {\n        return;\n      }\n\n      const viewer = this.model.controls.viewer.el.nativeElement; // Remove '_PdfPrintFrame', this should fix IE strange error\n\n      let printFrameId = this.model.options.viewerId + '_PdfPrintFrame';\n      let printFrame = document.getElementById(printFrameId);\n\n      if (printFrame) {\n        viewer.removeChild(printFrame);\n      }\n\n      printFrameId = this.model.options.viewerId + '_HtmlPrintFrame';\n      printFrame = document.getElementById(printFrameId);\n\n      if (printFrame) {\n        viewer.removeChild(printFrame);\n      }\n\n      printFrame = document.createElement('iframe');\n      printFrame.id = printFrameId;\n      printFrame.name = printFrameId;\n      printFrame.width = '0';\n      printFrame.height = '0';\n      printFrame.style.position = 'absolute';\n      printFrame.style.border = 'none';\n      viewer.insertBefore(printFrame, viewer.firstChild);\n      printFrame.contentWindow.document.open();\n      printFrame.contentWindow.document.write(text);\n      printFrame.contentWindow.document.close();\n      setTimeout(() => {\n        printFrame.contentWindow.focus();\n        printFrame.contentWindow.print();\n      });\n    }\n\n  }\n\n  PrintService.ɵfac = function PrintService_Factory(t) {\n    return new (t || PrintService)(i0.ɵɵinject(ModelService), i0.ɵɵinject(ExportService), i0.ɵɵinject(HelperService), i0.ɵɵinject(StiHttpClientService), i0.ɵɵinject(ControllerService));\n  };\n\n  PrintService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: PrintService,\n    factory: PrintService.ɵfac\n  });\n  return PrintService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet DashboardService = /*#__PURE__*/(() => {\n  class DashboardService {\n    constructor(controller, model) {\n      this.controller = controller;\n      this.model = model;\n      controller.getMessage().subscribe(message => {\n        if (message.action === 'GetReport' || message.action === 'OpenReport') {\n          setTimeout(() => {\n            if (this.model.reportParams.autoZoom) {}\n          });\n        }\n      });\n    }\n\n  }\n\n  DashboardService.ɵfac = function DashboardService_Factory(t) {\n    return new (t || DashboardService)(i0.ɵɵinject(ControllerService), i0.ɵɵinject(ModelService));\n  };\n\n  DashboardService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DashboardService,\n    factory: DashboardService.ɵfac\n  });\n  return DashboardService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TooltipService = /*#__PURE__*/(() => {\n  class TooltipService {\n    constructor(model, menuService) {\n      this.model = model;\n      this.menuService = menuService;\n      this.state = 'initial';\n      this.caption = '';\n      this.helpLink = '';\n      this.top = 0;\n      this.left = 0;\n      this.innerState = 'initial';\n    }\n\n    show(left, top, caption, below = true, helpLink) {\n      if (this.menuService.isMenuVisible() || !this.model.options.appearance.showTooltips) {\n        this.hideImmediately();\n        return;\n      }\n\n      if (this.caption === caption && this.helpLink === helpLink && this.state !== 'initial') {\n        this.showInternal();\n        return;\n      }\n\n      this.caption = caption;\n      this.helpLink = helpLink;\n      this.state = this.innerState = this.state !== 'expanded' ? 'preInitial' : 'preInitial2';\n      setTimeout(() => {\n        const tooltip = this.model.controls.tooltip.el.nativeElement;\n        const browserWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n\n        if (!below) {\n          top -= tooltip.offsetHeight;\n        }\n\n        if (left + tooltip.offsetWidth > browserWidth) {\n          left = browserWidth - tooltip.offsetWidth;\n        }\n\n        this.left = left;\n        this.top = top;\n\n        if (this.innerState !== 'initial') {\n          this.showInternal();\n        }\n      });\n    }\n\n    showInternal() {\n      this.state = 'expanded';\n      this.innerState = 'expanded';\n    }\n\n    showFromTooltip() {\n      if (this.state !== 'preInitial') {\n        this.state = 'expanded';\n        this.innerState = 'expanded';\n      }\n    }\n\n    hideImmediately() {\n      this.innerState = 'initial';\n      this.state = 'initial';\n    }\n\n    hide() {\n      this.innerState = 'initial';\n\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n      }\n\n      this.timeout = setTimeout(() => {\n        if (this.innerState === 'initial') {\n          this.state = 'initial';\n        }\n\n        this.timeout = null;\n      }, 1000);\n    }\n\n  }\n\n  TooltipService.ɵfac = function TooltipService_Factory(t) {\n    return new (t || TooltipService)(i0.ɵɵinject(ModelService), i0.ɵɵinject(MenuService));\n  };\n\n  TooltipService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TooltipService,\n    factory: TooltipService.ɵfac\n  });\n  return TooltipService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet FindService = /*#__PURE__*/(() => {\n  class FindService {\n    constructor(model, helper, animationService) {\n      this.model = model;\n      this.helper = helper;\n      this.animationService = animationService;\n      this.symbols = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890';\n      this.findLabels = [];\n      this.text = '';\n      this.lastFindText = '';\n      this.matchCase = false;\n      this.matchWholeWord = false;\n      this.findMode = false;\n      model.controls.findPanel.getVisibility().subscribe(value => {\n        if (!value) {\n          this.hideFindLabels();\n          this.lastFindText = '';\n        }\n      });\n    }\n\n    hideFindLabels() {\n      this.findLabels.forEach(findLabel => {\n        const parentElement = findLabel.parentElement;\n        parentElement.removeChild(findLabel);\n\n        if (parentElement.oldPositionStyle) {\n          parentElement.style.position = parentElement.oldPositionStyle;\n        }\n      });\n      this.findLabels = [];\n      this.findMode = false;\n      this.lastFindText = '';\n    }\n\n    selectFindLabel(direction) {\n      if (this.findLabels.length === 0) {\n        return;\n      }\n\n      let selectedIndex = 0;\n      const labels = this.findLabels;\n\n      for (let i = 0; i < labels.length; i++) {\n        if (labels[i].isSelected) {\n          labels[i].setSelected(false);\n          selectedIndex = i;\n          break;\n        }\n      }\n\n      if (direction === 'Next') {\n        selectedIndex++;\n\n        if (selectedIndex > labels.length - 1) {\n          selectedIndex = 0;\n        }\n      } else {\n        selectedIndex--;\n\n        if (selectedIndex < 0) {\n          selectedIndex = labels.length - 1;\n        }\n      }\n\n      labels[selectedIndex].setSelected(true);\n      this.goToFindedElement(labels[selectedIndex]);\n    }\n\n    showFindLabels() {\n      this.hideFindLabels();\n      this.findMode = true;\n      this.lastFindText = this.text;\n      const text = this.matchCase ? this.text : this.text.toLowerCase();\n      this.model.pages.forEach(page => {\n        const pageElements = page.page.getElementsByTagName('*');\n\n        for (const pageElement of pageElements) {\n          let innerText = pageElement.innerHTML;\n\n          if (innerText && pageElement.childNodes.length === 1 && pageElement.childNodes[0].nodeName === '#text') {\n            if (!this.matchCase) {\n              innerText = innerText.toLowerCase();\n            }\n\n            if (innerText.indexOf(text) >= 0) {\n              if (this.matchWholeWord && !this.isWholeWord(innerText, text)) {\n                continue;\n              }\n\n              const label = document.createElement('div');\n              label.ownerElement = pageElement;\n              label.className = 'stiJsViewerFindLabel';\n              label.style.width = pageElement.offsetWidth - 4 + 'px';\n              const labelHeight = pageElement.offsetHeight - 4;\n              label.style.height = labelHeight + 'px';\n              label.style.top = '0px';\n              label.style.left = '0px';\n              label.ownerElement.oldPositionStyle = label.ownerElement.style.position;\n\n              if (label.ownerElement.style.position !== 'absolute' && label.ownerElement.style.position !== 'fixed') {\n                label.ownerElement.style.position = 'relative';\n              }\n\n              pageElement.insertBefore(label, pageElement.childNodes[0]);\n\n              label.setSelected = function (state) {\n                this.isSelected = state;\n                this.style.border = '2px solid ' + (state ? 'red' : '#8a8a8a');\n              };\n\n              if (this.findLabels.length === 0) {\n                label.setSelected(true);\n              }\n\n              this.findLabels.push(label);\n            }\n          }\n        }\n      });\n\n      if (this.findLabels.length > 0) {\n        this.goToFindedElement(this.findLabels[0]);\n      }\n    }\n\n    goToFindedElement(findLabel) {\n      if (findLabel && findLabel.ownerElement) {\n        const targetTop = this.helper.findPosY(findLabel.ownerElement, this.model.options.appearance.scrollbarsMode ? 'stiJsViewerReportPanel' : null, true) - findLabel.ownerElement.offsetHeight - 50;\n        const d = new Date();\n        const endTime = d.getTime() + this.model.options.scrollDuration;\n        this.animationService.showAnimationForScroll(this.model.controls.reportPanel.el.nativeElement, targetTop, endTime, () => {});\n      }\n    }\n\n    isWholeWord(str, word) {\n      const index = str.indexOf(word);\n      const preSymbol = str.substring(index - 1, index);\n      const nextSymbol = str.substring(index + word.length, index + word.length + 1);\n      return (preSymbol === '' || this.symbols.indexOf(preSymbol) === -1) && (nextSymbol === '' || this.symbols.indexOf(nextSymbol) === -1);\n    }\n\n  }\n\n  FindService.ɵfac = function FindService_Factory(t) {\n    return new (t || FindService)(i0.ɵɵinject(ModelService), i0.ɵɵinject(HelperService), i0.ɵɵinject(AnimationService));\n  };\n\n  FindService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: FindService,\n    factory: FindService.ɵfac\n  });\n  return FindService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet Md5Service = /*#__PURE__*/(() => {\n  class Md5Service {\n    constructor() {\n      this.hexcase = 0;\n    }\n\n    hex_md5(a) {\n      return this.rstr2hex(this.rstr_md5(this.str2rstr_utf8(a)));\n    }\n\n    hex_hmac_md5(a, b) {\n      return this.rstr2hex(this.rstr_hmac_md5(this.str2rstr_utf8(a), this.str2rstr_utf8(b)));\n    }\n\n    md5_vm_test() {\n      return this.hex_md5('abc').toLowerCase() == '900150983cd24fb0d6963f7d28e17f72';\n    }\n\n    rstr_md5(a) {\n      return this.binl2rstr(this.binl_md5(this.rstr2binl(a), a.length * 8));\n    }\n\n    rstr_hmac_md5(c, f) {\n      let e = this.rstr2binl(c);\n\n      if (e.length > 16) {\n        e = this.binl_md5(e, c.length * 8);\n      }\n\n      let a = Array(16),\n          d = Array(16);\n\n      for (let b = 0; b < 16; b++) {\n        a[b] = e[b] ^ 909522486;\n        d[b] = e[b] ^ 1549556828;\n      }\n\n      let g = this.binl_md5(a.concat(this.rstr2binl(f)), 512 + f.length * 8);\n      return this.binl2rstr(this.binl_md5(d.concat(g), 512 + 128));\n    }\n\n    rstr2hex(c) {\n      try {\n        this.hexcase;\n      } catch (g) {\n        this.hexcase = 0;\n      }\n\n      let f = this.hexcase ? '0123456789ABCDEF' : '0123456789abcdef';\n      let b = '';\n      let a;\n\n      for (let d = 0; d < c.length; d++) {\n        a = c.charCodeAt(d);\n        b += f.charAt(a >>> 4 & 15) + f.charAt(a & 15);\n      }\n\n      return b;\n    }\n\n    str2rstr_utf8(c) {\n      let b = '';\n      let d = -1;\n      let a, e;\n\n      while (++d < c.length) {\n        a = c.charCodeAt(d);\n        e = d + 1 < c.length ? c.charCodeAt(d + 1) : 0;\n\n        if (55296 <= a && a <= 56319 && 56320 <= e && e <= 57343) {\n          a = 65536 + ((a & 1023) << 10) + (e & 1023);\n          d++;\n        }\n\n        if (a <= 127) {\n          b += String.fromCharCode(a);\n        } else {\n          if (a <= 2047) {\n            b += String.fromCharCode(192 | a >>> 6 & 31, 128 | a & 63);\n          } else {\n            if (a <= 65535) {\n              b += String.fromCharCode(224 | a >>> 12 & 15, 128 | a >>> 6 & 63, 128 | a & 63);\n            } else {\n              if (a <= 2097151) {\n                b += String.fromCharCode(240 | a >>> 18 & 7, 128 | a >>> 12 & 63, 128 | a >>> 6 & 63, 128 | a & 63);\n              }\n            }\n          }\n        }\n      }\n\n      return b;\n    }\n\n    rstr2binl(b) {\n      let a = Array(b.length >> 2);\n\n      for (let c = 0; c < a.length; c++) {\n        a[c] = 0;\n      }\n\n      for (let c = 0; c < b.length * 8; c += 8) {\n        a[c >> 5] |= (b.charCodeAt(c / 8) & 255) << c % 32;\n      }\n\n      return a;\n    }\n\n    binl2rstr(b) {\n      let a = '';\n\n      for (let c = 0; c < b.length * 32; c += 8) {\n        a += String.fromCharCode(b[c >> 5] >>> c % 32 & 255);\n      }\n\n      return a;\n    }\n\n    binl_md5(p, k) {\n      p[k >> 5] |= 128 << k % 32;\n      p[(k + 64 >>> 9 << 4) + 14] = k;\n      let o = 1732584193;\n      let n = -271733879;\n      let m = -1732584194;\n      let l = 271733878;\n\n      for (let g = 0; g < p.length; g += 16) {\n        let j = o;\n        let h = n;\n        let f = m;\n        let e = l;\n        o = this.md5_ff(o, n, m, l, p[g + 0], 7, -680876936);\n        l = this.md5_ff(l, o, n, m, p[g + 1], 12, -389564586);\n        m = this.md5_ff(m, l, o, n, p[g + 2], 17, 606105819);\n        n = this.md5_ff(n, m, l, o, p[g + 3], 22, -1044525330);\n        o = this.md5_ff(o, n, m, l, p[g + 4], 7, -176418897);\n        l = this.md5_ff(l, o, n, m, p[g + 5], 12, 1200080426);\n        m = this.md5_ff(m, l, o, n, p[g + 6], 17, -1473231341);\n        n = this.md5_ff(n, m, l, o, p[g + 7], 22, -45705983);\n        o = this.md5_ff(o, n, m, l, p[g + 8], 7, 1770035416);\n        l = this.md5_ff(l, o, n, m, p[g + 9], 12, -1958414417);\n        m = this.md5_ff(m, l, o, n, p[g + 10], 17, -42063);\n        n = this.md5_ff(n, m, l, o, p[g + 11], 22, -1990404162);\n        o = this.md5_ff(o, n, m, l, p[g + 12], 7, 1804603682);\n        l = this.md5_ff(l, o, n, m, p[g + 13], 12, -40341101);\n        m = this.md5_ff(m, l, o, n, p[g + 14], 17, -1502002290);\n        n = this.md5_ff(n, m, l, o, p[g + 15], 22, 1236535329);\n        o = this.md5_gg(o, n, m, l, p[g + 1], 5, -165796510);\n        l = this.md5_gg(l, o, n, m, p[g + 6], 9, -1069501632);\n        m = this.md5_gg(m, l, o, n, p[g + 11], 14, 643717713);\n        n = this.md5_gg(n, m, l, o, p[g + 0], 20, -373897302);\n        o = this.md5_gg(o, n, m, l, p[g + 5], 5, -701558691);\n        l = this.md5_gg(l, o, n, m, p[g + 10], 9, 38016083);\n        m = this.md5_gg(m, l, o, n, p[g + 15], 14, -660478335);\n        n = this.md5_gg(n, m, l, o, p[g + 4], 20, -405537848);\n        o = this.md5_gg(o, n, m, l, p[g + 9], 5, 568446438);\n        l = this.md5_gg(l, o, n, m, p[g + 14], 9, -1019803690);\n        m = this.md5_gg(m, l, o, n, p[g + 3], 14, -187363961);\n        n = this.md5_gg(n, m, l, o, p[g + 8], 20, 1163531501);\n        o = this.md5_gg(o, n, m, l, p[g + 13], 5, -1444681467);\n        l = this.md5_gg(l, o, n, m, p[g + 2], 9, -51403784);\n        m = this.md5_gg(m, l, o, n, p[g + 7], 14, 1735328473);\n        n = this.md5_gg(n, m, l, o, p[g + 12], 20, -1926607734);\n        o = this.md5_hh(o, n, m, l, p[g + 5], 4, -378558);\n        l = this.md5_hh(l, o, n, m, p[g + 8], 11, -2022574463);\n        m = this.md5_hh(m, l, o, n, p[g + 11], 16, 1839030562);\n        n = this.md5_hh(n, m, l, o, p[g + 14], 23, -35309556);\n        o = this.md5_hh(o, n, m, l, p[g + 1], 4, -1530992060);\n        l = this.md5_hh(l, o, n, m, p[g + 4], 11, 1272893353);\n        m = this.md5_hh(m, l, o, n, p[g + 7], 16, -155497632);\n        n = this.md5_hh(n, m, l, o, p[g + 10], 23, -1094730640);\n        o = this.md5_hh(o, n, m, l, p[g + 13], 4, 681279174);\n        l = this.md5_hh(l, o, n, m, p[g + 0], 11, -358537222);\n        m = this.md5_hh(m, l, o, n, p[g + 3], 16, -722521979);\n        n = this.md5_hh(n, m, l, o, p[g + 6], 23, 76029189);\n        o = this.md5_hh(o, n, m, l, p[g + 9], 4, -640364487);\n        l = this.md5_hh(l, o, n, m, p[g + 12], 11, -421815835);\n        m = this.md5_hh(m, l, o, n, p[g + 15], 16, 530742520);\n        n = this.md5_hh(n, m, l, o, p[g + 2], 23, -995338651);\n        o = this.md5_ii(o, n, m, l, p[g + 0], 6, -198630844);\n        l = this.md5_ii(l, o, n, m, p[g + 7], 10, 1126891415);\n        m = this.md5_ii(m, l, o, n, p[g + 14], 15, -1416354905);\n        n = this.md5_ii(n, m, l, o, p[g + 5], 21, -57434055);\n        o = this.md5_ii(o, n, m, l, p[g + 12], 6, 1700485571);\n        l = this.md5_ii(l, o, n, m, p[g + 3], 10, -1894986606);\n        m = this.md5_ii(m, l, o, n, p[g + 10], 15, -1051523);\n        n = this.md5_ii(n, m, l, o, p[g + 1], 21, -2054922799);\n        o = this.md5_ii(o, n, m, l, p[g + 8], 6, 1873313359);\n        l = this.md5_ii(l, o, n, m, p[g + 15], 10, -30611744);\n        m = this.md5_ii(m, l, o, n, p[g + 6], 15, -1560198380);\n        n = this.md5_ii(n, m, l, o, p[g + 13], 21, 1309151649);\n        o = this.md5_ii(o, n, m, l, p[g + 4], 6, -145523070);\n        l = this.md5_ii(l, o, n, m, p[g + 11], 10, -1120210379);\n        m = this.md5_ii(m, l, o, n, p[g + 2], 15, 718787259);\n        n = this.md5_ii(n, m, l, o, p[g + 9], 21, -343485551);\n        o = this.safe_add(o, j);\n        n = this.safe_add(n, h);\n        m = this.safe_add(m, f);\n        l = this.safe_add(l, e);\n      }\n\n      return Array(o, n, m, l);\n    }\n\n    md5_cmn(h, e, d, c, g, f) {\n      return this.safe_add(this.bit_rol(this.safe_add(this.safe_add(e, h), this.safe_add(c, f)), g), d);\n    }\n\n    md5_ff(g, f, k, j, e, i, h) {\n      return this.md5_cmn(f & k | ~f & j, g, f, e, i, h);\n    }\n\n    md5_gg(g, f, k, j, e, i, h) {\n      return this.md5_cmn(f & j | k & ~j, g, f, e, i, h);\n    }\n\n    md5_hh(g, f, k, j, e, i, h) {\n      return this.md5_cmn(f ^ k ^ j, g, f, e, i, h);\n    }\n\n    md5_ii(g, f, k, j, e, i, h) {\n      return this.md5_cmn(k ^ (f | ~j), g, f, e, i, h);\n    }\n\n    safe_add(a, d) {\n      let c = (a & 65535) + (d & 65535);\n      let b = (a >> 16) + (d >> 16) + (c >> 16);\n      return b << 16 | c & 65535;\n    }\n\n    bit_rol(a, b) {\n      return a << b | a >>> 32 - b;\n    }\n\n  }\n\n  Md5Service.ɵfac = function Md5Service_Factory(t) {\n    return new (t || Md5Service)();\n  };\n\n  Md5Service.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: Md5Service,\n    factory: Md5Service.ɵfac\n  });\n  return Md5Service;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet DrillDownService = /*#__PURE__*/(() => {\n  class DrillDownService {\n    constructor(controller, model, helper) {\n      this.controller = controller;\n      this.model = model;\n      this.helper = helper;\n      controller.getMessage().subscribe(message => {\n        if (message.action !== 'InitVars' && message.action !== 'viewer_loaded') {\n          this.model.options.drillDownInProgress = false;\n          const parameters = message.data;\n\n          if (this.model.drillDownButtons.length === 0) {\n            this.addButton(parameters.reportFileName, {});\n          }\n\n          if (message.action === 'DrillDown') {\n            const useDbsDrillDownPanel = false; // jsObject.controls.dashboardsPanel && jsObject.controls.dashboardsPanel.visible && jsObject.controls.dashboardsPanel.selectedButton;\n\n            if (useDbsDrillDownPanel) {// jsObject.controls.dashboardsPanel.addDrillDownButton(null, parameters.drillDownGuid, parameters.drillDownParameters, parameters.previewSettings, parameters.reportFileName);\n            }\n\n            this.showDrillDownPage(parameters.reportFileName, parameters.drillDownGuid, parameters.drillDownParameters, useDbsDrillDownPanel);\n          }\n        }\n      });\n    }\n\n    showDrillDownPage(reportFileName, drillDownGuid, drillDownParameters, useDbsDrillDownPanel) {\n      if (useDbsDrillDownPanel) {\n        return;\n      }\n\n      let buttonExist = false;\n      this.model.drillDownButtons.forEach(b => {\n        if (b.reportParams.drillDownGuid === drillDownGuid) {\n          this.model.drillDownButtons.forEach(bt => bt.selected = false);\n          buttonExist = b.selected = b.visible = true;\n          this.model.reportParams.drillDownParameters = b.reportParams.drillDownParameters;\n        }\n      });\n\n      if (!buttonExist) {\n        this.addButton(reportFileName);\n        this.model.reportParams.drillDownParameters = drillDownParameters;\n        this.model.reportParams.pageNumber = 0;\n        this.model.reportParams.pagesWidth = 0;\n        this.model.reportParams.pagesHeight = 0;\n      }\n    }\n\n    addButton(caption, reportParams = {}) {\n      this.model.drillDownButtons.forEach(b => b.selected = false);\n      this.model.drillDownButtons.push({\n        caption,\n        selected: true,\n        reportParams,\n        visible: true\n      });\n      this.updateVisibility();\n    }\n\n    updateVisibility() {\n      this.model.controls.drillDownPanel.visible = this.model.drillDownButtons.length > 1;\n    }\n\n    saveState() {\n      const sButton = this.model.drillDownButtons.find(b => b.selected);\n\n      if (sButton) {\n        sButton.reportParams = this.model.getReportParams();\n      }\n    }\n\n  }\n\n  DrillDownService.ɵfac = function DrillDownService_Factory(t) {\n    return new (t || DrillDownService)(i0.ɵɵinject(ControllerService), i0.ɵɵinject(ModelService), i0.ɵɵinject(HelperService));\n  };\n\n  DrillDownService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DrillDownService,\n    factory: DrillDownService.ɵfac\n  });\n  return DrillDownService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet InteractionsService = /*#__PURE__*/(() => {\n  class InteractionsService {\n    constructor(model, md5, controller, helper, drillDownService) {\n      this.model = model;\n      this.md5 = md5;\n      this.controller = controller;\n      this.helper = helper;\n      this.drillDownService = drillDownService;\n      controller.getMessage().subscribe(message => {\n        if (message.action === 'InitVars') {\n          this.showParametersPanel(message.data);\n        }\n      });\n      controller.getActionMessage().subscribe(message => {\n        switch (message.action) {\n          case 'Variables':\n            this.postInteraction({\n              action: 'Variables',\n              variables: this.getParametersValues()\n            });\n            break;\n\n          case 'Reset':\n            this.showParametersPanel(this.model.options.paramsVariables);\n            break;\n\n          default:\n            break;\n        }\n      });\n    }\n\n    postInteraction(params) {\n      this.drillDownService.saveState(); // Add new drill-down parameters to drill-down queue and calc guid\n\n      if (params.action !== 'InitVars' && (params.action === 'DrillDown' || params.action === 'DashboardDrillDown')) {\n        if (this.model.options.drillDownInProgress) {\n          return;\n        }\n\n        if (params.action === 'DashboardDrillDown' && params.drillDownParameters) {\n          params.drillDownParameters.isDashboardDrillDown = true; // add dbs flag\n        }\n\n        const drillDownParameters = this.model.reportParams.drillDownParameters || [];\n        params.drillDownParameters = params.drillDownParameters ? drillDownParameters.concat(params.drillDownParameters) : drillDownParameters;\n\n        if (params.action === 'DrillDown') {\n          params.drillDownGuid = this.md5.hex_md5(JSON.stringify(this.sortPropsInDrillDownParameters(params.drillDownParameters)));\n        } else {\n          params.dashboardDrillDownGuid = this.md5.hex_md5(JSON.stringify(this.sortPropsInDrillDownParameters(params.drillDownParameters)));\n        }\n\n        this.model.options.drillDownInProgress = true;\n      }\n\n      this.controller.post(params.action, this.model.options.actions.interaction, params);\n    }\n\n    showParametersPanel(data) {\n      if (!data) {\n        return;\n      }\n\n      if (this.controller.showError(data)) {\n        data = null;\n      }\n\n      this.model.options.isParametersReceived = true;\n      this.model.options.paramsVariables = typeof data === 'string' ? JSON.parse(data) : data;\n      this.model.controls.parametersPanel.visible = !this.model.options.isMobileDevice; // if (this.model.reportParams.type === 'Dashboard') jsObject.postAction('GetPages');\n\n      const paramsVariables = this.helper.copyObject(this.model.options.paramsVariables);\n      const countParameters = this.helper.getCountObjects(paramsVariables);\n      const countColumns = countParameters <= this.model.options.minParametersCountForMultiColumns ? 1 : this.model.options.appearance.parametersPanelColumnsCount;\n      let countInColumn = Math.trunc(countParameters / countColumns);\n\n      if (countInColumn * countColumns < countParameters) {\n        countInColumn++;\n      } // setup lists\n\n\n      for (let i = 0; i < countParameters; i++) {\n        const variable = paramsVariables[i];\n\n        if (variable.items) {\n          variable.items.forEach((v, index) => {\n            let isChecked = true;\n            if (variable.value instanceof Array && !variable.allowUserValues && variable.value.indexOf(variable.items[index].value) < 0 && variable.value.indexOf(variable.items[index].key) < 0) isChecked = false;\n\n            if (variable.isFirstInitialization && variable.checkedStates && index < variable.checkedStates.length) {\n              isChecked = variable.checkedStates[index];\n            }\n\n            v.isChecked = isChecked;\n            v.visible = true;\n          });\n        }\n\n        variable.isNull = variable.type === 'DateTime' && variable.value === null && variable.basicType === 'NullableValue';\n      }\n\n      this.model.interactions = {\n        paramsVariables,\n        countColumns: new Array(countColumns),\n        countInColumn: new Array(countInColumn)\n      };\n    }\n\n    sortPropsInDrillDownParameters(inArray) {\n      if (!inArray || !inArray.length) {\n        return inArray;\n      }\n\n      const outArray = [];\n\n      for (let i = 0; i < inArray.length; i++) {\n        const propNames = [];\n        const el = inArray[i];\n        const copyEl = {};\n        Object.keys(el).forEach(p => {\n          if (el.hasOwnProperty(p)) {\n            propNames.push(p);\n          }\n        });\n        propNames.sort();\n        propNames.forEach(propName => copyEl[propName] = el[propName]);\n        outArray[i] = copyEl;\n      }\n\n      return outArray;\n    }\n\n    getParametersValues() {\n      const parametersValues = {};\n      Object.keys(this.model.interactions.paramsVariables).forEach(i => {\n        const parameter = this.model.interactions.paramsVariables[i];\n        parametersValues[parameter.name] = this.getVariableValue(parameter);\n      });\n      return parametersValues;\n    }\n\n    getVariableValue(parameter) {\n      if (parameter.isNull) {\n        return null;\n      }\n\n      switch (parameter.basicType) {\n        case 'Value':\n        case 'NullableValue':\n          return this.val(parameter.key, parameter, parameter.allowUserValues ? parameter.value : parameter.key);\n\n        case 'Range':\n          return {\n            from: this.val(parameter.key, parameter),\n            to: this.val(parameter.keyTo, parameter)\n          };\n\n        case 'List':\n          const value = [];\n\n          if (parameter.items) {\n            parameter.items.filter(i => parameter.allowUserValues || i.isChecked).forEach(item => value.push(this.val(item.key, parameter)));\n          }\n\n          return value;\n      }\n    }\n\n    val(key, parameter, value) {\n      return parameter.type === 'DateTime' ? this.helper.getStringDateTime(key, parameter.dateTimeType) : value === undefined ? key : value;\n    }\n\n    initializeInteractions(page) {\n      if (!page) {\n        return;\n      }\n\n      const elems = page.querySelectorAll ? page.querySelectorAll('td,div,span,rect,path,ellipse') : page.getElementsByTagName('td');\n      const collapsedHash = [];\n\n      for (const elem of elems) {\n        if (elem.getAttribute('interaction') && (elem.getAttribute('pageguid') || elem.getAttribute('reportfile') || elem.getAttribute('collapsed') || elem.getAttribute('databandsort'))) {\n          elem.style.cursor = 'pointer';\n          const sort = elem.getAttribute('sort');\n\n          if (sort) {\n            this.paintSortingArrow(elem, sort);\n          }\n\n          const collapsed = elem.getAttribute('collapsed');\n\n          if (collapsed) {\n            const compId = elem.getAttribute('compindex') + '|' + elem.getAttribute('interaction');\n\n            if (collapsedHash.indexOf(compId) < 0) {\n              this.paintCollapsingIcon(elem, collapsed === 'true');\n              collapsedHash.push(compId);\n            }\n          }\n\n          elem.onclick = e => {\n            if (elem.getAttribute('pageguid') || elem.getAttribute('reportfile')) {\n              this.postInteractionDrillDown(elem);\n            } else if (elem.getAttribute('collapsed')) {\n              this.postInteractionCollapsing(elem);\n            } else {\n              this.postInteractionSorting(elem, e.ctrlKey);\n            }\n          };\n\n          if (elem.getAttribute('pageguid') || elem.getAttribute('reportfile')) {\n            elem.onmouseover = () => elem.style.opacity = 0.75;\n\n            elem.onmouseout = () => elem.style.opacity = 1;\n          }\n        }\n      }\n    }\n\n    getComponentOffset(component) {\n      let offsetX = 0;\n      let offsetY = 0;\n      const startComponent = component;\n\n      while (component && !isNaN(component.offsetLeft) && !isNaN(component.offsetTop) && (component === startComponent || component.style.position === '' || component.style.position === 'static')) {\n        offsetX += component.offsetLeft - component.scrollLeft;\n        offsetY += component.offsetTop - component.scrollTop;\n        component = component.offsetParent;\n      }\n\n      return {\n        top: offsetY,\n        left: offsetX\n      };\n    }\n\n    paintSortingArrow(component, sort) {\n      if (component.arrowImg) {\n        return;\n      }\n\n      const arrowImg = document.createElement(\"div\");\n      let sortUpSrc = \"<svg xmlns='http://www.w3.org/2000/svg' width='12' height='12'><path d='M1 9l5-4 5 4z' fill='#eeeeee' stroke='#666'/></svg>\";\n      let sortDownSrc = \"<svg xmlns='http://www.w3.org/2000/svg' width='12' height='12'><path d='M1 5l5 4 5-4z' fill='#eeeeee' stroke='#666'/></svg>\";\n      arrowImg.innerHTML = sort == \"asc\" ? sortDownSrc : sortUpSrc;\n      const arrowWidth = this.model.reportParams.zoom / 100 * 16;\n      const arrowHeight = this.model.reportParams.zoom / 100 * 16;\n      arrowImg.style.position = 'absolute';\n      arrowImg.style.width = arrowWidth + 'px';\n      arrowImg.style.height = arrowHeight + 'px';\n      component.appendChild(arrowImg);\n      component.arrowImg = arrowImg;\n      const oldPosition = component.style.position;\n      const oldClassName = component.className;\n      let reportDisplayMode = this.model.options.displayModeFromReport || this.model.options.appearance.reportDisplayMode;\n      if (reportDisplayMode == \"Table\") component.style.position = \"relative\";\n\n      if (!oldClassName) {\n        component.className = 'stiSortingParentElement';\n      }\n\n      const arrowLeftPos = this.helper.findPosX(arrowImg, component.className);\n      const arrowTopPos = this.helper.findPosY(arrowImg, component.className);\n      arrowImg.style.marginLeft = component.offsetWidth - arrowLeftPos - arrowWidth - this.model.reportParams.zoom / 100 * 3 + 'px';\n      arrowImg.style.marginTop = component.offsetHeight / 2 - arrowHeight / 2 - arrowTopPos + 'px';\n      if (oldPosition && reportDisplayMode == \"Table\") component.style.position = oldPosition;\n      component.className = oldClassName;\n    }\n\n    paintCollapsingIcon(component, collapsed) {\n      if (component.collapsImg) {\n        return;\n      }\n\n      const collapsImg = document.createElement('img');\n      collapsImg.src = collapsed ? this.model.img('CollapsingPlus.png') : this.model.img('CollapsingMinus.png');\n      collapsImg.style.position = 'absolute';\n      const collapsWidth = this.model.reportParams.zoom / 100 * 10;\n      const collapsHeight = this.model.reportParams.zoom / 100 * 10;\n      collapsImg.style.width = collapsWidth + 'px';\n      collapsImg.style.height = collapsHeight + 'px';\n      component.appendChild(collapsImg);\n      component.collapsImg = collapsImg;\n      const componentOffset = this.getComponentOffset(component);\n      const collapsOffset = this.getComponentOffset(collapsImg);\n      collapsImg.style.marginLeft = componentOffset.left - collapsOffset.left + collapsWidth / 3 + 'px';\n      collapsImg.style.marginTop = componentOffset.top - collapsOffset.top + collapsWidth / 3 + 'px';\n    }\n\n    postInteractionSorting(component, isCtrl) {\n      const params = {\n        action: 'Sorting',\n        sortingParameters: {\n          ComponentName: component.getAttribute('interaction') + ';' + isCtrl.toString(),\n          DataBand: component.getAttribute('databandsort')\n        }\n      };\n\n      if (this.model.options.isParametersReceived) {\n        params.variables = this.getParametersValues();\n      }\n\n      this.postInteraction(params);\n    }\n\n    postInteractionDrillDown(component) {\n      const params = {\n        action: 'DrillDown',\n        drillDownParameters: {\n          ComponentIndex: component.getAttribute('compindex'),\n          ElementIndex: component.getAttribute('elementindex'),\n          PageIndex: component.getAttribute('pageindex'),\n          PageGuid: component.getAttribute('pageguid'),\n          ReportFile: component.getAttribute('reportfile')\n        }\n      };\n      this.postInteraction(params);\n    }\n\n    postInteractionCollapsing(component) {\n      const componentName = component.getAttribute('interaction');\n      const collapsingIndex = component.getAttribute('compindex');\n      const collapsed = component.getAttribute('collapsed') === 'true' ? false : true;\n\n      if (!this.model.reportParams.collapsingStates) {\n        this.model.reportParams.collapsingStates = {};\n      }\n\n      if (!this.model.reportParams.collapsingStates[componentName]) {\n        this.model.reportParams.collapsingStates[componentName] = {};\n      }\n\n      this.model.reportParams.collapsingStates[componentName][collapsingIndex] = collapsed;\n      const params = {\n        action: 'Collapsing',\n        collapsingParameters: {\n          ComponentName: componentName,\n          CollapsingStates: this.model.reportParams.collapsingStates\n        }\n      };\n\n      if (this.model.options.isParametersReceived) {\n        params.variables = this.getParametersValues();\n      }\n\n      this.postInteraction(params);\n    }\n\n    updateAllHyperLinks() {\n      let pointers = this.model.reportParams.tableOfContentsPointers; //var bookmarksPanel = this.controls.bookmarksPanel;\n\n      if (this.model.reportParams.bookmarksContent != null || pointers && pointers.length > 0) {\n        this.model.pages.forEach(p => {\n          const page = p.page;\n          const aHyperlinks = page.getElementsByTagName('a');\n\n          for (const aHyperlink of aHyperlinks) {\n            aHyperlink.hrefContent = aHyperlink.getAttribute('href');\n\n            if (aHyperlink.hrefContent) {\n              if (aHyperlink.hrefContent.indexOf(\"#\") == 0) {\n                let anchorParams = aHyperlink.hrefContent.substring(1).split(\"#GUID#\");\n                aHyperlink.anchorName = anchorParams[0];\n                aHyperlink.componentGuid = anchorParams.length > 1 ? anchorParams[1] : \"\";\n\n                aHyperlink.onclick = () => {\n                  let currAnchorName = aHyperlink.anchorName;\n                  let cuurCompGuid = aHyperlink.componentGuid;\n\n                  try {\n                    currAnchorName = decodeURI(aHyperlink.anchorName);\n                  } catch (e) {\n                    currAnchorName = aHyperlink.anchorName;\n                  }\n\n                  if (pointers.length > 0) {\n                    let pageIndex = 1;\n\n                    for (let i = 0; i < pointers.length; i++) {\n                      if (cuurCompGuid) {\n                        if (pointers[i].componentGuid == cuurCompGuid) {\n                          pageIndex = pointers[i].pageIndex;\n                          break;\n                        }\n                      } else if (currAnchorName) {\n                        let pointerAnchor = pointers[i].anchor.indexOf(\"#\") == 0 ? pointers[i].anchor.substring(1) : pointers[i].anchor;\n\n                        if (pointerAnchor == currAnchorName) {\n                          pageIndex = pointers[i].pageIndex;\n                          break;\n                        }\n                      }\n                    }\n\n                    let anchorName = \"\";\n                    if (currAnchorName) anchorName += currAnchorName;\n                    if (cuurCompGuid) anchorName += \"#GUID#\" + cuurCompGuid;\n\n                    if (anchorName) {\n                      this.controller.action({\n                        name: 'BookmarkAction',\n                        bookmarkPage: Math.max(pageIndex - 1, 0),\n                        bookmarkAnchor: anchorName,\n                        componentGuid: aHyperlink.compunentGuid\n                      });\n                      return false;\n                    }\n                  }\n\n                  if (this.model.reportParams.bookmarksContent != null) {\n                    const node = this.model.nodes.find(n => n.name === currAnchorName);\n\n                    if (node) {\n                      this.model.navigateNode = node;\n                    } else {\n                      for (let k = 0; k < document.anchors.length; k++) {\n                        if (document.anchors[k].name == currAnchorName) {\n                          //jsObject.scrollToAnchor(currAnchorName);\n                          this.helper.scrollToAnchor(currAnchorName);\n                          return;\n                        }\n                      }\n                    }\n\n                    this.controller.post('BookmarkAction', null, 0);\n                    /*let aBookmarks = bookmarksPanel.getElementsByTagName(\"a\");\r\n                    for (let k = 0; k < aBookmarks.length; k++) {\r\n                      let clickFunc = aBookmarks[k].getAttribute(\"onclick\");\r\n                      if (clickFunc && clickFunc.indexOf(\"'\" + currAnchorName + \"'\") >= 0) {\r\n                        try {\r\n                          eval(clickFunc);\r\n                          return false;\r\n                        }\r\n                        catch (e) { }\r\n                      }\r\n                    }\r\n                                        this.controller.post('BookmarkAction', null, 0);*/\n\n                    return false;\n                  } //=================================\n\n                  /*let pageIndex = 1;\r\n                  for (let i = 0; i < pointers.length; i++) {\r\n                    if (aHyperlink.componentGuid) {\r\n                      if (pointers[i].componentGuid == aHyperlink.componentGuid) {\r\n                        pageIndex = pointers[i].pageIndex;\r\n                        break;\r\n                      }\r\n                    }\r\n                    else if (aHyperlink.bookmarkAnchor) {\r\n                      if (pointers[i].anchor == decodeURI(aHyperlink.bookmarkAnchor)) {\r\n                        pageIndex = pointers[i].pageIndex;\r\n                        break;\r\n                      }\r\n                    }\r\n                  }\r\n                  this.controller.action({ name: 'BookmarkAction', bookmarkPage: pageIndex - 1, bookmarkAnchor: decodeURI(aHyperlink.bookmarkAnchor), componentGuid: aHyperlink.compunentGuid });\r\n                  return false;\r\n                  };\r\n                  } else if (this.model.reportParams.bookmarksContent != null) {\r\n                  aHyperlink.anchorName = aHyperlink.hrefContent.replace('#', '');\r\n                                    aHyperlink.onclick = () => {\r\n                  const node = this.model.nodes.find(n => n.url.replace(/\\\\\\'/g, '\\'').substr(1) === aHyperlink.anchorName);\r\n                  if (node) {\r\n                    this.model.navigateNode = node;\r\n                  } else if (aHyperlink.hrefContent.indexOf('#') === 0) {\r\n                    for (let i = 0; i < document.anchors.length; i++) {\r\n                      const anchor = document.anchors[i];\r\n                      if (anchor.name === aHyperlink.anchorName) {\r\n                        this.helper.scrollToAnchor(aHyperlink.anchorName);\r\n                        return;\r\n                      }\r\n                    }\r\n                    this.controller.post('BookmarkAction', null, 0);\r\n                  }\r\n                  return false;\r\n                  };*/\n\n                };\n              }\n            }\n          }\n        });\n      }\n    }\n\n  }\n\n  InteractionsService.ɵfac = function InteractionsService_Factory(t) {\n    return new (t || InteractionsService)(i0.ɵɵinject(ModelService), i0.ɵɵinject(Md5Service), i0.ɵɵinject(ControllerService), i0.ɵɵinject(HelperService), i0.ɵɵinject(DrillDownService));\n  };\n\n  InteractionsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: InteractionsService,\n    factory: InteractionsService.ɵfac\n  });\n  return InteractionsService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet RadioButtonService = /*#__PURE__*/(() => {\n  class RadioButtonService {\n    constructor() {\n      this.groups = {};\n    }\n\n    addButton(button) {\n      if (!this.groups[button.groupName]) {\n        this.groups[button.groupName] = [];\n      }\n\n      this.groups[button.groupName].push(button);\n    }\n\n    removeButton(button) {\n      const buttons = this.groups[button.groupName];\n      buttons === null || buttons === void 0 ? void 0 : buttons.splice(buttons.indexOf(button), 1);\n    }\n\n    check(button) {\n      const buttons = this.groups[button.groupName];\n      buttons === null || buttons === void 0 ? void 0 : buttons.filter(b => b.name !== button.name).forEach(b => b.uncheck());\n    }\n\n  }\n\n  RadioButtonService.ɵfac = function RadioButtonService_Factory(t) {\n    return new (t || RadioButtonService)();\n  };\n\n  RadioButtonService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: RadioButtonService,\n    factory: RadioButtonService.ɵfac\n  });\n  return RadioButtonService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet EditableFieldsService = /*#__PURE__*/(() => {\n  class EditableFieldsService {\n    constructor(controller, model, helper) {\n      this.controller = controller;\n      this.model = model;\n      this.helper = helper;\n      this.visible = false;\n      this.editableFields = [];\n      controller.getActionMessage().subscribe(message => {\n        switch (message.action) {\n          case 'Editor':\n            this.visible = !this.visible;\n\n            if (this.visible) {\n              this.showAllEditableFields();\n            } else {\n              this.hideAllEditableFields();\n            }\n\n            break;\n        }\n      });\n      controller.getMessage().subscribe(message => {\n        if (message.action === 'GetPages' && this.visible) {\n          setTimeout(() => this.showAllEditableFields());\n        } else {\n          this.visible = false;\n        }\n      });\n    }\n\n    showAllEditableFields() {\n      this.editableFields = [];\n      this.model.pages.forEach((page, pageIndex) => {\n        const pageElements = page.page.getElementsByTagName('*');\n\n        for (const pageElement of pageElements) {\n          const editableStrAttr = pageElement.getAttribute('editable');\n\n          if (editableStrAttr) {\n            const attrArray = editableStrAttr.split(';');\n            const params = {};\n            params.compIndex = attrArray[0];\n            params.pageIndex = this.model.reportParams.viewMode === 'SinglePage' ? this.model.reportParams.pageNumber : pageIndex.toString();\n            params.type = attrArray[1];\n\n            if (params.type === 'CheckBox') {\n              this.showCheckBoxEditableField(pageElement, params, attrArray);\n            } else if (params.type === 'Text') {\n              this.showTextEditableField(pageElement, params);\n            } else if (params.type === 'RichText') {\n              this.showRichTextEditableField(pageElement, params);\n            }\n          }\n        }\n      });\n    }\n\n    hideAllEditableFields() {\n      if (this.currentEditableTextArea) {\n        this.currentEditableTextArea.onblur();\n      }\n\n      this.editableFields.forEach(eField => {\n        eField.className = eField.className.replace(' stiEditableField stiEditableFieldSelected', '');\n        eField.onclick = null;\n        eField.style.outline = '';\n      });\n    }\n\n    showCheckBoxEditableField(editableCell, params, attrArray) {\n      if (!editableCell.sizes) {\n        let imgElements = editableCell.getElementsByTagName('IMG');\n\n        if (imgElements.length === 0) {\n          imgElements = editableCell.getElementsByTagName('SVG');\n        }\n\n        if (imgElements.length === 0) {\n          imgElements = editableCell.getElementsByTagName('svg');\n        }\n\n        const imgElement = imgElements.length > 0 ? imgElements[0] : null;\n\n        if (!imgElement) {\n          return;\n        }\n\n        if (imgElement.offsetWidth) {\n          editableCell.sizes = {\n            inPixels: imgElement.offsetWidth > imgElement.offsetHeight ? imgElement.offsetHeight : imgElement.offsetWidth,\n            widthStyle: imgElement.style.width,\n            heightStyle: imgElement.style.height\n          };\n        } else {\n          editableCell.sizes = {\n            inPixels: imgElement.clientWidth > imgElement.clientHeight ? imgElement.clientHeight : imgElement.clientWidth,\n            widthStyle: imgElement.clientWidth + 'px',\n            heightStyle: imgElement.clientHeight + 'px'\n          };\n        }\n      }\n\n      if (this.helper.getNavigatorName() !== 'Google Chrome') {\n        editableCell.style.outline = '1px solid gray';\n      }\n\n      editableCell.style.textAlign = 'center';\n      editableCell.className += ' stiEditableField stiEditableFieldSelected';\n      const trueSvgImage = this.getSvgCheckBox(attrArray[3], attrArray[5], this.helper.strToInt(attrArray[6]), attrArray[7], editableCell.sizes.inPixels);\n      const falseSvgImage = this.getSvgCheckBox(attrArray[4], attrArray[5], this.helper.strToInt(attrArray[6]), attrArray[7], editableCell.sizes.inPixels);\n      params.falseImage = `<div style=\"width: ${editableCell.sizes.widthStyle}; height: ${editableCell.sizes.heightStyle}; \"> ${trueSvgImage}  </div>`;\n      params.trueImage = `<div style=\"width: ${editableCell.sizes.widthStyle}; height: ${editableCell.sizes.heightStyle}; \"> ${falseSvgImage} </div>`;\n      params.checked = attrArray[2] === 'true' || attrArray[2] === 'True';\n      editableCell.params = params;\n\n      if (!editableCell.hasChanged) {\n        editableCell.checked = params.checked;\n        editableCell.innerHTML = params.checked ? params.trueImage : params.falseImage;\n      }\n\n      editableCell.onclick = () => {\n        editableCell.checked = !editableCell.checked;\n        editableCell.innerHTML = editableCell.checked ? params.trueImage : params.falseImage;\n        editableCell.hasChanged = true;\n        this.addEditableParameters(editableCell);\n      };\n\n      this.editableFields.push(editableCell);\n    }\n\n    showTextEditableField(editableCell, params) {\n      editableCell.className += ' stiEditableField stiEditableFieldSelected';\n\n      if (this.helper.getNavigatorName() !== 'Google Chrome') {\n        editableCell.style.outline = '1px solid gray';\n      }\n\n      editableCell.params = params;\n      editableCell.jsObject = this;\n\n      editableCell.onclick = () => {\n        if (editableCell.editMode) {\n          return;\n        }\n\n        if (this.currentEditableTextArea) {\n          this.currentEditableTextArea.onblur();\n        }\n\n        editableCell.editMode = true;\n        const textArea = document.createElement('textarea');\n        textArea.style.width = editableCell.offsetWidth - 5 + 'px';\n        textArea.style.height = editableCell.offsetHeight - 5 + 'px';\n        textArea.style.maxWidth = editableCell.offsetWidth - 5 + 'px';\n        textArea.style.maxHeight = editableCell.offsetHeight - 5 + 'px';\n        textArea.className = editableCell.className.replace(' stiEditableField stiEditableFieldSelected', '') + ' stiEditableTextArea';\n        textArea.style.border = '0px';\n        let textContainer = editableCell;\n\n        var includedInnerDiv = function (el) {\n          return el.firstChild && el.firstChild.nodeName && el.firstChild.nodeName.toLowerCase() == \"div\";\n        };\n\n        while (includedInnerDiv(textContainer)) {\n          textContainer = textContainer.childNodes[0];\n        }\n\n        textArea.value = textContainer.innerHTML.replace(/<br>/g, '\\n');\n        editableCell.appendChild(textArea);\n        textArea.focus();\n        this.currentEditableTextArea = textArea;\n\n        textArea.onblur = () => {\n          editableCell.editMode = false;\n          const newText = textArea.value;\n          textContainer.innerHTML = newText.replace(/\\n/g, '<br>');\n\n          if (this && textArea.parentNode) {\n            textArea.parentNode.removeChild(textArea);\n          }\n\n          this.currentEditableTextArea = null;\n          this.addEditableParameters(editableCell, newText);\n        };\n\n        let this_ = this;\n        let textArea_ = textArea;\n\n        textArea_.getPrevTextField = index => {\n          if (index > 0) {\n            for (var i = index - 1; i >= 0; i--) {\n              var field = this_.editableFields[i];\n\n              if (field.params.type == \"Text\") {\n                return field;\n              }\n            }\n          }\n\n          return null;\n        };\n\n        textArea_.getNextTextField = index => {\n          if (index < this_.editableFields.length - 1) {\n            for (var i = index + 1; i < this_.editableFields.length; i++) {\n              var field = this_.editableFields[i];\n\n              if (field.params.type == \"Text\") {\n                return field;\n              }\n            }\n          }\n\n          return null;\n        };\n\n        textArea_.onkeydown = function (e) {\n          if (e && e.keyCode == 9) {\n            if (this_.editableFields) {\n              var index = this_.editableFields.indexOf(editableCell);\n              var field =\n              /*this_.SHIFT_pressed ? textArea_.getPrevTextField(index) : */\n              textArea_.getNextTextField(index);\n\n              if (field) {\n                e.preventDefault();\n                field.onclick();\n              }\n            }\n          }\n        };\n      };\n\n      this.editableFields.push(editableCell);\n    }\n\n    showRichTextEditableField(editableCell, params) {}\n\n    addEditableParameters(editableCell, newText) {\n      if (!this.model.reportParams.editableParameters) {\n        this.model.reportParams.editableParameters = {};\n      }\n\n      const params = {};\n      params.type = editableCell.params.type;\n\n      if (params.type === 'CheckBox') {\n        params.checked = editableCell.checked;\n      }\n\n      if (params.type === 'Text') {\n        params.text = newText != null ? newText : editableCell.innerHTML;\n      }\n\n      if (!this.model.reportParams.editableParameters[editableCell.params.pageIndex]) {\n        this.model.reportParams.editableParameters[editableCell.params.pageIndex] = {};\n      }\n\n      this.model.reportParams.editableParameters[editableCell.params.pageIndex][editableCell.params.compIndex] = params;\n    }\n\n    getSvgCheckBox(style, contourColor, size, backColor, width) {\n      const head = `<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0\" y=\"0\" width=\"${width}px\" height=\"${width}px\">`;\n      const path = `<path stroke=\"${contourColor}\" stroke-width=\"${size}\" fill=\"${backColor}\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"scale(${1 / (200 / width)})\" d=\"`;\n      let shape = '';\n\n      switch (style) {\n        case 'Cross':\n          shape = 'm 62.567796,147.97593 c -0.55,-0.14223 -2.162828,-0.5128 -3.584062,-0.82348 -3.647667,-0.79738 -9.670499,-5.83775 -14.242817,-11.91949 l ' + '-3.902341,-5.19058 5.080199,-1.13481 c 7.353071,-1.64253 13.640456,-5.71752 21.826811,-14.14646 l 7.208128,-7.42171 ' + '-6.410736,-7.513354 c -11.773129,-13.79803 -14.346726,-23.01954 -8.627769,-30.91434 2.894109,-3.9952 11.818482,-12.369333 ' + '13.182086,-12.369333 0.411356,0 1.063049,1.6875 1.448207,3.750003 0.980474,5.25038 6.456187,16.76587 10.936694,23 2.075266,2.8875 ' + '3.991125,5.25 4.257464,5.25 0.266339,0 3.775242,-3.4875 7.797566,-7.75 16.397034,-17.37615 29.674184,-19.76481 38.280564,-6.88699 ' + '4.15523,6.21753 4.18631,8.07093 0.14012,8.3552 -5.84833,0.41088 -17.16241,8.5342 -25.51465,18.319104 l -4.63153,5.42599 ' + '4.87803,4.31529 c 6.55108,5.79533 18.8991,11.89272 25.84076,12.76002 3.0455,0.38051 5.53727,1.10582 5.53727,1.6118 0,2.7809 ' + '-9.26611,14.41872 -13.03,16.36511 -7.96116,4.11687 -16.36991,0.71207 -32.764584,-13.26677 l -4.985957,-4.25125 -7.086791,8.97188 c ' + '-3.897736,4.93454 -8.82141,10.1198 -10.9415,11.52281 -3.906121,2.58495 -8.86588,4.41339 -10.691162,3.94136 z';\n          break;\n\n        case 'Check':\n          shape = 'M 60.972125,162.49704 C 51.172676,136.72254 43.561975,123.37669 35.370344,117.6027 l -4.45827,-3.14248 2.75159,-2.89559 c 3.875121,-4.07793 ' + '10.034743,-7.49924 14.902472,-8.27747 3.859874,-0.61709 4.458306,-0.38024 8.535897,3.37835 2.660692,2.45254 6.265525,7.60856 9.167226,13.11196 ' + '2.630218,4.98849 4.910542,9.06999 5.067388,9.06999 0.156846,0 2.31372,-3.0375 4.793052,-6.75 C 96.259164,91.956015 129.68299,58.786374 157.56485,41.281603 l ' + '8.84913,-5.555656 2.2633,2.631238 2.26329,2.631237 -7.76266,6.294183 C 139.859,66.19023 108.01682,105.51363 89.042715,138.83563 c -6.680477,11.73214 ' + '-7.172359,12.31296 -15.090788,17.81963 -4.501873,3.13071 -9.044031,6.30443 -10.093684,7.05271 -1.708923,1.21826 -2.010678,1.09165 -2.886118,-1.21093 z';\n          break;\n\n        case 'CrossRectangle':\n          shape = 'm 24.152542,102.04237 0,-72.499996 74.5,0 74.499998,0 0,72.499996 0,72.5 -74.499998,0 -74.5,0 0,-72.5 z m 133.758188,0.25 -0.25819,-57.249996 ' + '-58.999998,0 -59,0 -0.259695,55.999996 c -0.142833,30.8 -0.04446,56.5625 0.218615,57.25 0.375181,0.98048 13.207991,1.25 59.517885,1.25 l ' + '59.039573,0 -0.25819,-57.25 z m -90.574091,43.18692 c -1.823747,-0.3912 -4.926397,-1.85716 -6.894778,-3.25768 -3.319254,-2.36169 -12.289319,-12.40741 ' + '-12.289319,-13.76302 0,-0.32888 2.417494,-1.13897 5.372209,-1.80021 7.185193,-1.60797 13.747505,-5.93496 21.803114,-14.3763 l 6.675323,-6.99496 ' + '-6.379078,-7.31436 C 64.931387,85.71231 61.643682,76.29465 65.471903,68.89169 67.054097,65.83207 78.56175,54.542374 80.098251,54.542374 c 0.45744,0 ' + '1.146839,1.6875 1.531997,3.75 0.980474,5.250386 6.456187,16.765876 10.936694,22.999996 2.075266,2.8875 3.991125,5.25 4.257464,5.25 0.266339,0 ' + '3.775244,-3.4875 7.797564,-7.75 16.39704,-17.376139 29.67419,-19.764806 38.28057,-6.88698 4.15523,6.21752 4.18631,8.07092 0.14012,8.35519 -5.82996,0.40959 ' + '-18.23707,9.34942 -25.91566,18.67328 -3.90068,4.73647 -3.97203,4.95414 -2.2514,6.86861 3.19054,3.54997 13.7039,10.54321 18.97191,12.61967 2.83427,1.11716 ' + '7.43737,2.33421 10.22912,2.70455 2.79175,0.37034 5.07591,0.9956 5.07591,1.38947 0,2.11419 -8.37504,13.20895 -11.6517,15.4355 -8.39423,5.70403 ' + '-16.63203,2.77 -34.14289,-12.16054 l -4.985955,-4.25125 -7.086791,8.97188 c -9.722344,12.3085 -16.524852,16.55998 -23.948565,14.96754 z';\n          break;\n\n        case 'CheckRectangle':\n          shape = 'm 19.915254,103.5 0,-72.5 71.942245,0 71.942241,0 6.55727,-4.11139 6.55726,-4.11139 1.96722,2.36139 c 1.08197,1.298765 1.98219,2.644166 2.00049,2.98978 ' + '0.0183,0.345615 -2.44173,2.53784 -5.46673,4.87161 l -5.5,4.243219 0,69.378391 0,69.37839 -74.999991,0 -75.000005,0 0,-72.5 z m 133.999996,3.87756 c ' + '0,-49.33933 -0.12953,-53.514947 -1.62169,-52.276568 -2.78014,2.307312 -15.68408,17.90053 -24.32871,29.399008 -10.4919,13.955575 -23.47926,33.53736 ' + '-29.514025,44.5 -4.457326,8.09707 -5.134776,8.80812 -14.291256,15 -5.28667,3.575 -9.903486,6.62471 -10.259592,6.77712 -0.356107,0.15242 -1.912439,-2.99758 ' + '-3.458515,-7 -1.546077,-4.00241 -5.258394,-12.41205 -8.249593,-18.68809 -4.285436,-8.99155 -6.676569,-12.64898 -11.27758,-17.25 C 47.70282,104.62757 ' + '44.364254,102 43.495254,102 c -2.798369,0 -1.704872,-1.66044 3.983717,-6.049158 5.593548,-4.31539 13.183139,-7.091307 16.801313,-6.145133 3.559412,0.930807 ' + '9.408491,8.154973 13.919775,17.192241 l 4.46286,8.94025 4.54378,-6.83321 C 95.518219,96.605618 108.21371,81.688517 125.80695,63.75 L 143.21531,46 l ' + '-53.650021,0 -53.650035,0 0,57.5 0,57.5 59.000005,0 58.999991,0 0,-53.62244 z';\n          break;\n\n        case 'CrossCircle':\n          shape = 'M 83.347458,173.13597 C 61.069754,168.04956 42.193415,152.8724 32.202285,132.01368 23.4014,113.63986 23.679644,89.965903 32.91889,71.042373 ' + '41.881579,52.685283 60.867647,37.139882 80.847458,31.799452 c 10.235111,-2.735756 31.264662,-2.427393 40.964762,0.600679 26.18668,8.174684 ' + '46.06876,28.926852 51.62012,53.879155 2.43666,10.952327 1.56754,28.058524 -1.98036,38.977594 -6.65679,20.48707 -25.64801,38.95163 -47.32647,46.01402 ' + '-6.3909,2.08202 -10.18566,2.59644 -21.27805,2.88446 -9.033911,0.23456 -15.484931,-0.10267 -19.500002,-1.01939 z M 112.4138,158.45825 c 17.13137,-3.13002 ' + '33.71724,-15.96081 41.41353,-32.03742 14.8975,-31.119027 -1.10807,-67.659584 -34.40232,-78.540141 -6.71328,-2.193899 -9.93541,-2.643501 ' + '-19.07755,-2.661999 -9.354252,-0.01893 -12.16228,0.37753 -18.768532,2.649866 -17.155451,5.900919 -29.669426,17.531424 -36.438658,33.866137 ' + '-2.152301,5.193678 -2.694658,8.35455 -3.070923,17.89744 -0.518057,13.139047 0.741843,19.201887 6.111644,29.410237 4.106815,7.80733 15.431893,19.09359 ' + '23.36818,23.28808 12.061362,6.37467 27.138828,8.6356 40.864629,6.1278 z M 69.097458,133.41654 c -2.8875,-2.75881 -5.25,-5.35869 -5.25,-5.77751 ' + '0,-0.41882 5.658529,-6.30954 12.57451,-13.0905 l 12.57451,-12.329 L 76.198053,89.392633 63.399628,76.565738 68.335951,71.554056 c 2.714978,-2.756426 ' + '5.304859,-5.011683 5.75529,-5.011683 0.450432,0 6.574351,5.611554 13.608709,12.470121 l 12.78974,12.470119 4.42889,-4.553471 c 2.43588,-2.50441 ' + '8.39186,-8.187924 13.23551,-12.630032 l 8.80663,-8.076559 5.34744,5.281006 5.34743,5.281007 -12.96155,12.557899 -12.96154,12.557897 13.13318,13.16027 ' + '13.13319,13.16027 -5.18386,4.66074 c -2.85112,2.5634 -5.70472,4.66073 -6.34134,4.66073 -0.63661,0 -6.5434,-5.4 -13.12621,-12 -6.58281,-6.6 -12.3871,-12 ' + '-12.89844,-12 -0.511329,0 -6.593363,5.60029 -13.515627,12.44509 l -12.585935,12.44508 -5.25,-5.016 z';\n          break;\n\n        case 'DotCircle':\n          shape = 'M 81.652542,170.5936 C 59.374838,165.50719 40.498499,150.33003 30.507369,129.47131 21.706484,111.09749 21.984728,87.42353 31.223974,68.5 ' + '40.186663,50.14291 59.172731,34.597509 79.152542,29.257079 89.387653,26.521323 110.4172,26.829686 120.1173,29.857758 c 26.18668,8.174684 ' + '46.06876,28.926852 51.62012,53.879152 2.43666,10.95233 1.56754,28.05853 -1.98036,38.9776 -6.65679,20.48707 -25.64801,38.95163 -47.32647,46.01402 ' + '-6.3909,2.08202 -10.18566,2.59644 -21.27805,2.88446 -9.033907,0.23456 -15.484927,-0.10267 -19.499998,-1.01939 z m 29.999998,-15.098 c 20.68862,-4.34363 ' + '38.01874,-20.45437 44.09844,-40.9956 2.36228,-7.9813 2.36228,-22.0187 0,-30 C 150.08927,65.371023 134.63549,50.297336 114.65254,44.412396 ' + '106.5531,42.027127 90.741304,42.026386 82.695253,44.4109 62.460276,50.407701 46.686742,66.039241 41.6053,85.13096 c -1.948821,7.32201 -1.86506,23.11641 ' + '0.158766,29.93754 8.730326,29.42481 38.97193,46.91812 69.888474,40.4271 z M 90.004747,122.6703 C 76.550209,117.63801 69.825047,101.82445 ' + '75.898143,89.5 c 2.136718,-4.33615 7.147144,-9.356192 11.754399,-11.776953 5.578622,-2.931141 16.413098,-2.927504 22.052908,0.0074 18.03,9.382663 ' + '19.07573,32.784373 1.91442,42.841563 -5.57282,3.26589 -15.830952,4.2617 -21.615123,2.09829 z';\n          break;\n\n        case 'DotRectangle':\n          shape = 'm 23.847458,101.19491 0,-72.499995 74.5,0 74.499992,0 0,72.499995 0,72.5 -74.499992,0 -74.5,0 0,-72.5 z m 133.999992,-0.008 0,-57.507925 ' + '-59.249992,0.25793 -59.25,0.25793 -0.25819,57.249995 -0.258189,57.25 59.508189,0 59.508182,0 0,-57.50793 z m -94.320573,33.85402 c -0.37368,-0.37368 ' + '-0.679419,-15.67942 -0.679419,-34.01275 l 0,-33.333335 35.513302,0 35.51329,0 -0.2633,33.749995 -0.2633,33.75 -34.570573,0.26275 c -19.013819,0.14452 ' + '-34.876319,-0.043 -35.25,-0.41666 z';\n          break;\n\n        case 'NoneCircle':\n          shape = 'M 83.5,170.5936 C 61.222296,165.50719 42.345957,150.33003 32.354827,129.47131 23.553942,111.09749 23.832186,87.423523 33.071432,68.5 ' + '42.034121,50.14291 61.020189,34.597509 81,29.257079 c 10.235111,-2.735756 31.26466,-2.427393 40.96476,0.600679 26.18668,8.174684 46.06876,28.926852 ' + '51.62012,53.879155 2.43666,10.95232 1.56754,28.058527 -1.98036,38.977597 -6.65679,20.48707 -25.64801,38.95163 -47.32647,46.01402 -6.3909,2.08202 ' + '-10.18566,2.59644 -21.27805,2.88446 -9.033909,0.23456 -15.484929,-0.10267 -19.5,-1.01939 z m 30,-15.098 c 20.68862,-4.34363 38.01874,-20.45437 ' + '44.09844,-40.9956 2.36228,-7.9813 2.36228,-22.018707 0,-29.999997 C 151.93673,65.371023 136.48295,50.297336 116.5,44.412396 108.40056,42.027127 ' + '92.588762,42.026386 84.542711,44.410896 64.307734,50.407697 48.5342,66.039237 43.452758,85.130959 c -1.948821,7.322 -1.86506,23.116411 ' + '0.158766,29.937541 8.730326,29.42481 38.97193,46.91812 69.888476,40.4271 z';\n          break;\n\n        case 'NoneRectangle':\n          shape = 'm 24.152542,102.04237 0,-72.499997 74.5,0 74.500008,0 0,72.499997 0,72.5 -74.500008,0 -74.5,0 0,-72.5 z m 133.758198,0.25 ' + '-0.25819,-57.249997 -59.000008,0 -59,0 -0.259695,55.999997 c -0.142833,30.8 -0.04446,56.5625 0.218615,57.25 0.375181,0.98048 ' + '13.207991,1.25 59.517885,1.25 l 59.039583,0 -0.25819,-57.25 z';\n          break;\n      }\n\n      return head + path + shape + '\" /></svg>';\n    }\n\n  }\n\n  EditableFieldsService.ɵfac = function EditableFieldsService_Factory(t) {\n    return new (t || EditableFieldsService)(i0.ɵɵinject(ControllerService), i0.ɵɵinject(ModelService), i0.ɵɵinject(HelperService));\n  };\n\n  EditableFieldsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: EditableFieldsService,\n    factory: EditableFieldsService.ɵfac\n  });\n  return EditableFieldsService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ToolbarService = /*#__PURE__*/(() => {\n  class ToolbarService {\n    constructor(model, controller, editableFieldsService, interactionService, helper) {\n      this.model = model;\n      this.controller = controller;\n      this.editableFieldsService = editableFieldsService;\n      this.interactionService = interactionService;\n      this.helper = helper;\n      this.comps = [];\n      this.dopComps = [];\n      this.controller.getMessage().subscribe(message => {\n        if (message.action !== 'viewer_loaded') {\n          this.updateButtons();\n        }\n      });\n    }\n\n    updateButtons() {\n      this.comps.filter(i => i.action === 'ViewMode').forEach(m => m.caption = this.model.loc(this.model.reportParams.viewMode));\n      this.comps.filter(i => i.action === 'Zoom').forEach(m => {\n        m.menuItems.forEach(n => n.selected = n.name === 'Zoom' + this.model.reportParams.zoom);\n        m.caption = this.model.reportParams.zoom ? Math.round(this.model.reportParams.zoom) + '%' : '';\n      });\n      this.comps.filter(i => i.action === 'ShowFind').forEach(m => {\n        m.selected = this.model.controls.findPanel.visible;\n      });\n    }\n\n    initButtons() {\n      const comps = [];\n      const dopComps = [];\n      let isFirst = false;\n\n      if (this.model.options.toolbar.showAboutButton) {\n        dopComps.push({\n          type: 'button',\n          action: 'About',\n          img: 'Help.png'\n        });\n      }\n\n      if (this.model.options.toolbar.showAboutButton && this.model.options.toolbar.showDesignButton) {\n        dopComps.push({\n          type: 'separator'\n        });\n      }\n\n      if (this.model.options.toolbar.showDesignButton) {\n        dopComps.push({\n          type: 'button',\n          action: 'Design',\n          caption: this.model.loc('Design'),\n          img: 'Design.png'\n        });\n      }\n\n      if (this.model.options.toolbar.showPinToolbarButton && this.model.options.toolbar.showDesignButton) {\n        dopComps.push({\n          type: 'separator'\n        });\n      }\n\n      if (this.model.options.toolbar.showPinToolbarButton) {\n        dopComps.push({\n          type: 'button',\n          action: 'Pin',\n          img: 'Pin.png'\n        });\n      }\n\n      if (this.model.options.toolbar.showPrintButton) {\n        comps.push({\n          type: 'button',\n          action: 'Print',\n          caption: this.model.loc('Print'),\n          img: 'Print.png',\n          tooltip: true,\n          arrow: this.model.options.toolbar.printDestination === 'Default' ? 'Down' : null,\n          menuItems: this.model.options.toolbar.printDestination === 'Default' ? [{\n            name: 'PrintPdf',\n            caption: this.model.loc('PrintPdf'),\n            img: 'Save.Small.Pdf.png'\n          }, {\n            name: 'PrintWithPreview',\n            caption: this.model.loc('PrintWithPreview'),\n            img: 'ViewMode.png'\n          }, {\n            name: 'PrintWithoutPreview',\n            caption: this.model.loc('PrintWithoutPreview'),\n            img: 'Print.png'\n          }] : null\n        });\n        isFirst = false;\n      }\n\n      if (this.model.options.toolbar.showOpenButton) {\n        comps.push({\n          type: 'button',\n          action: 'Open',\n          caption: this.model.loc('Open'),\n          img: 'Open.png',\n          tooltip: true\n        });\n        isFirst = false;\n      }\n\n      if (this.model.options.toolbar.showSaveButton) {\n        comps.push({\n          type: 'button',\n          action: 'Save',\n          caption: this.model.loc('Save'),\n          img: 'Save.png',\n          tooltip: true,\n          arrow: 'Down',\n          menuItems: this.getSaveMenuItems('saveMenu')\n        });\n        isFirst = false;\n      }\n\n      if (this.model.options.toolbar.showSendEmailButton) {\n        comps.push({\n          type: 'button',\n          action: 'SendEmail',\n          caption: this.model.loc('SendEmail'),\n          img: 'SendEmail.png',\n          tooltip: true,\n          arrow: 'Down',\n          menuItems: this.getSaveMenuItems('sendEmailMenu')\n        });\n        isFirst = false;\n      }\n\n      if (this.model.options.toolbar.showBookmarksButton || this.model.options.toolbar.showParametersButton) {\n        if (!isFirst) {\n          comps.push({\n            type: 'separator'\n          });\n        }\n\n        isFirst = false;\n      }\n\n      if (this.model.options.toolbar.showBookmarksButton) {\n        comps.push({\n          type: 'button',\n          action: 'Bookmarks',\n          caption: this.model.options.toolbar.displayMode === 'Separated' ? this.model.loc('Bookmarks') : null,\n          img: 'Bookmarks.png',\n          tooltip: true\n        });\n        isFirst = false;\n      }\n\n      if (this.model.options.toolbar.showParametersButton) {\n        comps.push({\n          type: 'button',\n          action: 'Parameters',\n          caption: this.model.options.toolbar.displayMode === 'Separated' ? this.model.loc('Parameters') : null,\n          img: 'Parameters.png',\n          tooltip: true\n        });\n        isFirst = false;\n      }\n\n      if (this.model.options.toolbar.showResourcesButton) {\n        comps.push({\n          type: 'button',\n          action: 'Resources',\n          caption: this.model.options.toolbar.displayMode === 'Separated' ? this.model.loc('Resources') : null,\n          img: 'Resources.png',\n          tooltip: true\n        });\n        isFirst = false;\n      }\n\n      if (this.model.options.toolbar.showFindButton || this.model.options.toolbar.showEditorButton) {\n        if (!isFirst) {\n          comps.push({\n            type: 'separator'\n          });\n        }\n\n        isFirst = false;\n      }\n\n      if (this.model.options.toolbar.showFindButton) {\n        comps.push({\n          type: 'button',\n          action: 'Find',\n          img: 'Find.png',\n          tooltip: true\n        });\n        isFirst = false;\n      }\n\n      if (this.model.options.toolbar.showEditorButton) {\n        comps.push({\n          type: 'button',\n          action: 'Editor',\n          img: 'Editor.png',\n          tooltip: true\n        });\n        isFirst = false;\n      }\n\n      if (this.model.options.toolbar.displayMode !== 'Separated') {\n        if (this.model.options.toolbar.showFirstPageButton || this.model.options.toolbar.showPreviousPageButton || this.model.options.toolbar.showNextPageButton || this.model.options.toolbar.showLastPageButton || this.model.options.toolbar.showCurrentPageControl) {\n          if (!isFirst) {\n            comps.push({\n              type: 'separator'\n            });\n          }\n\n          isFirst = false;\n        }\n\n        if (this.model.options.toolbar.showFirstPageButton) {\n          comps.push({\n            type: 'button',\n            action: 'FirstPage',\n            img: this.model.options.appearance.rightToLeft ? 'LastPage.png' : 'FirstPage.png',\n            tooltip: true\n          });\n          isFirst = false;\n        }\n\n        if (this.model.options.toolbar.showPreviousPageButton) {\n          comps.push({\n            type: 'button',\n            action: 'PrevPage',\n            img: this.model.options.appearance.rightToLeft ? 'NextPage.png' : 'PrevPage.png',\n            tooltip: true\n          });\n          isFirst = false;\n        }\n\n        if (this.model.options.toolbar.showCurrentPageControl) {\n          comps.push({\n            type: 'pageControl'\n          });\n          isFirst = false;\n        }\n\n        if (this.model.options.toolbar.showNextPageButton) {\n          comps.push({\n            type: 'button',\n            action: 'NextPage',\n            img: this.model.options.appearance.rightToLeft ? 'PrevPage.png' : 'NextPage.png',\n            tooltip: true\n          });\n          isFirst = false;\n        }\n\n        if (this.model.options.toolbar.showLastPageButton) {\n          comps.push({\n            type: 'button',\n            action: 'LastPage',\n            img: this.model.options.appearance.rightToLeft ? 'FirstPage.png' : 'LastPage.png',\n            tooltip: true\n          });\n          isFirst = false;\n        }\n\n        if (this.model.options.toolbar.showViewModeButton || this.model.options.toolbar.showZoomButton) {\n          if (!isFirst) {\n            comps.push({\n              type: 'separator'\n            });\n          }\n\n          isFirst = false;\n        }\n      }\n\n      if (this.model.options.toolbar.showFullScreenButton) {\n        comps.push({\n          type: 'button',\n          action: 'FullScreen',\n          img: 'FullScreen.png',\n          tooltip: true\n        });\n        comps.push({\n          type: 'separator'\n        });\n        isFirst = false;\n      }\n\n      if (this.model.options.toolbar.showZoomButton && this.model.options.toolbar.displayMode !== 'Separated') {\n        comps.push({\n          type: 'button',\n          action: 'Zoom',\n          caption: '100%',\n          img: 'Zoom.png',\n          tooltip: true,\n          arrow: 'Down',\n          menuItems: this.helper.getZoomMenuItems()\n        });\n        isFirst = false;\n      }\n\n      if (this.model.options.toolbar.showViewModeButton) {\n        comps.push({\n          type: 'button',\n          action: 'ViewMode',\n          caption: this.model.loc('SinglePage'),\n          img: 'SinglePage.png',\n          tooltip: true,\n          arrow: 'Down',\n          menuItems: [{\n            name: 'ViewModeSinglePage',\n            caption: this.model.loc('SinglePage'),\n            img: 'SinglePage.png'\n          }, {\n            name: 'ViewModeContinuous',\n            caption: this.model.loc('Continuous'),\n            img: 'Continuous.png'\n          }, {\n            name: 'ViewModeMultiplePages',\n            caption: this.model.loc('MultiplePages'),\n            img: 'MultiplePages.png'\n          }]\n        });\n        isFirst = false;\n      }\n\n      if (typeof this.model.options.toolbar.multiPageWidthCount !== 'undefined') {\n        this.model.reportParams.multiPageWidthCount = this.model.options.toolbar.multiPageWidthCount;\n      }\n\n      if (typeof this.model.options.toolbar.multiPageHeightCount !== 'undefined') {\n        this.model.reportParams.multiPageHeightCount = this.model.options.toolbar.multiPageHeightCount;\n      }\n\n      if (!this.model.options.appearance.rightToLeft && this.model.options.toolbar.alignment === 'right' && (this.model.options.toolbar.showPinToolbarButton || this.model.options.toolbar.showAboutButton || this.model.options.toolbar.showDesignButton)) {\n        comps.push({\n          type: 'separator6'\n        });\n      }\n\n      this.comps = this.model.options.appearance.rightToLeft ? comps.reverse() : comps;\n      this.dopComps = this.model.options.appearance.rightToLeft ? dopComps.reverse() : dopComps;\n    }\n\n    disableNaviButtons() {\n      return this.model.reportParams.viewMode === 'MultiplePages' || this.model.reportParams.viewMode === 'WholeReport' || this.model.reportParams.viewMode === 'Continuous' && !this.model.options.appearance.scrollbarsMode && !this.model.options.appearance.fullScreenMode;\n    }\n\n    getImage(imageName) {\n      switch (this.model.options.appearance.saveMenuImageSize) {\n        case 'Big':\n          return `Save.Big.${imageName}.png`;\n\n        case 'None':\n          return null;\n\n        default:\n          return `Save.Small.${imageName}.png`;\n      }\n    }\n\n    getSaveMenuItems(menuName) {\n      let isFirst = true;\n      const items = [];\n      const imageSize = this.model.options.appearance.saveMenuImageSize;\n\n      if (this.model.options.exports.showExportToDocument && menuName === 'saveMenu') {\n        items.push({\n          name: menuName + 'Document',\n          caption: this.model.loc('ReportSnapshot'),\n          imageSize,\n          img: this.getImage('Document')\n        });\n        isFirst = false;\n      }\n\n      if (menuName === 'saveMenu' && this.model.options.exports.showExportToPdf || this.model.options.exports.showExportToXps || this.model.options.exports.showExportToPowerPoint) {\n        if (!isFirst) {\n          items.push({\n            imageSize,\n            type: 'separator'\n          });\n        }\n\n        isFirst = false;\n      }\n\n      if (this.model.options.exports.showExportToPdf) {\n        items.push({\n          name: menuName + 'Pdf',\n          caption: 'Adobe PDF',\n          imageSize,\n          img: this.getImage('Pdf')\n        });\n      }\n\n      if (this.model.options.exports.showExportToXps) {\n        items.push({\n          name: menuName + 'Xps',\n          caption: 'Microsoft XPS',\n          imageSize,\n          img: this.getImage('Xps')\n        });\n      }\n\n      if (this.model.options.exports.showExportToPowerPoint) {\n        items.push({\n          name: menuName + 'Ppt2007',\n          caption: 'Microsoft PowerPoint',\n          imageSize,\n          img: this.getImage('Ppt')\n        });\n      }\n\n      if (this.model.options.exports.showExportToHtml || this.model.options.exports.showExportToHtml5 || this.model.options.exports.showExportToMht) {\n        if (!isFirst) {\n          items.push({\n            imageSize,\n            type: 'separator'\n          });\n        }\n\n        isFirst = false;\n        let htmlType = this.model.options.exports.defaultSettings['StiHtmlExportSettings'].HtmlType;\n\n        if (!this.model.options.exports['showExportTo' + htmlType]) {\n          if (this.model.options.exports.showExportToHtml) {\n            htmlType = 'Html';\n          } else if (this.model.options.exports.showExportToHtml5) {\n            htmlType = 'Html5';\n          } else if (this.model.options.exports.showExportToMht) {\n            htmlType = 'Mht';\n          }\n        }\n\n        items.push({\n          name: menuName + htmlType,\n          caption: 'HTML',\n          imageSize,\n          img: this.getImage('Html')\n        });\n      }\n\n      if (this.model.options.exports.showExportToText || this.model.options.exports.showExportToRtf || this.model.options.exports.showExportToWord2007 || this.model.options.exports.showExportToOdt) {\n        if (!isFirst) {\n          items.push({\n            imageSize,\n            type: 'separator'\n          });\n        }\n\n        isFirst = false;\n      }\n\n      if (this.model.options.exports.showExportToText) {\n        items.push({\n          name: menuName + 'Text',\n          caption: this.model.loc('Text'),\n          imageSize,\n          img: this.getImage('Text')\n        });\n      }\n\n      if (this.model.options.exports.showExportToRtf) {\n        items.push({\n          name: menuName + 'Rtf',\n          caption: 'RTF',\n          imageSize,\n          img: this.getImage('Rtf')\n        });\n      }\n\n      if (this.model.options.exports.showExportToWord2007) {\n        items.push({\n          name: menuName + 'Word2007',\n          caption: 'Microsoft Word',\n          imageSize,\n          img: this.getImage('Word')\n        });\n      }\n\n      if (this.model.options.exports.showExportToOpenDocumentWriter) {\n        items.push({\n          name: menuName + 'Odt',\n          caption: 'OpenDocument Writer',\n          imageSize,\n          img: this.getImage('Odt')\n        });\n      }\n\n      if (this.model.options.exports.showExportToExcel || this.model.options.exports.showExportToExcel2007 || this.model.options.exports.showExportToExcelXml || this.model.options.exports.showExportToOpenDocumentWriter) {\n        if (!isFirst) {\n          items.push({\n            imageSize,\n            type: 'separator'\n          });\n        }\n\n        isFirst = false;\n      }\n\n      if (this.model.options.exports.showExportToExcel || this.model.options.exports.showExportToExcelXml || this.model.options.exports.showExportToExcel2007) {\n        let excelType = this.model.options.exports.defaultSettings['StiExcelExportSettings'].ExcelType;\n\n        if (excelType === 'ExcelBinary') {\n          excelType = 'Excel';\n        }\n\n        if (!this.model.options.exports['showExportTo' + excelType]) {\n          if (this.model.options.exports.showExportToExcel) {\n            excelType = 'Excel';\n          } else if (this.model.options.exports.showExportToExcel2007) {\n            excelType = 'Excel2007';\n          } else if (this.model.options.exports.showExportToExcelXml) {\n            excelType = 'ExcelXml';\n          }\n        }\n\n        items.push({\n          name: menuName + excelType,\n          caption: 'Microsoft Excel',\n          imageSize,\n          img: this.getImage('Excel')\n        });\n      }\n\n      if (this.model.options.exports.showExportToOpenDocumentCalc) {\n        items.push({\n          name: menuName + 'Ods',\n          caption: 'OpenDocument Calc',\n          imageSize,\n          img: this.getImage('Ods')\n        });\n      }\n\n      if (this.model.options.exports.showExportToCsv || this.model.options.exports.showExportToDbf || this.model.options.exports.showExportToXml || this.model.options.exports.showExportToDif || this.model.options.exports.showExportToSylk || this.model.options.exports.showExportToJson) {\n        if (!isFirst) {\n          items.push({\n            imageSize,\n            type: 'separator'\n          });\n        }\n\n        isFirst = false;\n        let dataType = this.model.options.exports.defaultSettings['StiDataExportSettings'].DataType;\n\n        if (!this.model.options.exports['showExportTo' + dataType]) {\n          if (this.model.options.exports.showExportToCsv) {\n            dataType = 'Csv';\n          } else if (this.model.options.exports.showExportToDbf) {\n            dataType = 'Dbf';\n          } else if (this.model.options.exports.showExportToXml) {\n            dataType = 'Xml';\n          } else if (this.model.options.exports.showExportToDif) {\n            dataType = 'Dif';\n          } else if (this.model.options.exports.showExportToSylk) {\n            dataType = 'Sylk';\n          } else if (this.model.options.exports.showExportToJson) {\n            dataType = 'Json';\n          }\n        }\n\n        items.push({\n          name: menuName + dataType,\n          caption: this.model.loc('Data'),\n          imageSize,\n          img: this.getImage('Data')\n        });\n      }\n\n      if (this.model.options.exports.showExportToImageBmp || this.model.options.exports.showExportToImageGif || this.model.options.exports.showExportToImageJpeg || this.model.options.exports.showExportToImagePcx || this.model.options.exports.showExportToImagePng || this.model.options.exports.showExportToImageTiff || this.model.options.exports.showExportToImageMetafile || this.model.options.exports.showExportToImageSvg || this.model.options.exports.showExportToImageSvgz) {\n        if (!isFirst) {\n          items.push({\n            imageSize,\n            type: 'separator'\n          });\n        }\n\n        isFirst = false;\n        let imageType = this.model.options.exports.defaultSettings['StiImageExportSettings'].ImageType;\n        let imageType_ = imageType === 'Emf' ? 'Metafile' : imageType;\n\n        if (!this.model.options.exports['showExportToImage' + imageType_]) {\n          if (this.model.options.exports.showExportToImageBmp) {\n            imageType = 'Bmp';\n          } else if (this.model.options.exports.showExportToImageGif) {\n            imageType = 'Gif';\n          } else if (this.model.options.exports.showExportToImageJpeg) {\n            imageType = 'Jpeg';\n          } else if (this.model.options.exports.showExportToImagePcx) {\n            imageType = 'Pcx';\n          } else if (this.model.options.exports.showExportToImagePng) {\n            imageType = 'Png';\n          } else if (this.model.options.exports.showExportToImageTiff) {\n            imageType = 'Tiff';\n          } else if (this.model.options.exports.showExportToImageMetafile) {\n            imageType = 'Emf';\n          } else if (this.model.options.exports.showExportToImageSvg) {\n            imageType = 'Svg';\n          } else if (this.model.options.exports.showExportToImageSvgz) {\n            imageType = 'Svgz';\n          }\n        }\n\n        items.push({\n          name: menuName + 'Image' + imageType,\n          caption: this.model.loc('Image'),\n          imageSize,\n          img: this.getImage('Image')\n        });\n      }\n\n      return items;\n    }\n\n    enabled(desc) {\n      var _a, _b;\n\n      const disableNaviButtons = this.disableNaviButtons();\n\n      switch (desc.action) {\n        case 'FirstPage':\n        case 'PrevPage':\n          return this.model.reportParams.pageNumber > 0 && !disableNaviButtons;\n\n        case 'NextPage':\n        case 'LastPage':\n          return this.model.reportParams.pageNumber < this.model.reportParams.pagesCount - 1 && !disableNaviButtons;\n\n        case 'Bookmarks':\n          return this.model.reportParams.bookmarksContent != null;\n\n        case 'Parameters':\n          return ((_a = this.model.interactions) === null || _a === void 0 ? void 0 : _a.paramsVariables) != null;\n\n        case 'Resources':\n          return ((_b = this.model.reportParams.resources) === null || _b === void 0 ? void 0 : _b.length) > 0;\n      }\n\n      return true;\n    }\n\n    selected(desc) {\n      switch (desc.action) {\n        case 'Find':\n          return this.model.controls.findPanel.visible;\n\n        case 'Bookmarks':\n          return this.model.controls.bookmarksPanel.visible;\n\n        case 'Parameters':\n          return this.model.controls.parametersPanel.visible;\n\n        case 'Editor':\n          return this.editableFieldsService.visible;\n\n        case 'Resources':\n          return this.model.controls.resourcesPanel.visible;\n\n        case 'FullScreen':\n          return this.model.options.appearance.fullScreenMode;\n\n        case 'Pin':\n          return !this.model.options.toolbar.autoHide;\n      }\n\n      return false;\n    }\n\n    display(desc) {\n      switch (desc.action) {\n        case 'Editor':\n          return this.model.reportParams.isEditableReport ? '' : 'none';\n      }\n\n      return '';\n    }\n\n    getButonWidth(comp) {\n      if (this.model.options.toolbar.displayMode === 'Separated') {\n        if (comp.action === 'Find' || comp.action === 'Editor' || comp.action === 'FullScreen' || comp.action === 'About') {\n          return '28px';\n        }\n\n        if (this.model.options.isMobileDevice) {\n          return '0.4in';\n        }\n      }\n\n      return null;\n    }\n\n    getInnerTableWidth(comp) {\n      if (this.model.options.toolbar.displayMode === 'Separated' && (this.model.options.isMobileDevice || comp.action === 'Find' || comp.action === 'Editor' || comp.action === 'FullScreen' || comp.action === 'About')) {\n        return '100%';\n      }\n\n      return null;\n    }\n\n  }\n\n  ToolbarService.ɵfac = function ToolbarService_Factory(t) {\n    return new (t || ToolbarService)(i0.ɵɵinject(ModelService), i0.ɵɵinject(ControllerService), i0.ɵɵinject(EditableFieldsService), i0.ɵɵinject(InteractionsService), i0.ɵɵinject(HelperService));\n  };\n\n  ToolbarService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ToolbarService,\n    factory: ToolbarService.ɵfac\n  });\n  return ToolbarService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet CenterTextComponent = /*#__PURE__*/(() => {\n  class CenterTextComponent {\n    constructor(model, controller, helper) {\n      this.model = model;\n      this.controller = controller;\n      this.helper = helper;\n      this.text = '';\n      this.opacity = 0;\n      this.display = 'none';\n      controller.getActionMessage().subscribe(message => {\n        switch (message.action) {\n          case 'centerText':\n            this.show(message.data);\n            break;\n\n          case 'hideCenterText':\n            this.hide();\n            break;\n        }\n      });\n    }\n\n    ngOnInit() {}\n\n    show(text) {\n      this.display = '';\n      this.opacity = 0;\n      this.text = text;\n      setTimeout(() => {\n        this.helper.setObjectToCenter(this.element.nativeElement);\n        this.opacity = 1;\n      });\n\n      if (this.hideTimer) {\n        clearTimeout(this.hideTimer);\n      }\n\n      this.hideTimer = setTimeout(() => {\n        this.hide();\n      }, 2000);\n    }\n\n    hide() {\n      this.opacity = 0;\n\n      if (this.hideTimer) {\n        clearTimeout(this.hideTimer);\n      }\n\n      this.hideTimer = setTimeout(() => {\n        this.display = 'none';\n      }, 300);\n    }\n\n  }\n\n  CenterTextComponent.ɵfac = function CenterTextComponent_Factory(t) {\n    return new (t || CenterTextComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(ControllerService), i0.ɵɵdirectiveInject(HelperService));\n  };\n\n  CenterTextComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CenterTextComponent,\n    selectors: [[\"sti-center-text\"]],\n    viewQuery: function CenterTextComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.element = _t.first);\n      }\n    },\n    decls: 4,\n    vars: 9,\n    consts: [[2, \"position\", \"absolute\", \"z-index\", \"1000\", \"transition-property\", \"opacity\", \"transition-duration\", \"300ms\", \"text-shadow\", \"rgb(0, 0, 0) -1px -1px 0px, rgb(0, 0, 0) 1px -1px 0px, rgb(0, 0, 0) -1px 1px 0px, rgb(0, 0, 0) 1px 1px 0px\", \"font-size\", \"100px\"], [\"element\", \"\"]],\n    template: function CenterTextComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵelementStart(2, \"div\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"font-family\", ctx.model.options.toolbar.fontFamily)(\"color\", ctx.model.options.toolbar.fontColor)(\"opacity\", ctx.opacity)(\"display\", ctx.display);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.text, \" \");\n      }\n    },\n    encapsulation: 2\n  });\n  return CenterTextComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ButtonComponent = /*#__PURE__*/(() => {\n  class ButtonComponent {\n    constructor(model, menuService, tooltipService, helper) {\n      this.model = model;\n      this.menuService = menuService;\n      this.tooltipService = tooltipService;\n      this.helper = helper;\n      this.margin = '1px';\n      this.height = '23px';\n      this.selected = false;\n      this.imageCellTextAlign = 'center';\n      this.imageSizesWidth = 16;\n      this.imageSizesHeight = 16;\n      this.closeButton = false;\n      this.resourceButton = false;\n      this.navagationPanelTooltip = false;\n      this.helpLink = 'user-manual/index.html?viewer_reports.htm';\n      this.action = new EventEmitter();\n      this.closeButtonAction = new EventEmitter();\n      this.over = false;\n      this.showMenu = false;\n      this.closeButtonPressed = false;\n      this.resourceButtonPressed = false;\n      this._enabled = true;\n      this.canShowTooltip = true;\n    }\n\n    ngOnInit() {\n      if (this.menuItems) {\n        setTimeout(() => {\n          this.menuObj = {\n            type: 'buttonMenu',\n            name: this.actionName,\n            items: this.menuItems,\n            parent: !this.resourceButton ? this.button : this.resButtonEl,\n            state: ''\n          };\n          this.menuService.addMenu(this.menuObj);\n        }, 500);\n      }\n    }\n\n    get styleName() {\n      return this._styleName || 'stiJsViewerStandartSmallButton';\n    }\n\n    set styleName(value) {\n      this._styleName = value;\n    }\n\n    get enabled() {\n      return this._enabled;\n    }\n\n    set enabled(value) {\n      if (!value) {\n        this.over = false;\n      }\n\n      this._enabled = value;\n    }\n\n    mouseover() {\n      if (!this.enabled) {\n        return;\n      }\n\n      this.over = true;\n\n      if (this.model.options.toolbar.showMenuMode === 'Hover' && ['Print', 'Save', 'SendEmail', 'Zoom', 'ViewMode'].some(a => a === this.actionName)) {\n        this.tooltipService.hideImmediately();\n        this.menuService.showMenu(this.actionName);\n      } else if (this.tooltip && !this.menuService.menus.some(e => e.state === 'expanded') && this.canShowTooltip) {\n        const top = !this.navagationPanelTooltip ? this.model.controls.toolbar.offsetHeight + this.model.controls.dashboardsPanel.offsetHeight : this.helper.findPosY(this.model.controls.navigatePanel.el.nativeElement, 'stiJsViewerMainPanel');\n        const tooltip = this.tooltip === true ? this.model.localization[this.actionName + 'ToolTip'] != null ? this.model.loc(this.actionName + 'ToolTip') : this.model.loc(this.actionName) : this.tooltip;\n        this.tooltipService.show(this.helper.findPosX(this.button.nativeElement, 'stiJsViewerMainPanel'), top, tooltip, !this.navagationPanelTooltip, this.helpLink);\n      }\n    }\n\n    mouseout() {\n      if (!this.enabled) {\n        return;\n      }\n\n      this.over = false;\n      this.tooltipService.hide();\n      setTimeout(() => {\n        this.canShowTooltip = true;\n      }, 1000);\n    }\n\n    click() {\n      if (this.enabled && !this.closeButtonPressed) {\n        this.tooltipService.hideImmediately();\n\n        if (this.menuItems == null || this.resourceButton && !this.resourceButtonPressed) {\n          this.action.emit();\n        } else {\n          this.menuService.showMenu(this.actionName);\n        }\n      }\n\n      this.canShowTooltip = false;\n      this.closeButtonPressed = false;\n      this.resourceButtonPressed = false;\n    }\n\n    get className() {\n      var _a;\n\n      return this.styleName ? this.styleName + ' ' + (this.enabled ? this.styleName + (this.selected || ((_a = this.menuObj) === null || _a === void 0 ? void 0 : _a.state) === 'expanded' ? 'Selected' : this.over ? 'Over' : 'Default') : this.styleName + 'Disabled') : '';\n    }\n\n  }\n\n  ButtonComponent.ɵfac = function ButtonComponent_Factory(t) {\n    return new (t || ButtonComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(MenuService), i0.ɵɵdirectiveInject(TooltipService), i0.ɵɵdirectiveInject(HelperService));\n  };\n\n  ButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ButtonComponent,\n    selectors: [[\"sti-button\"]],\n    viewQuery: function ButtonComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.button = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.resButtonEl = _t.first);\n      }\n    },\n    inputs: {\n      caption: \"caption\",\n      caption2: \"caption2\",\n      captionAlign: \"captionAlign\",\n      captionPadding: \"captionPadding\",\n      captionPaddingLeft: \"captionPaddingLeft\",\n      captionWhiteSpace: \"captionWhiteSpace\",\n      captionOverflow: \"captionOverflow\",\n      captionTextOverflow: \"captionTextOverflow\",\n      captionWidth: \"captionWidth\",\n      captionMaxWidth: \"captionMaxWidth\",\n      captionLineHeight: \"captionLineHeight\",\n      imageName: \"imageName\",\n      arrow: \"arrow\",\n      arrowMarginTop: \"arrowMarginTop\",\n      margin: \"margin\",\n      height: \"height\",\n      selected: \"selected\",\n      minWidth: \"minWidth\",\n      innerTableWidth: \"innerTableWidth\",\n      menuItems: \"menuItems\",\n      actionName: \"actionName\",\n      tooltip: \"tooltip\",\n      imageCellTextAlign: \"imageCellTextAlign\",\n      imageCellWidth: \"imageCellWidth\",\n      imageCellPadding: \"imageCellPadding\",\n      imageSizesWidth: \"imageSizesWidth\",\n      imageSizesHeight: \"imageSizesHeight\",\n      imageMargin: \"imageMargin\",\n      width: \"width\",\n      display: \"display\",\n      closeButton: \"closeButton\",\n      resourceButton: \"resourceButton\",\n      styleColors: \"styleColors\",\n      boxSizing: \"boxSizing\",\n      navagationPanelTooltip: \"navagationPanelTooltip\",\n      cursor: \"cursor\",\n      fontSize: \"fontSize\",\n      helpLink: \"helpLink\",\n      borderColor: \"borderColor\",\n      styleName: \"styleName\",\n      enabled: \"enabled\"\n    },\n    outputs: {\n      action: \"action\",\n      closeButtonAction: \"closeButtonAction\"\n    },\n    decls: 10,\n    vars: 26,\n    consts: [[3, \"mouseover\", \"mouseout\", \"click\"], [\"button\", \"\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\", 2, \"height\", \"100%\", \"width\", \"100%\"], [1, \"stiJsViewerClearAllStyles\"], [\"class\", \"stiJsViewerClearAllStyles\", 3, \"style\", 4, \"ngIf\"], [\"class\", \"stiJsViewerClearAllStyles\", 3, \"style\", \"maxWidth\", \"lineHeight\", \"paddingLeft\", \"whiteSpace\", \"overflow\", \"textOverflow\", 4, \"ngIf\"], [\"class\", \"stiJsViewerClearAllStyles\", 4, \"ngIf\"], [\"style\", \"width: 1px;\", 4, \"ngIf\"], [3, \"src\"], [4, \"ngIf\"], [3, \"imageName\", \"imageMargin\", \"margin\", \"imageCellPadding\", \"width\", \"height\", \"action\"], [2, \"width\", \"1px\"], [\"resButtonEl\", \"\"], [3, \"imageName\", \"styleName\", \"innerTableWidth\", \"margin\", \"imageCellTextAlign\", \"imageSizesWidth\", \"imageSizesHeight\", \"height\", \"width\", \"action\"]],\n    template: function ButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵlistener(\"mouseover\", function ButtonComponent_Template_div_mouseover_0_listener() {\n          return ctx.mouseover();\n        })(\"mouseout\", function ButtonComponent_Template_div_mouseout_0_listener() {\n          return ctx.mouseout();\n        })(\"click\", function ButtonComponent_Template_div_click_0_listener() {\n          return ctx.click();\n        });\n        i0.ɵɵelementStart(2, \"table\", 2);\n        i0.ɵɵelementStart(3, \"tbody\");\n        i0.ɵɵelementStart(4, \"tr\", 3);\n        i0.ɵɵtemplate(5, ButtonComponent_td_5_Template, 2, 15, \"td\", 4);\n        i0.ɵɵtemplate(6, ButtonComponent_td_6_Template, 3, 20, \"td\", 5);\n        i0.ɵɵtemplate(7, ButtonComponent_td_7_Template, 2, 8, \"td\", 6);\n        i0.ɵɵtemplate(8, ButtonComponent_td_8_Template, 2, 6, \"td\", 6);\n        i0.ɵɵtemplate(9, ButtonComponent_td_9_Template, 4, 9, \"td\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction6(19, _c6, ctx.helper.val(ctx.height, \"23px\"), ctx.helper.val(ctx.boxSizing, \"content-box\"), ctx.helper.val(ctx.margin, \"1px\"), ctx.minWidth, ctx.width, ctx.display));\n        i0.ɵɵclassMap(ctx.className);\n        i0.ɵɵstyleProp(\"font-family\", ctx.model.options.toolbar.fontFamily)(\"cursor\", ctx.cursor)(\"border-color\", ctx.borderColor)(\"font-size\", ctx.fontSize);\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleProp(\"width\", ctx.innerTableWidth);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.imageName != null);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.caption != null);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.arrow);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.closeButton);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.resourceButton);\n      }\n    },\n    directives: [i7.NgIf, ButtonComponent],\n    encapsulation: 2\n  });\n  return ButtonComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ToolbarSeparatorComponent = /*#__PURE__*/(() => {\n  class ToolbarSeparatorComponent {\n    constructor(model) {\n      this.model = model;\n    }\n\n    ngOnInit() {}\n\n  }\n\n  ToolbarSeparatorComponent.ɵfac = function ToolbarSeparatorComponent_Factory(t) {\n    return new (t || ToolbarSeparatorComponent)(i0.ɵɵdirectiveInject(ModelService));\n  };\n\n  ToolbarSeparatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ToolbarSeparatorComponent,\n    selectors: [[\"sti-toolbar-separator\"]],\n    decls: 1,\n    vars: 2,\n    consts: [[1, \"stiJsViewerToolBarSeparator\", 2, \"width\", \"1px\"]],\n    template: function ToolbarSeparatorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"height\", ctx.model.options.isMobileDevice ? \"0.4in\" : ctx.model.options.isTouchDevice ? \"26px\" : \"21px\");\n      }\n    },\n    encapsulation: 2\n  });\n  return ToolbarSeparatorComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TextBoxComponent = /*#__PURE__*/(() => {\n  class TextBoxComponent {\n    constructor(model) {\n      this.model = model;\n      this.enabled = true;\n      this.focusOnCreate = false;\n      this.action = new EventEmitter();\n      this.onchange = new EventEmitter();\n      this.onblur = new EventEmitter();\n      this.selected = false;\n      this.focused = false;\n      this.over = false;\n      this._readOnly = false;\n      this.styleName = 'stiJsViewerTextBox';\n    }\n\n    ngAfterViewInit() {\n      if (this.focusOnCreate) {\n        setTimeout(() => {\n          this.element.nativeElement.focus();\n        });\n      }\n    }\n\n    keypress(event) {\n      if (!this.enabled) {\n        return false;\n      }\n\n      if (event.keyCode === 13) {\n        this.action.emit(event.target);\n      }\n    }\n\n    onchanged(event) {\n      this.onchange.emit(event.target);\n    }\n\n    focus() {\n      this.oldValue = this.element.nativeElement.value;\n    }\n\n    get height() {\n      return this.model.options.isTouchDevice ? '26px' : '21px';\n    }\n\n    get className() {\n      if (this._readOnly) {\n        return this.styleName + ' ' + this.styleName + 'Default';\n      }\n\n      return this.styleName + ' ' + this.styleName + (this.selected ? 'Over' : this.enabled ? this.over ? 'Over' : 'Default' : 'Disabled');\n    }\n\n    set readOnly(value) {\n      this._readOnly = value;\n      setTimeout(() => {\n        try {\n          this.element.nativeElement.setAttribute('unselectable', value ? 'on' : 'off');\n          this.element.nativeElement.setAttribute('onselectstart', value ? 'return false' : '');\n          this.element.nativeElement.readOnly = value;\n        } catch (e) {}\n      });\n    }\n\n    get readOnly() {\n      return this._readOnly;\n    }\n\n    ngOnInit() {}\n\n  }\n\n  TextBoxComponent.ɵfac = function TextBoxComponent_Factory(t) {\n    return new (t || TextBoxComponent)(i0.ɵɵdirectiveInject(ModelService));\n  };\n\n  TextBoxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TextBoxComponent,\n    selectors: [[\"sti-text-box\"]],\n    viewQuery: function TextBoxComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.element = _t.first);\n      }\n    },\n    inputs: {\n      width: \"width\",\n      actionLostFocus: \"actionLostFocus\",\n      tooltip: \"tooltip\",\n      enabled: \"enabled\",\n      value: \"value\",\n      margin: \"margin\",\n      focusOnCreate: \"focusOnCreate\",\n      maxLength: \"maxLength\",\n      color: \"color\",\n      type: \"type\",\n      padding: \"padding\",\n      border: \"border\",\n      readOnly: \"readOnly\"\n    },\n    outputs: {\n      action: \"action\",\n      onchange: \"onchange\",\n      onblur: \"onblur\"\n    },\n    decls: 2,\n    vars: 24,\n    consts: [[3, \"title\", \"value\", \"mouseover\", \"mouseleave\", \"focused\", \"blur\", \"keypress\", \"keyup\", \"focus\"], [\"element\", \"\"]],\n    template: function TextBoxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"input\", 0, 1);\n        i0.ɵɵlistener(\"mouseover\", function TextBoxComponent_Template_input_mouseover_0_listener() {\n          return ctx.over = true;\n        })(\"mouseleave\", function TextBoxComponent_Template_input_mouseleave_0_listener() {\n          return ctx.over = false;\n        })(\"focused\", function TextBoxComponent_Template_input_focused_0_listener() {\n          ctx.focused = true;\n          return ctx.selected = true;\n        })(\"blur\", function TextBoxComponent_Template_input_blur_0_listener($event) {\n          ctx.focused = false;\n          ctx.selected = false;\n          return ctx.onblur.emit($event.target);\n        })(\"keypress\", function TextBoxComponent_Template_input_keypress_0_listener($event) {\n          return ctx.keypress($event);\n        })(\"keyup\", function TextBoxComponent_Template_input_keyup_0_listener($event) {\n          return ctx.onchanged($event);\n        })(\"focus\", function TextBoxComponent_Template_input_focus_0_listener() {\n          return ctx.focus();\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction3(20, _c7, ctx.model.options.toolbar.fontFamily, ctx.height, ctx.height));\n        i0.ɵɵclassMap(ctx.className);\n        i0.ɵɵstyleProp(\"color\", ctx.color ? ctx.color : ctx.model.options.toolbar.fontColor != \"\" ? ctx.model.options.toolbar.fontColor : \"\")(\"width\", ctx.width != null ? ctx.width + \"px\" : \"\")(\"margin\", ctx.margin)(\"cursor\", ctx.readOnly ? \"default\" : \"\")(\"padding\", ctx.padding)(\"border\", ctx.border);\n        i0.ɵɵproperty(\"title\", ctx.tooltip || \"\")(\"value\", ctx.value || \"\");\n        i0.ɵɵattribute(\"maxLength\", ctx.maxLength)(\"type\", ctx.type);\n      }\n    },\n    encapsulation: 2\n  });\n  return TextBoxComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet PageControlComponent = /*#__PURE__*/(() => {\n  class PageControlComponent {\n    constructor(model, controller, helper) {\n      this.model = model;\n      this.controller = controller;\n      this.helper = helper;\n      this.enabled = true;\n      this.count = '?';\n    }\n\n    ngOnInit() {}\n\n    textBoxAction(target) {\n      if (this.model.reportParams.pagesCount > 0 && this.model.reportParams.pageNumber !== this.getCorrectValue(target.value) - 1) {\n        this.controller.action({\n          name: 'GoToPage',\n          value: this.getCorrectValue(target.value) - 1\n        });\n      }\n    }\n\n    getCorrectValue(value) {\n      value = parseInt(value, 10);\n\n      if (value < 1 || !value) {\n        value = 1;\n      }\n\n      if (value > this.model.reportParams.pagesCount) {\n        value = this.model.reportParams.pagesCount;\n      }\n\n      return value;\n    }\n\n    get textBoxColor() {\n      const toolbarFontColor = this.model.options.toolbar.fontColor;\n      return this.enabled ? toolbarFontColor && toolbarFontColor !== 'Empty' ? toolbarFontColor : '#444444' : this.model.reportParams && this.model.reportParams.viewMode !== 'SinglePage' ? 'transparent' : toolbarFontColor;\n    }\n\n  }\n\n  PageControlComponent.ɵfac = function PageControlComponent_Factory(t) {\n    return new (t || PageControlComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(ControllerService), i0.ɵɵdirectiveInject(HelperService));\n  };\n\n  PageControlComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: PageControlComponent,\n    selectors: [[\"sti-page-control\"]],\n    inputs: {\n      enabled: \"enabled\",\n      count: \"count\",\n      textBoxBorder: \"textBoxBorder\",\n      margin: \"margin\"\n    },\n    decls: 11,\n    vars: 7,\n    consts: [[\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\"], [1, \"stiJsViewerClearAllStyles\"], [1, \"stiJsViewerClearAllStyles\", 2, \"padding\", \"0 2px 0 2px\"], [\"class\", \"stiJsViewerClearAllStyles\", \"style\", \"padding: '0 2px 0 2px' \", 4, \"ngIf\"], [3, \"width\", \"enabled\", \"value\", \"border\", \"action\"]],\n    template: function PageControlComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0);\n        i0.ɵɵelementStart(1, \"tbody\");\n        i0.ɵɵelementStart(2, \"tr\", 1);\n        i0.ɵɵelementStart(3, \"td\", 2);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, PageControlComponent_td_5_Template, 3, 1, \"td\", 3);\n        i0.ɵɵtemplate(6, PageControlComponent_td_6_Template, 2, 8, \"td\", 3);\n        i0.ɵɵelementStart(7, \"td\", 2);\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"td\", 2);\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"margin\", ctx.helper.val(ctx.margin, \"1px\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.model.loc(\"Page\"), \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.model.options.isMobileDevice);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.model.options.isMobileDevice);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.model.loc(\"PageOf\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.count, \" \");\n      }\n    },\n    directives: [i7.NgIf, TextBoxComponent],\n    encapsulation: 2\n  });\n  return PageControlComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ToolbarDopComponent = /*#__PURE__*/(() => {\n  class ToolbarDopComponent {\n    constructor(model, controller, toolbarService) {\n      this.model = model;\n      this.controller = controller;\n      this.toolbarService = toolbarService;\n      this.marginLeft = '1px';\n      this.viewInit = false;\n    }\n\n    ngAfterViewInit() {\n      this.viewInit = true;\n      setTimeout(() => {\n        var _a, _b;\n\n        const width = (_b = (_a = this.mainTable) === null || _a === void 0 ? void 0 : _a.nativeElement) === null || _b === void 0 ? void 0 : _b.offsetWidth;\n        this.marginLeft = this.viewInit && this.model.options.toolbar.alignment === 'Center' && width ? `calc(50% - ${Math.trunc(width / 2)}px)` : '1px';\n      });\n    }\n\n    ngOnInit() {}\n\n  }\n\n  ToolbarDopComponent.ɵfac = function ToolbarDopComponent_Factory(t) {\n    return new (t || ToolbarDopComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(ControllerService), i0.ɵɵdirectiveInject(ToolbarService));\n  };\n\n  ToolbarDopComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ToolbarDopComponent,\n    selectors: [[\"sti-toolbar-dop\"]],\n    viewQuery: function ToolbarDopComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c8, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.mainTable = _t.first);\n      }\n    },\n    inputs: {\n      comps: \"comps\",\n      align: \"align\"\n    },\n    decls: 5,\n    vars: 4,\n    consts: [[\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\", 2, \"margin\", \"1px\"], [\"mainTable\", \"\"], [1, \"stiJsViewerClearAllStyles\"], [\"class\", \"stiJsViewerClearAllStyles\", 4, \"ngFor\", \"ngForOf\"], [3, \"caption\", \"imageName\", \"arrow\", \"menuItems\", \"actionName\", \"tooltip\", \"enabled\", \"display\", \"innerTableWidth\", \"width\", \"height\", \"selected\", \"action\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"enabled\", \"count\", 4, \"ngIf\"], [3, \"caption\", \"imageName\", \"arrow\", \"menuItems\", \"actionName\", \"tooltip\", \"enabled\", \"display\", \"innerTableWidth\", \"width\", \"height\", \"selected\", \"action\"], [3, \"enabled\", \"count\"]],\n    template: function ToolbarDopComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0, 1);\n        i0.ɵɵelementStart(2, \"tbody\");\n        i0.ɵɵelementStart(3, \"tr\", 2);\n        i0.ɵɵtemplate(4, ToolbarDopComponent_td_4_Template, 4, 3, \"td\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"margin-left\", ctx.marginLeft);\n        i0.ɵɵattribute(\"align\", ctx.align);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.comps);\n      }\n    },\n    directives: [i7.NgForOf, i7.NgIf, ButtonComponent, ToolbarSeparatorComponent, PageControlComponent],\n    encapsulation: 2\n  });\n  return ToolbarDopComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ToolbarComponent = /*#__PURE__*/(() => {\n  class ToolbarComponent {\n    constructor(model, controller, toolbarService) {\n      this.model = model;\n      this.controller = controller;\n      this.toolbarService = toolbarService;\n    }\n\n    ngAfterViewInit() {\n      this.model.controls.toolbar.el = this.element;\n    }\n\n    ngOnInit() {\n      this.toolbarService.initButtons();\n    }\n\n  }\n\n  ToolbarComponent.ɵfac = function ToolbarComponent_Factory(t) {\n    return new (t || ToolbarComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(ControllerService), i0.ɵɵdirectiveInject(ToolbarService));\n  };\n\n  ToolbarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ToolbarComponent,\n    selectors: [[\"sti-toolbar\"]],\n    viewQuery: function ToolbarComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.element = _t.first);\n      }\n    },\n    decls: 11,\n    vars: 34,\n    consts: [[2, \"display\", \"block\"], [\"element\", \"\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerToolBarTable\", 2, \"margin\", \"0px\", \"box-sizing\", \"border-box\"], [1, \"stiJsViewerClearAllStyles\"], [4, \"ngIf\"], [1, \"stiJsViewerClearAllStyles\", 2, \"width\", \"100%\"], [3, \"align\", \"comps\"], [1, \"stiJsViewerDisabledPanel\"], [3, \"comps\"]],\n    template: function ToolbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵelementStart(2, \"div\");\n        i0.ɵɵelementStart(3, \"table\", 2);\n        i0.ɵɵelementStart(4, \"tbody\");\n        i0.ɵɵelementStart(5, \"tr\", 3);\n        i0.ɵɵtemplate(6, ToolbarComponent_td_6_Template, 2, 1, \"td\", 4);\n        i0.ɵɵelementStart(7, \"td\", 5);\n        i0.ɵɵelement(8, \"sti-toolbar-dop\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, ToolbarComponent_td_9_Template, 2, 1, \"td\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"div\", 7);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassMap(\"stiJsViewerToolBar\" + (ctx.model.options.toolbar.displayMode === \"Separated\" ? \"  stiJsViewerToolBarSeparated\" : \"\"));\n        i0.ɵɵstyleProp(\"width\", !ctx.model.controls.toolbar.visible ? \"0px\" : \"\", \"px\")(\"height\", !ctx.model.controls.toolbar.visible ? \"0px\" : \"\", \"px\")(\"display\", !ctx.model.options.isMobileDevice ? ctx.model.controls.toolbar.visible ? \"\" : \"none\" : \"\")(\"transition\", ctx.model.options.isMobileDevice ? \"margin 300ms ease, opacity 300ms ease\" : null)(\"z-index\", ctx.model.options.toolbar.autoHide ? 5 : 2)(\"position\", ctx.model.options.toolbar.autoHide ? \"absolute\" : \"relative\")(\"opacity\", ctx.model.options.isMobileDevice ? ctx.model.controls.toolbar.visible ? ctx.model.options.toolbar.autoHide ? 0.9 : 1 : 0 : 1)(\"margin-top\", ctx.model.options.isMobileDevice && !ctx.model.controls.toolbar.visible ? \"-0.55in\" : 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleMap(ctx.model.options.toolbar.displayMode === \"Simple\" ? \"paddingTop: 2px\" : \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"background\", ctx.model.options.toolbar.backgroundColor !== \"\" ? ctx.model.options.toolbar.backgroundColor : \"\")(\"border\", ctx.model.options.toolbar.displayMode === \"Separated\" ? \"0px\" : ctx.model.options.toolbar.borderColor !== \"\" ? \"1px solid \" + ctx.model.options.toolbar.borderColor : \"\")(\"color\", ctx.model.options.toolbar.fontColor !== \"\" ? ctx.model.options.toolbar.fontColor : \"\")(\"font-family\", ctx.model.options.toolbar.fontFamily);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.model.options.appearance.rightToLeft);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"align\", ctx.model.options.appearance.rightToLeft ? \"right\" : ctx.model.options.toolbar.alignment === \"default\" ? \"left\" : ctx.model.options.toolbar.alignment)(\"comps\", ctx.toolbarService.comps);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.model.options.appearance.rightToLeft);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"display\", ctx.model.controls.toolbar.enabled ? \"none\" : \"block\");\n      }\n    },\n    directives: [i7.NgIf, ToolbarDopComponent],\n    encapsulation: 2\n  });\n  return ToolbarComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet AboutPanelComponent = /*#__PURE__*/(() => {\n  class AboutPanelComponent {\n    constructor(model, controller, helper, formService) {\n      this.model = model;\n      this.controller = controller;\n      this.helper = helper;\n      this.formService = formService;\n      this.year = new Date().getFullYear();\n      this.top = 0;\n      this.left = 0;\n      this.opacity = 0;\n      controller.getActionMessage().subscribe(message => {\n        if (message.action === 'About') {\n          this.formService.form = {\n            name: 'about',\n            left: 0,\n            top: 0,\n            isMooving: false,\n            level: 2\n          };\n          this.opacity = 0;\n          setTimeout(() => {\n            this.top = this.model.viewerSize.height / 2 - this.element.nativeElement.offsetHeight / 2;\n            this.left = this.model.viewerSize.width / 2 - this.element.nativeElement.offsetWidth / 2;\n            this.opacity = 1;\n          });\n        }\n      });\n    }\n\n    ngOnInit() {}\n\n    close() {\n      this.formService.closeForm('about');\n    }\n\n    click(event) {\n      if (event) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n\n      this.helper.openNewWindow('https://www.stimulsoft.com');\n    }\n\n    isLicensed() {\n      return !this.model.options.cloudMode && !this.model.options.serverMode && !this.model.options.standaloneJsMode && !this.model.options.reportDesignerMode && !this.model.options.licenseIsValid;\n    }\n\n    get userLabel() {\n      let userName = this.model.options.licenseUserName || '';\n\n      if (this.isLicensed()) {\n        if (userName) {\n          userName += ', ';\n        }\n\n        return userName + this.helper.getBackText(true) + ' Version';\n      } else {\n        return userName;\n      }\n    }\n\n  }\n\n  AboutPanelComponent.ɵfac = function AboutPanelComponent_Factory(t) {\n    return new (t || AboutPanelComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(ControllerService), i0.ɵɵdirectiveInject(HelperService), i0.ɵɵdirectiveInject(FormService));\n  };\n\n  AboutPanelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: AboutPanelComponent,\n    selectors: [[\"sti-about-panel\"]],\n    viewQuery: function AboutPanelComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.element = _t.first);\n      }\n    },\n    decls: 16,\n    vars: 17,\n    consts: [[1, \"stiJsViewerAboutPanel\", 2, \"background-size\", \"contain\", 3, \"click\"], [\"element\", \"\"], [1, \"stiJsViewerAboutPanelHeader\"], [2, \"margin-top\", \"30px\", \"height\", \"94px\", \"width\", \"94px\", 3, \"src\"], [1, \"stiJsViewerAboutPanelCopyright\"], [1, \"stiJsViewerAboutPanelVersion\"], [1, \"stiJsViewerAboutPanelVersion\", 2, \"margin-top\", \"20px\", \"font-weight\", \"bold\"], [1, \"stiJsViewerFormSeparator\", 2, \"margin-top\", \"20px\"], [1, \"stiJsViewerAboutPanelStiLink\", 3, \"click\"]],\n    template: function AboutPanelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵlistener(\"click\", function AboutPanelComponent_Template_div_click_0_listener() {\n          return ctx.close();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtext(3, \" Stimulsoft Reports \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"img\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 5);\n        i0.ɵɵtext(10, \" All rights reserved \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 6);\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"div\", 7);\n        i0.ɵɵelementStart(14, \"div\", 8);\n        i0.ɵɵlistener(\"click\", function AboutPanelComponent_Template_div_click_14_listener($event) {\n          return ctx.click($event);\n        });\n        i0.ɵɵtext(15, \" www.stimulsoft.com \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"display\", (ctx.formService.form == null ? null : ctx.formService.form.name) == \"about\" ? \"\" : \"none\")(\"left\", ctx.left, \"px\")(\"top\", ctx.top, \"px\")(\"opacity\", ctx.opacity);\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate(\"src\", ctx.model.img(\"About.png\"), i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", \"Copyright 2003-\" + ctx.year + \" Stimulsoft\", \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate2(\" \", ctx.model.options.productVersion == null ? null : ctx.model.options.productVersion.trim(), \", \", ctx.model.options == null ? null : ctx.model.options.frameworkType, \", Angular \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵstyleProp(\"color\", ctx.isLicensed() ? \"red\" : \"#444444\")(\"display\", ctx.isLicensed() || ctx.userLabel ? \"\" : \"none\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.userLabel, \" \");\n      }\n    },\n    encapsulation: 2\n  });\n  return AboutPanelComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet DashboardButtonComponent = /*#__PURE__*/(() => {\n  class DashboardButtonComponent {\n    constructor(model) {\n      this.model = model;\n      this.showCloseButton = false;\n    }\n\n    ngOnInit() {}\n\n  }\n\n  DashboardButtonComponent.ɵfac = function DashboardButtonComponent_Factory(t) {\n    return new (t || DashboardButtonComponent)(i0.ɵɵdirectiveInject(ModelService));\n  };\n\n  DashboardButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DashboardButtonComponent,\n    selectors: [[\"sti-dashboard-button\"]],\n    inputs: {\n      showCloseButton: \"showCloseButton\",\n      info: \"info\",\n      dbsMode: \"dbsMode\",\n      display: \"display\"\n    },\n    decls: 1,\n    vars: 4,\n    consts: [[3, \"margin\", \"display\", \"borderColor\", \"height\"]],\n    template: function DashboardButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"sti-button\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"margin\", \"2px 1px 2px 2px\")(\"display\", ctx.display)(\"borderColor\", !ctx.dbsMode ? \"transparent\" : \"\")(\"height\", ctx.model.options.toolbar.displayMode == \"Separated\" ? ctx.dbsMode ? ctx.model.options.isTouchDevice ? \"28px\" : \"23px\" : \"28px\" : null);\n      }\n    },\n    directives: [ButtonComponent],\n    encapsulation: 2\n  });\n  return DashboardButtonComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet DashboardsPanelComponent = /*#__PURE__*/(() => {\n  class DashboardsPanelComponent {\n    constructor(model, helper, dashboardService) {\n      this.model = model;\n      this.helper = helper;\n      this.dashboardService = dashboardService;\n      this.imagesPath = 'Dashboards.Actions.Light.';\n    }\n\n    ngOnInit() {}\n\n    ngAfterViewInit() {\n      this.model.controls.navigatePanel.el = this.element;\n    }\n\n    get dbsMode() {\n      return this.dashboardsCount > 0 && this.reportsCount === 0;\n    }\n\n    get dashboardsCount() {\n      var _a, _b;\n\n      let count = 0;\n\n      if ((_b = (_a = this.model) === null || _a === void 0 ? void 0 : _a.reportParams) === null || _b === void 0 ? void 0 : _b.dashboards) {\n        this.model.reportParams.dashboards.forEach(i => {\n          if (i['type'] === 'Dashboard') {\n            count++;\n          }\n        });\n      }\n\n      return count;\n    }\n\n    get reportsCount() {\n      var _a, _b;\n\n      if ((_b = (_a = this.model) === null || _a === void 0 ? void 0 : _a.reportParams) === null || _b === void 0 ? void 0 : _b.dashboards) {\n        return this.model.reportParams.dashboards.length - this.dashboardsCount;\n      }\n\n      return 0;\n    }\n\n    get previewSettings() {\n      return this.model.reportParams.previewSettings || {};\n    }\n\n  }\n\n  DashboardsPanelComponent.ɵfac = function DashboardsPanelComponent_Factory(t) {\n    return new (t || DashboardsPanelComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(HelperService), i0.ɵɵdirectiveInject(DashboardService));\n  };\n\n  DashboardsPanelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DashboardsPanelComponent,\n    selectors: [[\"sti-dashboards-panel\"]],\n    viewQuery: function DashboardsPanelComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.element = _t.first);\n      }\n    },\n    decls: 21,\n    vars: 29,\n    consts: [[\"element\", \"\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerToolBarTable\", 2, \"margin\", \"0px\", \"box-sizing\", \"border-box\"], [1, \"stiJsViewerClearAllStyles\"], [1, \"stiJsViewerClearAllStyles\", 2, \"width\", \"100%\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerToolBarTable\"], [4, \"ngFor\", \"ngForOf\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerToolBarTable\", 2, \"margin-right\", \"2px\"], [4, \"ngIf\"], [3, \"info\", \"dbsMode\", \"display\"], [3, \"imageName\", \"tooltip\", \"helpLink\", \"margin\", \"actionName\", \"height\", \"width\", \"innerTableWidth\", \"imageCellTextAlign\", \"display\"], [3, \"imageName\", \"tooltip\", \"helpLink\", \"margin\", \"actionName\", \"height\", \"width\", \"innerTableWidth\", \"imageCellTextAlign\"], [3, \"imageName\", \"caption\", \"tooltip\", \"helpLink\", \"margin\", \"actionName\", \"height\", \"innerTableWidth\", \"imageCellTextAlign\", \"display\"]],\n    template: function DashboardsPanelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", null, 0);\n        i0.ɵɵelementStart(2, \"div\");\n        i0.ɵɵelementStart(3, \"table\", 1);\n        i0.ɵɵelementStart(4, \"tbody\");\n        i0.ɵɵelementStart(5, \"tr\", 2);\n        i0.ɵɵelementStart(6, \"td\", 3);\n        i0.ɵɵelementStart(7, \"table\", 4);\n        i0.ɵɵelementStart(8, \"tbody\");\n        i0.ɵɵelementStart(9, \"tr\");\n        i0.ɵɵtemplate(10, DashboardsPanelComponent_td_10_Template, 2, 3, \"td\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"td\", 2);\n        i0.ɵɵelementStart(12, \"table\", 6);\n        i0.ɵɵelementStart(13, \"tbody\");\n        i0.ɵɵelementStart(14, \"tr\");\n        i0.ɵɵtemplate(15, DashboardsPanelComponent_td_15_Template, 2, 10, \"td\", 7);\n        i0.ɵɵtemplate(16, DashboardsPanelComponent_td_16_Template, 2, 9, \"td\", 7);\n        i0.ɵɵtemplate(17, DashboardsPanelComponent_td_17_Template, 2, 10, \"td\", 7);\n        i0.ɵɵtemplate(18, DashboardsPanelComponent_td_18_Template, 2, 10, \"td\", 7);\n        i0.ɵɵtemplate(19, DashboardsPanelComponent_td_19_Template, 2, 10, \"td\", 7);\n        i0.ɵɵtemplate(20, DashboardsPanelComponent_td_20_Template, 2, 10, \"td\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassMap(\"stiJsViewerToolBar\" + (ctx.model.options.toolbar.displayMode == \"Separated\" ? \" stiJsViewerToolBarSeparated\" : \"\"));\n        i0.ɵɵstyleProp(\"font-family\", ctx.model.options.toolbar.fontFamily)(\"font-color\", ctx.helper.val(ctx.model.options.toolbar.fontColor))(\"display\", ctx.model.controls.dashboardsPanel.visible ? \"\" : \"none\")(\"background\", ctx.dbsMode ? \"transparent\" : \"\")(\"border-color\", ctx.dbsMode ? \"transparent\" : \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleProp(\"padding-top\", ctx.model.options.toolbar.displayMode == \"Simple\" ? \"2px\" : \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"border\", ctx.model.options.toolbar.displayMode == \"Separated\" ? \"0px\" : \"\")(\"background\", ctx.dbsMode ? \"transparent\" : \"\")(\"border-color\", ctx.dbsMode ? \"transparent\" : \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵstyleProp(\"align\", ctx.model.options.appearance.rightToLeft ? \"right\" : ctx.model.options.toolbar.alignment == \"default\" ? \"left\" : ctx.model.options.toolbar.alignment);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.model.reportParams.dashboards);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.model.options.toolbar.showRefreshButton && ctx.model.options.toolbar.visible);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.model.options.toolbar.showParametersButton && ctx.model.options.toolbar.visible);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.model.options.toolbar.showOpenButton && ctx.model.options.toolbar.visible);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.model.options.toolbar.showDesignButton && ctx.model.options.toolbar.visible);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.model.options.toolbar.showFullScreenButton && ctx.model.options.toolbar.visible);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.model.options.toolbar.showSaveButton && ctx.model.options.toolbar.visible);\n      }\n    },\n    directives: [i7.NgForOf, i7.NgIf, DashboardButtonComponent, ButtonComponent],\n    encapsulation: 2\n  });\n  return DashboardsPanelComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet PageComponent = /*#__PURE__*/(() => {\n  class PageComponent {\n    constructor(model, controller) {\n      this.model = model;\n      this.controller = controller;\n      this.touchesLength = 0;\n      this.lastTouches = [{\n        x: 0,\n        y: 0,\n        time: 0\n      }, {\n        x: 0,\n        y: 0,\n        time: 0\n      }];\n      this.touchAllowPageAction = false;\n      this.touchAllowScroll = false;\n    }\n\n    ngOnInit() {}\n\n    ngAfterViewInit() {\n      const page = this.element.nativeElement;\n      page.innerHTML = this.pageAttributes.content;\n      this.pageAttributes.page = page; // Correct Watermark\n\n      if (this.pageAttributes.existsWatermark) {\n        page.style.position = 'relative';\n\n        for (const childNode of page.childNodes) {\n          if (childNode.className === 'stiWatermarkImage') {\n            childNode.style.width = 'auto';\n            childNode.style.height = 'auto';\n            break;\n          }\n        }\n      }\n\n      let reportDisplayMode = this.model.options.displayModeFromReport || this.model.options.appearance.reportDisplayMode;\n\n      if (reportDisplayMode == \"Div\" || reportDisplayMode == \"Span\") {\n        const childs = page.getElementsByClassName('StiPageContainer');\n\n        if (childs && childs.length > 0) {\n          const pageContainer = childs[0];\n          pageContainer.style.position = 'relative';\n\n          if (reportDisplayMode == \"Span\") {\n            pageContainer.style.margin = '0 1px'; // fix Chrome bug with SPAN position\n          }\n\n          page.style.width = this.pageWidth - this.margins[1] - this.margins[3] + 'px';\n          page.style.height = this.pageHeight - this.margins[0] - this.margins[2] + 'px';\n        }\n      }\n\n      this.element.nativeElement.pageAttributes = this.pageAttributes;\n      /*const pageHeight = this.pageHeight;\r\n      if (pageHeight !== 0) {\r\n        // fixed bug with long time execute\r\n        if (this.model.options.appearance.reportDisplayMode !== 'Table' && this.model.reportParams.viewMode !== 'SinglePage') {\r\n          setTimeout(() => {\r\n            const currentPageHeight = page.offsetHeight - this.margins[0] - this.margins[2];\r\n            if (this.reportPanel.maxHeights[pageHeight] == null || currentPageHeight > this.reportPanel.maxHeights[pageHeight]) {\r\n              this.reportPanel.maxHeights[pageHeight] = currentPageHeight;\r\n            }\r\n          });\r\n        } else {\r\n          const currentPageHeight = page.offsetHeight - this.margins[0] - this.margins[2];\r\n          if (this.reportPanel.maxHeights[pageHeight] === null || currentPageHeight > this.reportPanel.maxHeights[pageHeight]) {\r\n            this.reportPanel.maxHeights[pageHeight] = currentPageHeight;\r\n          }\r\n        }\r\n      }*/\n    }\n\n    get margins() {\n      const margins = [0, 0, 0, 0];\n\n      if (this.pageAttributes.margins) {\n        const marginsPx = this.pageAttributes.margins.split(' ');\n\n        for (let i = 0; i < marginsPx.length; i++) {\n          margins[i] = parseInt(marginsPx[i].replace('px', ''), 10);\n        }\n      }\n\n      return margins;\n    }\n\n    get pageWidth() {\n      const pageSizes = this.pageAttributes.sizes ? this.pageAttributes.sizes.split(';') : null;\n\n      if (pageSizes) {\n        return parseInt(pageSizes[0], 10);\n      }\n\n      return 0;\n    }\n\n    get pageHeight() {\n      const pageSizes = this.pageAttributes.sizes ? this.pageAttributes.sizes.split(';') : null;\n\n      if (pageSizes) {\n        return parseInt(pageSizes[1], 10);\n      }\n\n      return 0;\n    }\n\n    eventTouchStart(e) {\n      const reportPanel = this.model.controls.reportPanel.el.nativeElement;\n      this.touchAllowPageAction = this.touchesLength === 0 && Math.abs(reportPanel.offsetWidth - reportPanel.scrollWidth) <= 10;\n      this.touchAllowScroll = reportPanel.offsetWidth === reportPanel.scrollWidth;\n      this.touchesLength++;\n\n      if (this.touchAllowPageAction) {\n        this.touchStartX = parseInt(e.changedTouches[0].clientX, 10);\n        this.touchStartScrollY = reportPanel.scrollTop;\n      }\n    }\n\n    eventTouchMove(e) {\n      const reportPanel = this.model.controls.reportPanel.el.nativeElement;\n\n      if (this.touchAllowPageAction) {\n        this.lastTouches.shift();\n        this.lastTouches.push({\n          x: e.changedTouches[0].clientX,\n          y: e.changedTouches[0].clientY,\n          time: new Date().getTime()\n        });\n\n        if (this.touchAllowScroll && this.touchStartScrollY === reportPanel.scrollTop) {\n          this.touchPosX = Math.trunc(this.lastTouches[1].x - this.touchStartX);\n\n          if (scrollX === 0) {\n            this.element.nativeElement.style.transform = `translateX(${this.touchPosX}px)`;\n          }\n        }\n      }\n    }\n\n    eventTouchEnd(e) {\n      const reportPanel = this.model.controls.reportPanel.el.nativeElement;\n\n      if (this.touchesLength > 0) {\n        this.touchesLength--;\n      }\n\n      if (this.touchAllowPageAction && this.touchesLength === 0) {\n        const dX = this.lastTouches[1].x - this.lastTouches[0].x;\n        const dT = new Date().getTime() - this.lastTouches[1].time;\n\n        if (this.touchStartScrollY !== reportPanel.scrollTop || dX <= 0 && this.model.reportParams.pageNumber >= this.model.reportParams.pagesCount - 1 || dX >= 0 && this.model.reportParams.pageNumber <= 0) {\n          this.translateX(0);\n        } else if (dX < -5 && dT <= 14 && this.lastTouches[1].x < this.touchStartX || dX < 0 && this.touchPosX < -this.pageWidth / 3) {\n          this.controller.action({\n            name: 'NextPage'\n          });\n          this.translateX(-this.pageWidth);\n        } else if (dX > 5 && dT <= 14 && this.lastTouches[1].x > this.touchStartX || dX > 0 && this.touchPosX > this.pageWidth / 3) {\n          this.controller.action({\n            name: 'PrevPage'\n          });\n          this.translateX(this.pageWidth);\n        } else {\n          this.translateX(0);\n        }\n      }\n    }\n\n    translateX(value) {\n      this.element.nativeElement.style.transitionDuration = '300ms';\n      this.element.nativeElement.style.transform = value === 0 ? '' : `translateX(${value}px)`;\n      setTimeout(() => {\n        this.element.nativeElement.style.transitionDuration = '';\n      }, 300);\n    }\n\n  }\n\n  PageComponent.ɵfac = function PageComponent_Factory(t) {\n    return new (t || PageComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(ControllerService));\n  };\n\n  PageComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: PageComponent,\n    selectors: [[\"sti-page\"]],\n    viewQuery: function PageComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.element = _t.first);\n      }\n    },\n    inputs: {\n      pageAttributes: \"pageAttributes\"\n    },\n    decls: 2,\n    vars: 16,\n    consts: [[2, \"overflow\", \"hidden\", \"text-align\", \"left\", \"vertical-align\", \"top\", \"color\", \"#000000\", \"box-sizing\", \"content-box\", \"display\", \"inline-block\", 3, \"touchstart\", \"touchmove\", \"touchend\"], [\"element\", \"\"]],\n    template: function PageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵlistener(\"touchstart\", function PageComponent_Template_div_touchstart_0_listener($event) {\n          return ctx.eventTouchStart($event);\n        })(\"touchmove\", function PageComponent_Template_div_touchmove_0_listener($event) {\n          return ctx.eventTouchMove($event);\n        })(\"touchend\", function PageComponent_Template_div_touchend_0_listener($event) {\n          return ctx.eventTouchEnd($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.model.options.appearance.showPageShadow ? \"stiJsViewerPageShadow\" : \"stiJsViewerPage\");\n        i0.ɵɵstyleProp(\"margin\", ctx.model.reportParams.viewMode === \"Continuous\" ? \"10px auto 10px auto\" : \"10px\")(\"display\", ctx.model.reportParams.viewMode === \"Continuous\" ? \"table\" : \"inline-block\")(\"border\", \"1px solid \" + ctx.model.options.appearance.pageBorderColor)(\"background\", ctx.pageAttributes[\"background\"] == \"Transparent\" || ctx.pageAttributes.background == \"rgba(255,255,255,0)\" ? \"White\" : ctx.pageAttributes[\"background\"])(\"padding\", ctx.pageAttributes[\"margins\"])(\"width\", !ctx.pageAttributes[\"content\"] ? ctx.pageWidth + \"px\" : \"\")(\"height\", !ctx.pageAttributes[\"content\"] ? ctx.pageHeight + \"px\" : \"\");\n      }\n    },\n    encapsulation: 2\n  });\n  return PageComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ReportPanelComponent = /*#__PURE__*/(() => {\n  class ReportPanelComponent {\n    constructor(controller, model, stylesService, interactionService) {\n      this.controller = controller;\n      this.model = model;\n      this.stylesService = stylesService;\n      this.interactionService = interactionService;\n      this.touchZoomFirstDistance = 0;\n      this.touchZoomSecondDistance = 0;\n      this.touchZoomValue = 0;\n      this.maxHeights = {};\n      controller.getMessage().subscribe(message => {\n        if (message.action !== 'viewer_loaded' && this.model.reportParams.pagesArray) {\n          if (this.model.reportParams.repaintOnlyDashboardContent) {// jsObject.controls.reportPanel.repaintDashboardContent(parameters);\n          } else {\n            this.loadPages();\n          }\n        }\n\n        if (message.action === 'GetReport' || message.action === 'OpenReport') {\n          setTimeout(() => {\n            if (!this.model.options.isParametersReceived && (this.model.reportParams.type === 'Report' && this.model.options.toolbar.showParametersButton || this.model.reportParams.type === 'Dashboard')) {\n              interactionService.postInteraction({\n                action: 'InitVars'\n              });\n            }\n\n            if (this.model.reportParams.autoZoom) {\n              this.controller.action({\n                name: this.model.reportParams.autoZoom === -1 ? 'ZoomPageWidth' : 'ZoomOnePage'\n              });\n              this.model.reportParams.autoZoom = null;\n            }\n          });\n        }\n      });\n    }\n\n    ngOnInit() {}\n\n    ngAfterViewInit() {\n      this.model.controls.reportPanel.el = this.element;\n    }\n\n    loadPages() {\n      this.maxHeights = {};\n      const pagesArray = this.model.reportParams.pagesArray;\n      this.stylesService.setupStyle(pagesArray[pagesArray.length - 2], 'page');\n      const chartScript = pagesArray[pagesArray.length - 1];\n      this.model.pages = pagesArray.slice(0, pagesArray.length - 2);\n      setTimeout(() => {\n        this.model.pages.forEach(page => this.interactionService.initializeInteractions(page.page));\n        this.interactionService.updateAllHyperLinks();\n        this.stylesService.addChartScript(chartScript);\n      });\n    }\n\n    get position() {\n      return this.model.options.heightType !== 'Percentage' || this.model.options.appearance.scrollbarsMode ? 'absolute' : 'relative';\n    }\n\n    scroll() {\n      if (this.model.pagesNavigationIsActive()) {\n        clearTimeout(this.scrollTimeout); // update current page number\n\n        this.scrollTimeout = setTimeout(() => {\n          let commonPagesHeight = 0;\n          let index = 0;\n\n          for (index = 0; index < this.model.pages.length; index++) {\n            commonPagesHeight += this.model.pages[index].page.offsetHeight + 10;\n\n            if (commonPagesHeight > this.element.nativeElement.scrollTop) {\n              break;\n            }\n          }\n\n          if (index < this.model.reportParams.pagesCount && index >= 0 && index !== this.model.reportParams.pageNumber) {\n            this.model.reportParams.pageNumber = index;\n          }\n        }, 300);\n      }\n    }\n\n    eventTouchStart(e) {\n      this.touchesLength++;\n      this.touchStartX = parseInt(e.changedTouches[0].clientX, 10);\n\n      if (this.model.options.appearance.allowTouchZoom && this.touchesLength === 1) {\n        this.touchZoomFirstDistance = 0;\n        this.touchZoomSecondDistance = 0;\n        this.touchZoomValue = 0;\n      }\n    }\n\n    eventTouchMove(e) {\n      if (this.model.options.appearance.allowTouchZoom && e.touches.length > 1) {\n        if ('preventDefault' in e) {\n          e.preventDefault();\n        }\n\n        this.touchZoomSecondDistance = Math.sqrt(Math.pow(e.touches[0].pageX - e.touches[1].pageX, 2) + Math.pow(e.touches[0].pageY - e.touches[1].pageY, 2));\n\n        if (this.touchZoomFirstDistance === 0) {\n          this.touchZoomFirstDistance = Math.sqrt(Math.pow(e.touches[0].pageX - e.touches[1].pageX, 2) + Math.pow(e.touches[0].pageY - e.touches[1].pageY, 2));\n        }\n\n        const touchZoomOffset = Math.trunc((this.touchZoomSecondDistance - this.touchZoomFirstDistance) / 2.5);\n\n        if (Math.abs(touchZoomOffset) >= 5) {\n          this.touchZoomValue = Math.trunc((this.model.reportParams.zoom + touchZoomOffset) / 5) * 5;\n          this.touchZoomValue = Math.min(Math.max(this.touchZoomValue, 20), 200);\n          this.controller.actionSubject.next({\n            action: 'centerText',\n            data: this.touchZoomValue.toString()\n          });\n        }\n      }\n    }\n\n    eventTouchEnd(e) {\n      if (this.touchesLength > 0) {\n        this.touchesLength--;\n      }\n\n      if (this.model.options.isMobileDevice && this.model.options.toolbar.autoHide) {\n        if (Math.trunc(this.touchStartX - e.changedTouches[0].clientX) !== 0) {\n          this.controller.keepToolbar();\n        } else {\n          if (!this.model.controls.toolbar.visible) {\n            this.controller.showToolbar();\n          } else {\n            this.controller.hideToolbar();\n          }\n        }\n      }\n\n      if (this.model.options.appearance.allowTouchZoom && this.touchZoomValue !== 0 && this.touchesLength === 0) {\n        this.controller.actionSubject.next({\n          action: 'hideCenterText'\n        });\n        this.model.reportParams.zoom = this.touchZoomValue;\n        this.controller.post('GetPages');\n      }\n    }\n\n  }\n\n  ReportPanelComponent.ɵfac = function ReportPanelComponent_Factory(t) {\n    return new (t || ReportPanelComponent)(i0.ɵɵdirectiveInject(ControllerService), i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(StylesService), i0.ɵɵdirectiveInject(InteractionsService));\n  };\n\n  ReportPanelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ReportPanelComponent,\n    selectors: [[\"sti-report-panel\"]],\n    viewQuery: function ReportPanelComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.element = _t.first);\n      }\n    },\n    decls: 3,\n    vars: 23,\n    consts: [[1, \"stiJsViewerReportPanel\", 3, \"scroll\", \"touchstart\", \"touchmove\", \"touchend\"], [\"element\", \"\"], [3, \"pageAttributes\", 4, \"ngFor\", \"ngForOf\"], [3, \"pageAttributes\"]],\n    template: function ReportPanelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵlistener(\"scroll\", function ReportPanelComponent_Template_div_scroll_0_listener() {\n          return ctx.scroll();\n        })(\"touchstart\", function ReportPanelComponent_Template_div_touchstart_0_listener($event) {\n          return ctx.eventTouchStart($event);\n        })(\"touchmove\", function ReportPanelComponent_Template_div_touchmove_0_listener($event) {\n          return ctx.eventTouchMove($event);\n        })(\"touchend\", function ReportPanelComponent_Template_div_touchend_0_listener($event) {\n          return ctx.eventTouchEnd($event);\n        });\n        i0.ɵɵtemplate(2, ReportPanelComponent_sti_page_2_Template, 1, 1, \"sti-page\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"text-align\", ctx.model.options.appearance.pageAlignment == \"default\" ? \"center\" : ctx.model.options.appearance.pageAlignment)(\"top\", 0)(\"bottom\", 0)(\"position\", ctx.position)(\"height\", ctx.model.options.heightType != \"Percentage\" || ctx.model.options.appearance.scrollbarsMode ? \"auto\" : \"calc(100% - 35px)\")(\"overflow\", ctx.model.reportParams.type == \"Report\" && ctx.model.options.appearance.scrollbarsMode ? \"auto\" : \"hidden\")(\"margin-top\", ctx.model.controls.reportPanel.layout.top, \"px\")(\"margin-left\", ctx.model.controls.reportPanel.layout.left, \"px\")(\"margin-bottom\", ctx.position == \"absolute\" ? ctx.model.controls.reportPanel.layout.bottom : 0, \"px\")(\"padding-bottom\", ctx.position == \"relative\" ? ctx.model.controls.reportPanel.layout.bottom : 0, \"px\")(\"transition\", ctx.model.options.isMobileDevice ? \"margin 200ms ease\" : null);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.model.pages);\n      }\n    },\n    directives: [i7.NgForOf, PageComponent],\n    encapsulation: 2\n  });\n  return ReportPanelComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ProgressComponent = /*#__PURE__*/(() => {\n  class ProgressComponent {\n    constructor(model) {\n      this.model = model;\n    }\n\n    ngOnInit() {}\n\n  }\n\n  ProgressComponent.ɵfac = function ProgressComponent_Factory(t) {\n    return new (t || ProgressComponent)(i0.ɵɵdirectiveInject(ModelService));\n  };\n\n  ProgressComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ProgressComponent,\n    selectors: [[\"sti-progress\"]],\n    decls: 2,\n    vars: 4,\n    consts: [[2, \"position\", \"absolute\", \"z-index\", \"1000\", \"left\", \"calc(50% - 35px)\"], [1, \"js_viewer_loader\", \"js_viewer_loader_default\"]],\n    template: function ProgressComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"top\", ctx.model.options.appearance.fullScreenMode ? \"calc(50% - 100px)\" : \"250px\")(\"display\", ctx.model.showProgress ? \"\" : \"none\");\n      }\n    },\n    encapsulation: 2\n  });\n  return ProgressComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TextBlockComponent = /*#__PURE__*/(() => {\n  class TextBlockComponent {\n    constructor(model) {\n      this.model = model;\n    }\n\n    ngOnInit() {}\n\n  }\n\n  TextBlockComponent.ɵfac = function TextBlockComponent_Factory(t) {\n    return new (t || TextBlockComponent)(i0.ɵɵdirectiveInject(ModelService));\n  };\n\n  TextBlockComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TextBlockComponent,\n    selectors: [[\"sti-text-block\"]],\n    inputs: {\n      text: \"text\",\n      margin: \"margin\"\n    },\n    decls: 2,\n    vars: 6,\n    template: function TextBlockComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction2(3, _c9, ctx.model.options.toolbar.fontFamily, ctx.margin));\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.text || \"\", \" \");\n      }\n    },\n    encapsulation: 2\n  });\n  return TextBlockComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet FindPanelComponent = /*#__PURE__*/(() => {\n  class FindPanelComponent {\n    constructor(model, findService, controller) {\n      this.model = model;\n      this.findService = findService;\n      this.controller = controller;\n      this.changeFind = false;\n      this.initItems();\n      controller.getMessage().subscribe(message => {\n        switch (message.action) {\n          case 'GetReport':\n          case 'GetPages':\n          case 'OpenReport':\n          case 'Variables':\n            if (model.controls.findPanel.visible) {\n              setTimeout(() => {\n                this.findService.hideFindLabels();\n                this.find('Next');\n              });\n            }\n\n            break;\n        }\n      });\n    }\n\n    ngAfterViewInit() {\n      this.model.controls.findPanel.el = this.element;\n      this.model.controls.findPanel.getVisibility().subscribe(() => {\n        if (this.model.controls.findPanel.visible) {\n          this.findService.text = '';\n          setTimeout(() => {\n            this.textBox.element.nativeElement.focus();\n          });\n        }\n      });\n    }\n\n    ngOnInit() {}\n\n    selected(item) {\n      switch (item.action) {\n        case 'MatchCase':\n          return this.findService.matchCase;\n\n        case 'MatchWholeWord':\n          return this.findService.matchWholeWord;\n      }\n\n      return false;\n    }\n\n    textBoxAction(target) {\n      this.findService.text = target.value;\n      this.find('Next');\n    }\n\n    find(direction) {\n      if (this.findService.text === '') {\n        this.findService.hideFindLabels();\n        return;\n      }\n\n      if (this.findService.lastFindText !== this.findService.text || this.changeFind) {\n        this.changeFind = false;\n        this.findService.showFindLabels();\n      } else {\n        this.findService.selectFindLabel(direction);\n      }\n    }\n\n    initItems() {\n      this.items = [{\n        type: 'button',\n        action: 'close',\n        img: 'CloseForm.png',\n        margin: '2px'\n      }, {\n        type: 'textBlock',\n        action: 'text',\n        caption: this.model.loc('FindWhat').replace(\":\", \"\"),\n        margin: '2px'\n      }, {\n        type: 'textBox',\n        action: 'findTextBox',\n        margin: '2px'\n      }, {\n        type: 'button',\n        action: 'FindPreviows',\n        caption: this.model.loc('FindPrevious'),\n        img: 'Arrows.ArrowUpBlue.png',\n        margin: '2px'\n      }, {\n        type: 'button',\n        action: 'FindNext',\n        caption: this.model.loc('FindNext'),\n        img: 'Arrows.ArrowDownBlue.png',\n        margin: '2px'\n      }, {\n        type: 'button',\n        action: 'MatchCase',\n        caption: this.model.loc('MatchCase').replace('&', ''),\n        margin: '2px'\n      }, {\n        type: 'button',\n        action: 'MatchWholeWord',\n        caption: this.model.loc('MatchWholeWord').replace('&', ''),\n        margin: '2px'\n      }];\n    }\n\n    action(action) {\n      switch (action) {\n        case 'close':\n          this.model.controls.findPanel.visible = false;\n          break;\n\n        case 'MatchCase':\n          this.findService.matchCase = !this.findService.matchCase;\n          this.changeFind = true;\n          break;\n\n        case 'MatchWholeWord':\n          this.findService.matchWholeWord = !this.findService.matchWholeWord;\n          this.changeFind = true;\n          break;\n\n        case 'FindPreviows':\n          this.findService.text = this.textBox.element.nativeElement.value;\n          this.find('Previous');\n          break;\n\n        case 'FindNext':\n          this.findService.text = this.textBox.element.nativeElement.value;\n          this.find('Next');\n          break;\n      }\n    }\n\n  }\n\n  FindPanelComponent.ɵfac = function FindPanelComponent_Factory(t) {\n    return new (t || FindPanelComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(FindService), i0.ɵɵdirectiveInject(ControllerService));\n  };\n\n  FindPanelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: FindPanelComponent,\n    selectors: [[\"sti-find-panel\"]],\n    viewQuery: function FindPanelComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c10, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.element = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textBox = _t.first);\n      }\n    },\n    decls: 8,\n    vars: 9,\n    consts: [[\"element\", \"\"], [1, \"stiJsViewerToolBarTable\", 2, \"box-sizing\", \"border-box\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\", 2, \"margin\", \"0\"], [1, \"stiJsViewerClearAllStyles\"], [\"class\", \"stiJsViewerClearAllStyles\", 4, \"ngFor\", \"ngForOf\"], [3, \"actionName\", \"imageName\", \"caption\", \"margin\", \"height\", \"selected\", \"action\", 4, \"ngIf\"], [3, \"width\", \"margin\", \"focusOnCreate\", \"value\", \"action\", 4, \"ngIf\"], [3, \"margin\", \"text\", 4, \"ngIf\"], [3, \"actionName\", \"imageName\", \"caption\", \"margin\", \"height\", \"selected\", \"action\"], [3, \"width\", \"margin\", \"focusOnCreate\", \"value\", \"action\"], [\"textBox\", \"\"], [3, \"margin\", \"text\"]],\n    template: function FindPanelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", null, 0);\n        i0.ɵɵelementStart(2, \"div\");\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵelementStart(4, \"table\", 2);\n        i0.ɵɵelementStart(5, \"tbody\");\n        i0.ɵɵelementStart(6, \"tr\", 3);\n        i0.ɵɵtemplate(7, FindPanelComponent_td_7_Template, 4, 3, \"td\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassMap(\"stiJsViewerToolBar\" + (ctx.model.options.toolbar.displayMode == \"Separated\" ? \" stiJsViewerToolBarSeparated\" : \"\"));\n        i0.ɵɵstyleProp(\"display\", ctx.model.controls.findPanel.visible ? \"\" : \"none\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleProp(\"padding-top\", ctx.model.options.toolbar.displayMode == \"Simple\" ? \"2px\" : \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"border\", ctx.model.options.toolbar.displayMode == \"Separated\" ? \"0px\" : \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.items);\n      }\n    },\n    directives: [i7.NgForOf, i7.NgIf, ButtonComponent, TextBoxComponent, TextBlockComponent],\n    encapsulation: 2\n  });\n  return FindPanelComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet DrillDownPanelComponent = /*#__PURE__*/(() => {\n  class DrillDownPanelComponent {\n    constructor(model, drillDownService, controller) {\n      this.model = model;\n      this.drillDownService = drillDownService;\n      this.controller = controller;\n      controller.getMessage().subscribe(message => {\n        if ((message === null || message === void 0 ? void 0 : message.action) === 'DrillDown' && this.element) {\n          this.element.nativeElement.scrollTop = 0;\n        }\n      });\n    }\n\n    ngOnInit() {}\n\n    ngAfterViewInit() {\n      this.model.controls.drillDownPanel.el = this.element;\n    }\n\n    action(button) {\n      this.drillDownService.saveState();\n      this.model.drillDownButtons.forEach(b => b.selected = false);\n      button.selected = true;\n      this.model.setReportParams(button.reportParams);\n      this.element.nativeElement.scrollTop = 0;\n      this.controller.getPages();\n    }\n\n    close(button) {\n      this.model.drillDownButtons.splice(this.model.drillDownButtons.indexOf(button), 1);\n      button.visible = false;\n\n      if (button.selected) {\n        this.action(this.model.drillDownButtons[0]);\n      }\n    }\n\n  }\n\n  DrillDownPanelComponent.ɵfac = function DrillDownPanelComponent_Factory(t) {\n    return new (t || DrillDownPanelComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(DrillDownService), i0.ɵɵdirectiveInject(ControllerService));\n  };\n\n  DrillDownPanelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DrillDownPanelComponent,\n    selectors: [[\"sti-drill-down-panel\"]],\n    viewQuery: function DrillDownPanelComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.element = _t.first);\n      }\n    },\n    decls: 11,\n    vars: 13,\n    consts: [[\"element\", \"\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerToolBarTable\", 2, \"margin\", \"0px\", \"box-sizing\", \"border-box\"], [1, \"stiJsViewerClearAllStyles\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\"], [\"class\", \"stiJsViewerClearAllStyles\", \"style\", \"padding: 0px; border: 0px; line-height: 0;\", 4, \"ngFor\", \"ngForOf\"], [1, \"stiJsViewerClearAllStyles\", 2, \"padding\", \"0px\", \"border\", \"0px\", \"line-height\", \"0\"], [3, \"display\", \"margin\", \"caption\", \"height\", \"selected\", \"closeButton\", \"action\", \"closeButtonAction\"]],\n    template: function DrillDownPanelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", null, 0);\n        i0.ɵɵelementStart(2, \"div\");\n        i0.ɵɵelementStart(3, \"table\", 1);\n        i0.ɵɵelementStart(4, \"tbody\");\n        i0.ɵɵelementStart(5, \"tr\", 2);\n        i0.ɵɵelementStart(6, \"td\", 2);\n        i0.ɵɵelementStart(7, \"table\", 3);\n        i0.ɵɵelementStart(8, \"tbody\");\n        i0.ɵɵelementStart(9, \"tr\", 2);\n        i0.ɵɵtemplate(10, DrillDownPanelComponent_td_10_Template, 2, 7, \"td\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassMap(\"stiJsViewerToolBar\" + (ctx.model.options.toolbar.displayMode == \"Separated\" ? \" stiJsViewerToolBarSeparated\" : \"\"));\n        i0.ɵɵstyleProp(\"display\", ctx.model.controls.drillDownPanel.visible ? \"\" : \"none\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleProp(\"padding-top\", ctx.model.options.toolbar.displayMode == \"Simple\" ? \"2px\" : \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"border\", ctx.model.options.toolbar.displayMode == \"Separated\" ? \"0px\" : \"\")(\"color\", ctx.model.options.toolbar.fontColor)(\"font-family\", ctx.model.options.toolbar.fontFamily);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.model.drillDownButtons);\n      }\n    },\n    directives: [i7.NgForOf, ButtonComponent],\n    encapsulation: 2\n  });\n  return DrillDownPanelComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ResourcesPanelComponent = /*#__PURE__*/(() => {\n  class ResourcesPanelComponent {\n    constructor(model, controller, helper) {\n      this.model = model;\n      this.controller = controller;\n      this.helper = helper;\n      controller.getMessage().subscribe(message => {\n        var _a;\n\n        if (message.action === 'GetReport' || message.action === 'OpenReport') {\n          this.model.controls.resourcesPanel.visible = ((_a = this.model.reportParams.resources) === null || _a === void 0 ? void 0 : _a.length) > 0;\n        }\n      });\n    }\n\n    ngOnInit() {}\n\n    ngAfterViewInit() {\n      this.model.controls.resourcesPanel.el = this.element;\n    }\n\n    action(resource) {\n      const resTypesAllowedViewInBrowser = ['Image', 'Pdf', 'Txt'];\n      const viewType = resTypesAllowedViewInBrowser.indexOf(resource.type) >= 0 ? 'View' : 'SaveFile';\n      this.controller.postReportResource(resource.name, this.model.options.jsMode ? 'SaveFile' : viewType);\n    }\n\n    getResourceImage(resourceType) {\n      if (this.model.img('BigResource' + resourceType + '.png') !== '') {\n        return 'BigResource' + resourceType + '.png';\n      } else {\n        return 'BigResource.png';\n      }\n    }\n\n    getMenuItems(resource) {\n      const items = [];\n      items.push({\n        name: 'Resource' + 'View',\n        caption: this.model.loc('ButtonView'),\n        value: resource\n      });\n      items.push({\n        name: 'Resource' + 'SaveFile',\n        caption: this.model.loc('SaveFile'),\n        value: resource\n      });\n      return items;\n    }\n\n    getActionName(resource) {\n      if (!resource.id) {\n        resource.id = Math.random().toString();\n      }\n\n      return 'resource' + resource.name + resource.id;\n    }\n\n  }\n\n  ResourcesPanelComponent.ɵfac = function ResourcesPanelComponent_Factory(t) {\n    return new (t || ResourcesPanelComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(ControllerService), i0.ɵɵdirectiveInject(HelperService));\n  };\n\n  ResourcesPanelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ResourcesPanelComponent,\n    selectors: [[\"sti-resources-panel\"]],\n    viewQuery: function ResourcesPanelComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.element = _t.first);\n      }\n    },\n    decls: 8,\n    vars: 13,\n    consts: [[2, \"z-index\", \"3\"], [\"element\", \"\"], [1, \"stiJsViewerToolBarTable\", 2, \"box-sizing\", \"border-box\", \"display\", \"table\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\"], [1, \"stiJsViewerClearAllStyles\"], [\"class\", \"stiJsViewerClearAllStyles\", 4, \"ngFor\", \"ngForOf\"], [3, \"caption\", \"caption2\", \"imageName\", \"styleName\", \"height\", \"margin\", \"innerTableWidth\", \"minWidth\", \"captionAlign\", \"captionPaddingLeft\", \"captionMaxWidth\", \"captionLineHeight\", \"captionWhiteSpace\", \"captionOverflow\", \"captionTextOverflow\", \"imageCellWidth\", \"imageCellPadding\", \"menuItems\", \"resourceButton\", \"imageSizesWidth\", \"imageSizesHeight\", \"actionName\", \"action\"]],\n    template: function ResourcesPanelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵelementStart(2, \"div\");\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"table\", 3);\n        i0.ɵɵelementStart(5, \"tbody\");\n        i0.ɵɵelementStart(6, \"tr\", 4);\n        i0.ɵɵtemplate(7, ResourcesPanelComponent_td_7_Template, 2, 22, \"td\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassMap(\"stiJsViewerToolBar\" + (ctx.model.options.toolbar.displayMode == \"Separated\" ? \" stiJsViewerToolBarSeparated\" : \"\"));\n        i0.ɵɵstyleProp(\"display\", ctx.model.controls.resourcesPanel.visible ? \"\" : \"none\")(\"font-family\", ctx.model.options.toolbar.fontFamily)(\"font-color\", ctx.model.options.toolbar.fontColor);\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleProp(\"padding-top\", ctx.model.options.toolbar.displayMode == \"Simple\" ? \"2px\" : \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"border\", ctx.model.options.toolbar.displayMode == \"Separated\" ? \"0px\" : \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.model.reportParams.resources);\n      }\n    },\n    directives: [i7.NgForOf, ButtonComponent],\n    encapsulation: 2\n  });\n  return ResourcesPanelComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NavigatePanelComponent = /*#__PURE__*/(() => {\n  class NavigatePanelComponent {\n    constructor(model, controller, helper, pageService) {\n      this.model = model;\n      this.controller = controller;\n      this.helper = helper;\n      this.pageService = pageService;\n      this.comps = [];\n    }\n\n    ngOnInit() {\n      if (this.model.options.toolbar.displayMode === 'Separated') {\n        this.initButtons();\n      }\n\n      this.controller.getMessage().subscribe(message => {\n        if (message.action !== 'viewer_loaded') {\n          this.updateButtons();\n        }\n      });\n      this.model.controls.navigatePanel.visible = this.model.options.toolbar.displayMode === 'Separated';\n    }\n\n    ngAfterViewInit() {\n      this.model.controls.navigatePanel.el = this.element;\n    }\n\n    updateButtons() {\n      this.comps.filter(i => i.action === 'ViewMode').forEach(m => m.caption = this.model.loc(this.model.reportParams.viewMode));\n      this.comps.filter(i => i.action === 'Zoom').forEach(m => {\n        m.menuItems.forEach(n => n.selected = n.name === 'Zoom' + this.model.reportParams.zoom);\n        m.caption = Math.round(this.model.reportParams.zoom) + '%';\n      });\n      this.comps.filter(i => i.action === 'ShowFind').forEach(m => {\n        m.selected = this.model.controls.findPanel.visible;\n      });\n    }\n\n    initButtons() {\n      const comps = [];\n\n      if (this.model.options.toolbar.showFirstPageButton) {\n        comps.push({\n          type: 'button',\n          action: 'FirstPage',\n          img: 'PageFirst20.png',\n          tooltip: true\n        });\n      }\n\n      if (this.model.options.toolbar.showPreviousPageButton) {\n        comps.push({\n          type: 'button',\n          action: 'PrevPage',\n          img: 'PagePrevious20.png',\n          tooltip: true\n        });\n      }\n\n      if (this.model.options.toolbar.showCurrentPageControl) {\n        comps.push({\n          type: 'separator'\n        });\n        comps.push({\n          type: 'pageControl'\n        });\n        comps.push({\n          type: 'separator'\n        });\n      }\n\n      if (this.model.options.toolbar.showNextPageButton) {\n        comps.push({\n          type: 'button',\n          action: 'NextPage',\n          img: 'PageNext20.png',\n          tooltip: true\n        });\n      }\n\n      if (this.model.options.toolbar.showLastPageButton) {\n        comps.push({\n          type: 'button',\n          action: 'LastPage',\n          img: 'PageLast20.png',\n          tooltip: true\n        });\n      }\n\n      comps.push({\n        type: 'space'\n      });\n      comps.push({\n        type: 'button',\n        action: 'ZoomPageWidth',\n        img: 'ZoomPageWidth20.png',\n        tooltip: true\n      });\n      comps.push({\n        type: 'button',\n        action: 'ZoomOnePage',\n        img: 'ZoomOnePage20.png',\n        tooltip: true\n      });\n\n      if (this.model.options.toolbar.showZoomButton) {\n        comps.push({\n          type: 'separator'\n        });\n        comps.push({\n          type: 'button',\n          action: 'Zoom',\n          caption: '100%',\n          tooltip: true,\n          arrow: 'Arrows.SmallArrowUpWhite.png',\n          menuItems: this.helper.getZoomMenuItems()\n        });\n      }\n\n      this.comps = comps;\n    }\n\n    enabled(desc) {\n      const disableNaviButtons = this.disableNaviButtons();\n\n      switch (desc.action) {\n        case 'FirstPage':\n        case 'PrevPage':\n          return this.model.reportParams.pageNumber > 0 && !disableNaviButtons;\n\n        case 'NextPage':\n        case 'LastPage':\n          return this.model.reportParams.pageNumber < this.model.reportParams.pagesCount - 1 && !disableNaviButtons;\n      }\n\n      return true;\n    }\n\n    selected(desc) {\n      switch (desc.action) {\n        case 'ZoomPageWidth':\n          return Math.round(this.model.reportParams.zoom) === Math.round(this.pageService.getZoomByPageWidth());\n\n        case 'ZoomOnePage':\n          return Math.round(this.model.reportParams.zoom) === Math.round(this.pageService.getZoomByPageHeight());\n      }\n\n      return false;\n    }\n\n    disableNaviButtons() {\n      return this.model.reportParams.viewMode === 'MultiplePages' || this.model.reportParams.viewMode === 'WholeReport' || this.model.reportParams.viewMode === 'Continuous' && !this.model.options.appearance.scrollbarsMode && !this.model.options.appearance.fullScreenMode;\n    }\n\n  }\n\n  NavigatePanelComponent.ɵfac = function NavigatePanelComponent_Factory(t) {\n    return new (t || NavigatePanelComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(ControllerService), i0.ɵɵdirectiveInject(HelperService), i0.ɵɵdirectiveInject(PageService));\n  };\n\n  NavigatePanelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NavigatePanelComponent,\n    selectors: [[\"sti-navigate-panel\"]],\n    viewQuery: function NavigatePanelComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.element = _t.first);\n      }\n    },\n    decls: 7,\n    vars: 13,\n    consts: [[1, \"stiJsViewerNavigatePanel\", 2, \"display\", \"block\"], [\"element\", \"\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\"], [1, \"stiJsViewerClearAllStyles\"], [\"class\", \"stiJsViewerClearAllStyles\", 3, \"width\", 4, \"ngFor\", \"ngForOf\"], [1, \"stiJsViewerNavigatePanelDisabledPanel\"], [3, \"caption\", \"imageName\", \"arrow\", \"menuItems\", \"actionName\", \"tooltip\", \"styleName\", \"height\", \"width\", \"boxSizing\", \"arrowMarginTop\", \"enabled\", \"imageCellTextAlign\", \"innerTableWidth\", \"navagationPanelTooltip\", \"margin\", \"selected\", \"action\", 4, \"ngIf\"], [\"class\", \"stiJsViewerNavigatePanelSeparator\", 3, \"height\", \"margin\", 4, \"ngIf\"], [3, \"enabled\", \"count\", \"margin\", \"textBoxBorder\", 4, \"ngIf\"], [3, \"caption\", \"imageName\", \"arrow\", \"menuItems\", \"actionName\", \"tooltip\", \"styleName\", \"height\", \"width\", \"boxSizing\", \"arrowMarginTop\", \"enabled\", \"imageCellTextAlign\", \"innerTableWidth\", \"navagationPanelTooltip\", \"margin\", \"selected\", \"action\"], [1, \"stiJsViewerNavigatePanelSeparator\"], [3, \"enabled\", \"count\", \"margin\", \"textBoxBorder\"]],\n    template: function NavigatePanelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵelementStart(2, \"table\", 2);\n        i0.ɵɵelementStart(3, \"tbody\");\n        i0.ɵɵelementStart(4, \"tr\", 3);\n        i0.ɵɵtemplate(5, NavigatePanelComponent_td_5_Template, 4, 5, \"td\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"div\", 5);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"display\", !ctx.model.options.isMobileDevice ? ctx.model.controls.navigatePanel.visible ? \"\" : \"none\" : \"\")(\"transition\", ctx.model.options.isMobileDevice ? \"margin 300ms ease, opacity 300ms ease\" : null)(\"z-index\", ctx.model.options.isMobileDevice ? ctx.model.options.toolbar.autoHide ? 5 : 2 : null)(\"opacity\", ctx.model.options.isMobileDevice ? ctx.model.controls.navigatePanel.visible ? ctx.model.options.toolbar.autoHide ? 0.9 : 1 : 0 : 1)(\"margin-bottom\", ctx.model.options.isMobileDevice && !ctx.model.controls.navigatePanel.visible ? \"-0.55in\" : 0);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.comps);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"display\", ctx.model.controls.navigatePanel.enabled ? \"none\" : \"block\");\n      }\n    },\n    directives: [i7.NgForOf, i7.NgIf, ButtonComponent, PageControlComponent],\n    encapsulation: 2\n  });\n  return NavigatePanelComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet FormButtonComponent = /*#__PURE__*/(() => {\n  class FormButtonComponent {\n    constructor() {\n      this.captionAlign = 'center';\n      this.action = new EventEmitter();\n    }\n\n    ngOnInit() {}\n\n    onaction(event) {\n      this.action.emit(event);\n    }\n\n  }\n\n  FormButtonComponent.ɵfac = function FormButtonComponent_Factory(t) {\n    return new (t || FormButtonComponent)();\n  };\n\n  FormButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: FormButtonComponent,\n    selectors: [[\"sti-form-button\"]],\n    inputs: {\n      caption: \"caption\",\n      actionName: \"actionName\",\n      imageName: \"imageName\",\n      imageCellWidth: \"imageCellWidth\",\n      captionPadding: \"captionPadding\",\n      margin: \"margin\",\n      captionAlign: \"captionAlign\"\n    },\n    outputs: {\n      action: \"action\"\n    },\n    decls: 1,\n    vars: 10,\n    consts: [[3, \"styleName\", \"caption\", \"actionName\", \"captionAlign\", \"innerTableWidth\", \"minWidth\", \"imageName\", \"imageCellWidth\", \"captionPadding\", \"margin\", \"action\"]],\n    template: function FormButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"sti-button\", 0);\n        i0.ɵɵlistener(\"action\", function FormButtonComponent_Template_sti_button_action_0_listener($event) {\n          return ctx.onaction($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"styleName\", \"stiJsViewerFormButton\")(\"caption\", ctx.caption)(\"actionName\", ctx.actionName)(\"captionAlign\", ctx.captionAlign)(\"innerTableWidth\", \"100%\")(\"minWidth\", \"80px\")(\"imageName\", ctx.imageName)(\"imageCellWidth\", ctx.imageCellWidth)(\"captionPadding\", ctx.captionPadding)(\"margin\", ctx.margin);\n      }\n    },\n    directives: [ButtonComponent],\n    encapsulation: 2\n  });\n  return FormButtonComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet BaseFormComponent = /*#__PURE__*/(() => {\n  class BaseFormComponent {\n    constructor(model, helper, formService) {\n      this.model = model;\n      this.helper = helper;\n      this.formService = formService;\n      this.changeVisibility = new EventEmitter();\n      this.action = new EventEmitter();\n      this.level = 1;\n      this.showCancel = true;\n      this.showButtons = true;\n      this.showSeparator = true;\n      this.display = 'none';\n    }\n\n    ngOnInit() {}\n\n    startAnimation(event) {\n      if (event.toState === 'visible') {\n        this.display = '';\n\n        if (this.defaultTop != null) {\n          this.formService.centerForm(this, this.defaultTop);\n        }\n      }\n    }\n\n    doneAnimation(event) {\n      if (event.toState === 'hidden') {\n        this.display = 'none';\n      }\n\n      this.changeVisibility.emit(event.toState);\n    }\n\n  }\n\n  BaseFormComponent.ɵfac = function BaseFormComponent_Factory(t) {\n    return new (t || BaseFormComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(HelperService), i0.ɵɵdirectiveInject(FormService));\n  };\n\n  BaseFormComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: BaseFormComponent,\n    selectors: [[\"sti-base-form\"]],\n    viewQuery: function BaseFormComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.element = _t.first);\n      }\n    },\n    inputs: {\n      level: \"level\",\n      caption: \"caption\",\n      helpUrl: \"helpUrl\",\n      fontFamily: \"fontFamily\",\n      color: \"color\",\n      fontSize: \"fontSize\",\n      containerPadding: \"containerPadding\",\n      name: \"name\",\n      defaultTop: \"defaultTop\",\n      showCancel: \"showCancel\",\n      showButtons: \"showButtons\",\n      showSeparator: \"showSeparator\"\n    },\n    outputs: {\n      changeVisibility: \"changeVisibility\",\n      action: \"action\"\n    },\n    ngContentSelectors: _c11,\n    decls: 15,\n    vars: 25,\n    consts: [[1, \"stiJsViewerForm\"], [\"element\", \"\"], [1, \"stiJsViewerFormHeader\", 3, \"mousedown\", \"touchstart\", \"touchmove\", \"touchend\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\", 2, \"width\", \"100%\"], [1, \"stiJsViewerClearAllStyles\"], [1, \"stiJsViewerClearAllStyles\", 2, \"text-align\", \"left\", \"padding\", \"5px 10px 8px 15px\"], [\"class\", \"stiJsViewerClearAllStyles\", \"style\", \"width: 20px; text-align: right; padding: 2px 0px 1px 0px; vertical-align: top;\", 4, \"ngIf\"], [1, \"stiJsViewerClearAllStyles\", 2, \"vertical-align\", \"top\", \"width\", \"30px\", \"text-align\", \"right\", \"padding\", \"2px 1px 1px\"], [3, \"imageMargin\", \"display\", \"imageName\", \"action\"], [1, \"stiJsViewerFormContainer\"], [\"class\", \"stiJsViewerFormSeparator\", 4, \"ngIf\"], [\"class\", \"stiJsViewerFormButtonsPanel\", 4, \"ngIf\"], [1, \"stiJsViewerClearAllStyles\", 2, \"width\", \"20px\", \"text-align\", \"right\", \"padding\", \"2px 0px 1px 0px\", \"vertical-align\", \"top\"], [3, \"imageMargin\", \"display\", \"action\"], [1, \"stiJsViewerFormSeparator\"], [1, \"stiJsViewerFormButtonsPanel\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\"], [1, \"stiJsViewerClearAllStyles\", 2, \"padding\", \"8px\"], [3, \"caption\", \"action\"], [\"class\", \"stiJsViewerClearAllStyles\", \"style\", \"padding: 8px 8px 8px 0px;\", 4, \"ngIf\"], [1, \"stiJsViewerClearAllStyles\", 2, \"padding\", \"8px 8px 8px 0px\"]],\n    template: function BaseFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵlistener(\"@showForm.start\", function BaseFormComponent_Template_div_animation_showForm_start_0_listener($event) {\n          return ctx.startAnimation($event);\n        })(\"@showForm.done\", function BaseFormComponent_Template_div_animation_showForm_done_0_listener($event) {\n          return ctx.doneAnimation($event);\n        });\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵlistener(\"mousedown\", function BaseFormComponent_Template_div_mousedown_2_listener($event) {\n          return ctx.formService.startMove(ctx.name, $event);\n        })(\"touchstart\", function BaseFormComponent_Template_div_touchstart_2_listener($event) {\n          return ctx.formService.startMove(ctx.name, null, $event);\n        })(\"touchmove\", function BaseFormComponent_Template_div_touchmove_2_listener($event) {\n          return ctx.formService.move($event);\n        })(\"touchend\", function BaseFormComponent_Template_div_touchend_2_listener() {\n          return ctx.formService.stopMove();\n        });\n        i0.ɵɵelementStart(3, \"table\", 3);\n        i0.ɵɵelementStart(4, \"tbody\");\n        i0.ɵɵelementStart(5, \"tr\", 4);\n        i0.ɵɵelementStart(6, \"td\", 5);\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, BaseFormComponent_td_8_Template, 2, 2, \"td\", 6);\n        i0.ɵɵelementStart(9, \"td\", 7);\n        i0.ɵɵelementStart(10, \"sti-button\", 8);\n        i0.ɵɵlistener(\"action\", function BaseFormComponent_Template_sti_button_action_10_listener() {\n          return ctx.formService.closeForm(ctx.name);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 9);\n        i0.ɵɵprojection(12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, BaseFormComponent_div_13_Template, 1, 0, \"div\", 10);\n        i0.ɵɵtemplate(14, BaseFormComponent_div_14_Template, 7, 2, \"div\", 11);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"z-index\", ctx.level * 10 + 1)(\"font-family\", ctx.fontFamily)(\"color\", ctx.color)(\"font-size\", ctx.fontSize)(\"left\", ctx.formService.form == null ? null : ctx.formService.form.left, \"px\")(\"top\", ctx.formService.form == null ? null : ctx.formService.form.top, \"px\")(\"display\", ctx.display);\n        i0.ɵɵproperty(\"@.disabled\", !ctx.model.options.toolbar.menuAnimation)(\"@showForm\", (ctx.formService.form == null ? null : ctx.formService.form.name) == ctx.name ? \"visible\" : \"hidden\");\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\" \", ctx.caption, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.helpUrl != null && ctx.model.options.appearance.showDialogsHelp);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"imageMargin\", \"0 2px 0 2px\")(\"display\", \"inline-block\")(\"imageName\", \"CloseForm.png\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"padding\", ctx.containerPadding);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSeparator);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showButtons);\n      }\n    },\n    directives: [i7.NgIf, ButtonComponent, FormButtonComponent],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('showForm', [state('hidden', style({\n        opacity: '0'\n      })), state('visible', style({\n        opacity: '1'\n      })), transition('hidden => visible', [animate('200ms ease-in-out')])])]\n    }\n  });\n  return BaseFormComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet GroupPanelComponent = /*#__PURE__*/(() => {\n  class GroupPanelComponent {\n    constructor(model) {\n      this.model = model;\n      this.opened = false;\n      this.action = new EventEmitter();\n      this.display = 'none';\n    }\n\n    ngOnInit() {}\n\n    startAnimation(event) {\n      if (event.toState === 'opened') {\n        this.display = '';\n      }\n    }\n\n    doneAnimation(event) {\n      if (event.toState === 'closed') {\n        this.display = 'none';\n      }\n    }\n\n  }\n\n  GroupPanelComponent.ɵfac = function GroupPanelComponent_Factory(t) {\n    return new (t || GroupPanelComponent)(i0.ɵɵdirectiveInject(ModelService));\n  };\n\n  GroupPanelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: GroupPanelComponent,\n    selectors: [[\"sti-group-panel\"]],\n    inputs: {\n      width: \"width\",\n      caption: \"caption\",\n      innerPadding: \"innerPadding\",\n      opened: \"opened\",\n      margin: \"margin\"\n    },\n    outputs: {\n      action: \"action\"\n    },\n    ngContentSelectors: _c11,\n    decls: 5,\n    vars: 19,\n    consts: [[2, \"overflow\", \"hidden\"], [\"groupPanel\", \"\"], [3, \"caption\", \"imageName\", \"imageCellWidth\", \"captionPadding\", \"margin\", \"captionAlign\", \"action\"], [1, \"stiJsViewerGroupPanelContainer\"]],\n    template: function GroupPanelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵelementStart(2, \"sti-form-button\", 2);\n        i0.ɵɵlistener(\"action\", function GroupPanelComponent_Template_sti_form_button_action_2_listener() {\n          ctx.opened = !ctx.opened;\n          return ctx.action.emit(ctx.opened);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵlistener(\"@state.start\", function GroupPanelComponent_Template_div_animation_state_start_3_listener($event) {\n          return ctx.startAnimation($event);\n        })(\"@state.done\", function GroupPanelComponent_Template_div_animation_state_done_3_listener($event) {\n          return ctx.doneAnimation($event);\n        });\n        i0.ɵɵprojection(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"font-family\", ctx.model.options.toolbar.fontFamily)(\"color\", ctx.model.options.toolbarFontColor)(\"min-width\", ctx.width, \"px\")(\"margin\", ctx.margin);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"caption\", ctx.caption)(\"imageName\", ctx.opened ? \"Arrows.BigArrowDown.png\" : \"Arrows.BigArrowRight.png\")(\"imageCellWidth\", \"1px\")(\"captionPadding\", \"0 15px 0 5px\")(\"margin\", \"0px\")(\"captionAlign\", \"left\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"padding\", ctx.innerPadding)(\"display\", ctx.display);\n        i0.ɵɵproperty(\"@state\", ctx.opened ? \"opened\" : \"closed\");\n      }\n    },\n    directives: [FormButtonComponent],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('state', [state('opened', style({\n        height: '*'\n      })), state('closed', style({\n        height: '0px'\n      })), transition('* => *', [animate('150ms ease-in-out')])])]\n    }\n  });\n  return GroupPanelComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet RadioButtonComponent = /*#__PURE__*/(() => {\n  class RadioButtonComponent {\n    constructor(model, radioService) {\n      this.model = model;\n      this.radioService = radioService;\n      this.action = new EventEmitter();\n      this.enabled = true;\n      this.checked = false;\n      this.over = false;\n    }\n\n    ngAfterViewInit() {\n      this.radioService.addButton(this);\n    }\n\n    ngOnDestroy() {\n      this.radioService.removeButton(this);\n    }\n\n    ngOnInit() {}\n\n    mouseover() {\n      if (!this.enabled) {\n        return;\n      }\n\n      this.over = true;\n    }\n\n    mouseout() {\n      if (!this.enabled) {\n        return;\n      }\n\n      this.over = false;\n    }\n\n    click() {\n      if (this.enabled) {\n        this.checked = true;\n        this.radioService.check(this);\n        this.action.emit(true);\n      }\n    }\n\n    uncheck() {\n      this.checked = false;\n      this.action.emit(false);\n    }\n\n    get outClass() {\n      return !this.enabled ? 'stiJsViewerRadioButtonOutCircleDisabled' : this.over ? 'stiJsViewerRadioButtonOutCircleOver' : 'stiJsViewerRadioButtonOutCircle';\n    }\n\n  }\n\n  RadioButtonComponent.ɵfac = function RadioButtonComponent_Factory(t) {\n    return new (t || RadioButtonComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(RadioButtonService));\n  };\n\n  RadioButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: RadioButtonComponent,\n    selectors: [[\"sti-radio-button\"]],\n    inputs: {\n      groupName: \"groupName\",\n      name: \"name\",\n      enabled: \"enabled\",\n      checked: \"checked\",\n      tooltip: \"tooltip\",\n      caption: \"caption\",\n      margin: \"margin\",\n      paddingLeftLastCell: \"paddingLeftLastCell\"\n    },\n    outputs: {\n      action: \"action\"\n    },\n    ngContentSelectors: _c11,\n    decls: 9,\n    vars: 22,\n    consts: [[\"cellpadding\", \"0\", \"cellspacing\", \"0\", 3, \"mouseover\", \"mouseout\", \"click\"], [1, \"stiJsViewerClearAllStyles\"], [1, \"stiJsViewerRadioButtonOutCircle\"], [1, \"stiJsViewerRadioButtonInnerCircle\"], [\"class\", \"stiJsViewerClearAllStyles\", \"style\", \"padding-left: 4px; white-space: nowrap;\", 4, \"ngIf\"], [1, \"stiJsViewerClearAllStyles\", 2, \"padding-left\", \"4px\", \"white-space\", \"nowrap\"]],\n    template: function RadioButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"table\", 0);\n        i0.ɵɵlistener(\"mouseover\", function RadioButtonComponent_Template_table_mouseover_0_listener() {\n          return ctx.mouseover();\n        })(\"mouseout\", function RadioButtonComponent_Template_table_mouseout_0_listener() {\n          return ctx.mouseout();\n        })(\"click\", function RadioButtonComponent_Template_table_click_0_listener() {\n          return ctx.click();\n        });\n        i0.ɵɵelementStart(1, \"tbody\");\n        i0.ɵɵelementStart(2, \"tr\", 1);\n        i0.ɵɵelementStart(3, \"td\", 1);\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵelement(5, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, RadioButtonComponent_td_6_Template, 2, 1, \"td\", 4);\n        i0.ɵɵelementStart(7, \"td\", 1);\n        i0.ɵɵprojection(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.enabled ? \"stiJsViewerRadioButton\" : \"stiJsViewerRadioButtonDisabled\");\n        i0.ɵɵstyleProp(\"font-family\", ctx.model.options.toolbar.fontFamily)(\"margin\", ctx.margin);\n        i0.ɵɵattribute(\"title\", ctx.tooltip);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassMap(ctx.outClass);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"margin\", ctx.model.options.isTouchDevice ? \"4px\" : \"3px\")(\"width\", ctx.model.options.isTouchDevice ? \"9px\" : \"7px\")(\"height\", ctx.model.options.isTouchDevice ? \"9px\" : \"7px\")(\"visibility\", ctx.checked ? \"visible\" : \"hidden\")(\"opacity\", ctx.enabled ? 1 : 0.5);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.caption != null);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"padding-left\", ctx.paddingLeftLastCell);\n      }\n    },\n    directives: [i7.NgIf],\n    encapsulation: 2\n  });\n  return RadioButtonComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet CheckboxComponent = /*#__PURE__*/(() => {\n  class CheckboxComponent {\n    constructor(model) {\n      this.model = model;\n      this.isEnabled = true;\n      this.isChecked = false;\n      this.indeterminate = false;\n      this.action = new EventEmitter();\n      this.over = false;\n    }\n\n    ngOnInit() {}\n\n    mouseover() {\n      this.over = true;\n    }\n\n    mouseleave() {\n      this.over = false;\n    }\n\n    click() {\n      if (this.isEnabled) {\n        this.isChecked = !this.isChecked;\n        this.action.emit(this.isChecked);\n      }\n    }\n\n  }\n\n  CheckboxComponent.ɵfac = function CheckboxComponent_Factory(t) {\n    return new (t || CheckboxComponent)(i0.ɵɵdirectiveInject(ModelService));\n  };\n\n  CheckboxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CheckboxComponent,\n    selectors: [[\"sti-check-box\"]],\n    inputs: {\n      isEnabled: \"isEnabled\",\n      isChecked: \"isChecked\",\n      indeterminate: \"indeterminate\",\n      captionText: \"captionText\",\n      tooltip: \"tooltip\",\n      margin: \"margin\",\n      width: \"width\",\n      styleColors: \"styleColors\",\n      imageBlockParentWidth: \"imageBlockParentWidth\"\n    },\n    outputs: {\n      action: \"action\"\n    },\n    decls: 11,\n    vars: 35,\n    consts: [[\"cellpadding\", \"0\", \"cellspacing\", \"0\", 2, \"box-sizing\", \"content-box\", 3, \"mouseover\", \"mouseleave\", \"click\"], [1, \"stiJsViewerClearAllStyles\"], [1, \"stiJsViewerClearAllStyles\", 2, \"line-height\", \"0\"], [2, \"box-sizing\", \"content-box\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\", 2, \"width\", \"100%\", \"height\", \"100%\"], [2, \"vertical-align\", \"baseline\", 3, \"src\"], [\"style\", \"white-space: nowrap\", 3, \"padding\", 4, \"ngIf\"], [2, \"white-space\", \"nowrap\"]],\n    template: function CheckboxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0);\n        i0.ɵɵlistener(\"mouseover\", function CheckboxComponent_Template_table_mouseover_0_listener() {\n          return ctx.mouseover();\n        })(\"mouseleave\", function CheckboxComponent_Template_table_mouseleave_0_listener() {\n          return ctx.mouseleave();\n        })(\"click\", function CheckboxComponent_Template_table_click_0_listener() {\n          return ctx.click();\n        });\n        i0.ɵɵelementStart(1, \"tbody\");\n        i0.ɵɵelementStart(2, \"tr\", 1);\n        i0.ɵɵelementStart(3, \"td\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"table\", 4);\n        i0.ɵɵelementStart(6, \"tbody\");\n        i0.ɵɵelementStart(7, \"tr\", 1);\n        i0.ɵɵelementStart(8, \"td\");\n        i0.ɵɵelement(9, \"img\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, CheckboxComponent_td_10_Template, 2, 3, \"td\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.isEnabled ? \"stiJsViewerCheckBox\" : \"stiJsViewerCheckBoxDisabled\");\n        i0.ɵɵstyleProp(\"font-family\", ctx.model.options.toolbar.fontFamily)(\"color\", ctx.model.options.toolbar.fontColor)(\"margin\", ctx.margin)(\"width\", ctx.width);\n        i0.ɵɵattribute(\"title\", ctx.tooltip);\n        i0.ɵɵadvance(3);\n        i0.ɵɵstyleProp(\"padding\", ctx.model.options.isTouchDevice ? \"1px 3px 1px 1px\" : \"\")(\"width\", ctx.imageBlockParentWidth);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassMap(ctx.isEnabled ? ctx.over ? \"stiJsViewerCheckBoxImageBlockOver\" : \"stiJsViewerCheckBoxImageBlock\" : \"stiJsViewerCheckBoxImageBlockDisabled\");\n        i0.ɵɵstyleProp(\"width\", ctx.model.options.isTouchDevice ? 16 : 13, \"px\")(\"height\", ctx.model.options.isTouchDevice ? 16 : 13, \"px\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵstyleProp(\"text-align\", ctx.model.options.isTouchDevice ? \"center\" : \"right\")(\"vertical-align\", ctx.model.options.isTouchDevice ? \"middle\" : \"top\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"visibility\", ctx.isChecked ? \"visible\" : \"hidden\")(\"width\", ctx.indeterminate ? 13 : 12, \"px\")(\"height\", ctx.indeterminate ? 13 : 12, \"px\")(\"opacity\", ctx.isEnabled ? 1 : 0.5);\n        i0.ɵɵproperty(\"src\", ctx.model.img((ctx.indeterminate ? \"CheckBoxIndeterminate\" : \"CheckBox\") + (ctx.styleColors && ctx.styleColors.isDarkStyle ? \"White.png\" : \".png\")), i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.captionText != null);\n      }\n    },\n    directives: [i7.NgIf],\n    encapsulation: 2\n  });\n  return CheckboxComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet DropDownListComponent = /*#__PURE__*/(() => {\n  class DropDownListComponent {\n    constructor(model, mouseService, menuService) {\n      this.model = model;\n      this.mouseService = mouseService;\n      this.menuService = menuService;\n      this.showImage = false;\n      this.action = new EventEmitter();\n      this.over = false;\n      this._readOnly = false;\n      this._enabled = true;\n      this.mouseService.getDocumentMouseUp().subscribe(() => {\n        this.hideListMenu();\n      });\n    }\n\n    ngOnInit() {}\n\n    set readOnly(value) {\n      this._readOnly = value;\n      setTimeout(() => {\n        try {\n          this.input.nativeElement.setAttribute('unselectable', value ? 'on' : 'off');\n          this.input.nativeElement.setAttribute('onselectstart', value ? 'return false' : '');\n          this.input.nativeElement.readOnly = value;\n        } catch (e) {}\n      });\n    }\n\n    get readOnly() {\n      return this._readOnly;\n    }\n\n    get enabled() {\n      return this._enabled;\n    }\n\n    set enabled(value) {\n      if (!value) {\n        this.over = false;\n      }\n\n      this._enabled = value;\n    }\n\n    get key() {\n      return this._key;\n    }\n\n    set key(key) {\n      if (this.items != null) {\n        this.items.forEach(i => i.selected = i.key === key);\n      }\n\n      this._key = key;\n    }\n\n    get inputValue() {\n      var _a;\n\n      if (this.items != null) {\n        return ((_a = this.items.find(i => i.key === this._key)) === null || _a === void 0 ? void 0 : _a.caption) || '';\n      }\n\n      return '';\n    }\n\n    get selected() {\n      const vm = this.menuService.getVerticalMenu();\n      return (vm === null || vm === void 0 ? void 0 : vm.state) === 'expanded' && (vm === null || vm === void 0 ? void 0 : vm.parent) === this.element;\n    }\n\n    get className() {\n      return this.selected ? 'stiJsViewerDropDownListOver' : this.enabled ? this.over ? 'stiJsViewerDropDownListOver' : 'stiJsViewerDropDownList' : 'stiJsViewerDropDownListDisabled';\n    }\n\n    mouseover() {\n      if (!this.enabled) {\n        return;\n      }\n\n      this.over = true;\n    }\n\n    mouseout() {\n      if (!this.enabled) {\n        return;\n      }\n\n      this.over = false;\n    }\n\n    inputClick() {\n      if (this.readOnly) {\n        this.showListMenu();\n      }\n    }\n\n    showListMenu() {\n      this.menuService.addMenu({\n        type: this.menuService.VERTICAL_MENU_NAME,\n        name: this.menuService.VERTICAL_MENU_NAME,\n        items: [],\n        parent: this.element,\n        verticalItems: this.items,\n        itemStyleName: 'stiJsViewerMenuStandartItem',\n        menuStyleName: 'stiJsViewerDropdownMenu',\n        action: this.action,\n        width: this.element.nativeElement.offsetWidth,\n        state: ''\n      });\n      setTimeout(() => {\n        this.menuService.showMenu(this.menuService.VERTICAL_MENU_NAME);\n      });\n    }\n\n    hideListMenu() {\n      if (this.menuService.getVerticalMenu()) {\n        this.menuService.getVerticalMenu().state = 'initialDown';\n      }\n    }\n\n  }\n\n  DropDownListComponent.ɵfac = function DropDownListComponent_Factory(t) {\n    return new (t || DropDownListComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(MouseService), i0.ɵɵdirectiveInject(MenuService));\n  };\n\n  DropDownListComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DropDownListComponent,\n    selectors: [[\"sti-drop-down-list\"]],\n    viewQuery: function DropDownListComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c12, 5);\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.element = _t.first);\n      }\n    },\n    inputs: {\n      toolTip: \"toolTip\",\n      showImage: \"showImage\",\n      width: \"width\",\n      margin: \"margin\",\n      items: \"items\",\n      styleDisplay: \"styleDisplay\",\n      verticalAlign: \"verticalAlign\",\n      readOnly: \"readOnly\",\n      enabled: \"enabled\",\n      key: \"key\"\n    },\n    outputs: {\n      action: \"action\"\n    },\n    decls: 9,\n    vars: 38,\n    consts: [[\"cellpadding\", \"0\", \"cellspacing\", \"0\", 3, \"mouseover\", \"mouseout\"], [\"element\", \"\"], [1, \"stiJsViewerClearAllStyles\"], [1, \"stiJsViewerDropDownList_TextBox\", 3, \"value\", \"click\"], [\"input\", \"\"], [3, \"imageName\", \"styleName\", \"imageSizesWidth\", \"imageSizesHeight\", \"height\", \"enabled\", \"selected\", \"margin\", \"action\"]],\n    template: function DropDownListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0, 1);\n        i0.ɵɵlistener(\"mouseover\", function DropDownListComponent_Template_table_mouseover_0_listener() {\n          return ctx.mouseover();\n        })(\"mouseout\", function DropDownListComponent_Template_table_mouseout_0_listener() {\n          return ctx.mouseout();\n        });\n        i0.ɵɵelementStart(2, \"tbody\");\n        i0.ɵɵelementStart(3, \"tr\", 2);\n        i0.ɵɵelementStart(4, \"td\", 2);\n        i0.ɵɵelementStart(5, \"input\", 3, 4);\n        i0.ɵɵlistener(\"click\", function DropDownListComponent_Template_input_click_5_listener() {\n          return ctx.inputClick();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"td\", 2);\n        i0.ɵɵelementStart(8, \"sti-button\", 5);\n        i0.ɵɵlistener(\"action\", function DropDownListComponent_Template_sti_button_action_8_listener() {\n          return ctx.showListMenu();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.className);\n        i0.ɵɵstyleProp(\"font-family\", ctx.model.options.toolbar.fontFamily)(\"color\", ctx.model.options.toolbar.fontColor)(\"margin\", ctx.margin)(\"vertical-align\", ctx.verticalAlign)(\"display\", ctx.styleDisplay);\n        i0.ɵɵattribute(\"title\", ctx.toolTip);\n        i0.ɵɵadvance(5);\n        i0.ɵɵstyleProp(\"width\", ctx.width - (ctx.model.options.isTouchDevice ? 23 : 15) - (ctx.showImage ? 38 : 0), \"px\")(\"border\", 0)(\"cursor\", ctx.readOnly ? \"default\" : \"text\")(\"font-family\", ctx.model.options.toolbar.fontFamily)(\"color\", ctx.model.options.toolbar.fontColor)(\"height\", ctx.model.options.isTouchDevice ? \"23px\" : \"18px\")(\"line-height\", ctx.model.options.isTouchDevice ? \"23px\" : \"18px\")(\"visibility\", ctx.enabled ? \"visible\" : \"hidden\");\n        i0.ɵɵproperty(\"value\", ctx.inputValue);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"imageName\", \"Arrows.\" + (ctx.model.options.isTouchDevice ? \"Big\" : \"Small\") + \"ArrowDown.png\")(\"styleName\", \"stiJsViewerDropDownListButton\")(\"imageSizesWidth\", ctx.model.options.isTouchDevice ? 16 : 8)(\"imageSizesHeight\", ctx.model.options.isTouchDevice ? 16 : 8)(\"height\", ctx.model.options.isTouchDevice ? \"26px\" : \"21px\")(\"enabled\", ctx.enabled)(\"selected\", ctx.selected)(\"margin\", \"0\");\n      }\n    },\n    directives: [ButtonComponent],\n    encapsulation: 2\n  });\n  return DropDownListComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet DropDownListForExportFormComponent = /*#__PURE__*/(() => {\n  class DropDownListForExportFormComponent {\n    constructor() {\n      this.enabled = true;\n      this.action = new EventEmitter();\n    }\n\n    ngOnInit() {}\n\n  }\n\n  DropDownListForExportFormComponent.ɵfac = function DropDownListForExportFormComponent_Factory(t) {\n    return new (t || DropDownListForExportFormComponent)();\n  };\n\n  DropDownListForExportFormComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DropDownListForExportFormComponent,\n    selectors: [[\"sti-drop-down-list-for-export-form\"]],\n    inputs: {\n      items: \"items\",\n      width: \"width\",\n      key: \"key\",\n      margin: \"margin\",\n      enabled: \"enabled\",\n      styleDisplay: \"styleDisplay\",\n      verticalAlign: \"verticalAlign\"\n    },\n    outputs: {\n      action: \"action\"\n    },\n    decls: 1,\n    vars: 8,\n    consts: [[3, \"items\", \"width\", \"readOnly\", \"key\", \"margin\", \"enabled\", \"styleDisplay\", \"verticalAlign\", \"action\"]],\n    template: function DropDownListForExportFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"sti-drop-down-list\", 0);\n        i0.ɵɵlistener(\"action\", function DropDownListForExportFormComponent_Template_sti_drop_down_list_action_0_listener($event) {\n          ctx.key = $event.key;\n          return ctx.action.emit($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"items\", ctx.items)(\"width\", ctx.width)(\"readOnly\", true)(\"key\", ctx.key)(\"margin\", ctx.margin)(\"enabled\", ctx.enabled)(\"styleDisplay\", ctx.styleDisplay)(\"verticalAlign\", ctx.verticalAlign);\n      }\n    },\n    directives: [DropDownListComponent],\n    encapsulation: 2\n  });\n  return DropDownListForExportFormComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ExportFormComponent = /*#__PURE__*/(() => {\n  class ExportFormComponent {\n    constructor(model, exportService, helper, formService, menuService, collections, controller) {\n      this.model = model;\n      this.exportService = exportService;\n      this.helper = helper;\n      this.formService = formService;\n      this.menuService = menuService;\n      this.collections = collections;\n      this.controller = controller;\n      this.PROPERTY_ALIAS = {\n        ImageFormatForHtml: 'ImageFormat',\n        EncodingTextOrCsvFile: 'Encoding',\n        ExportModeRtf: 'ExportMode',\n        EncodingDifFile: 'Encoding',\n        EncodingDbfFile: 'CodePage'\n      };\n      this.formVisible = false;\n      this.disabledComponents = {};\n    }\n\n    ngOnChanges(changes) {\n      var _a, _b;\n\n      if (this.baseForm && ((_b = (_a = this.formService) === null || _a === void 0 ? void 0 : _a.form) === null || _b === void 0 ? void 0 : _b.name) === this.baseForm.name) {\n        setTimeout(() => this.updateDisabledComponents());\n      }\n    }\n\n    ngOnInit() {}\n\n    action() {\n      this.formService.closeForm(this.baseForm.name);\n\n      if (this.model.options.exports.storeExportSettings) {\n        this.helper.setCookie('StimulsoftWebViewerExportSettings' + this.exportService.getCommonExportFormat(), JSON.stringify(this.exportService.exportSettings));\n      }\n\n      this.exportService.postExport();\n    }\n\n    updateDisabledComponents() {\n      var _a;\n\n      ['StandardPdfFonts', 'EmbeddedFonts', 'UseUnicode'].forEach(n => this.disabledComponents[n] = this.exportService.exportSettings.PdfACompliance === true);\n      this.disabledComponents.ImageQuality = this.exportService.exportSettings.ImageCompressionMethod && this.exportService.exportSettings.ImageCompressionMethod !== 'Jpeg';\n      this.disabledComponents.ExportObjectFormatting = this.exportService.exportSettings.DataExportMode === 'AllBands';\n      this.disabledComponents.UseOnePageHeaderAndFooter = this.exportService.exportSettings.DataExportMode != 'AllBands';\n      this.disabledComponents.EncodingDifFile = this.exportService.exportSettings.UseDefaultSystemEncoding;\n      this.disabledComponents.TiffCompressionScheme = this.exportService.exportSettings.ImageType !== 'Tiff';\n      this.disabledComponents.UseDigitalSignature = !this.exportService.exportSettings.UseDigitalSignature || !(((_a = this.model.pdfSecurityCertificates) === null || _a === void 0 ? void 0 : _a.length) > 0);\n      this.disabledComponents.RemoveEmptySpaceAtBottom = this.exportService.exportSettings.UsePageHeadersAndFooters;\n\n      if (this.exportService.exportSettings.ImageType != null) {\n        const ifComponent = this.exportService.exportFormSettings.components.find(c => c.name === 'ImageFormat');\n\n        if (ifComponent != null) {\n          ifComponent.items = this.collections.getImageFormatItems(this.exportService.exportSettings.ImageType === 'Emf');\n        }\n      }\n\n      this.disabledComponents.DitheringType = this.exportService.exportSettings.ImageFormat !== 'Monochrome';\n\n      if (this.saveReportMdc) {\n        this.saveReportMdc.click();\n      }\n\n      if (this.pagesRangeAll && !this.exportFormSettings.groups.pageRangeGroup.pageRangeAllIsDisabled) {\n        this.pagesRangeAll.click();\n      }\n\n      if (this.pageRangeCurrentPage && this.exportFormSettings.groups.pageRangeGroup.pageRangeAllIsDisabled) {\n        this.pageRangeCurrentPage.click();\n      }\n\n      if (this.exportService.exportSettings.CompressToArchive === true) {\n        this.exportFormSettings.groups.pageRangeGroup.pageRangeAllIsDisabled = false;\n      }\n\n      if (this.exportService.exportSettings.CompressToArchive === false) {\n        this.exportFormSettings.groups.pageRangeGroup.pageRangeAllIsDisabled = true;\n      }\n    }\n\n    componentAction(comp, value) {\n      let property = this.PROPERTY_ALIAS[comp.name] || comp.name;\n\n      switch (property) {\n        case 'EmbeddedFonts':\n        case 'UseUnicode':\n          if (value) {\n            this.exportService.exportSettings.StandardPdfFonts = false;\n          }\n\n          break;\n\n        case 'StandardPdfFonts':\n          if (value) {\n            this.exportService.exportSettings.EmbeddedFonts = false;\n            this.exportService.exportSettings.UseUnicode = false;\n          }\n\n          break;\n\n        case 'ImageType':\n          this.exportService.export('Image' + value, true);\n          break;\n\n        case 'DataType':\n        case 'HtmlType':\n          this.exportService.export(value, true);\n          break;\n\n        case 'ExcelType':\n          const exportFormat = value === 'ExcelBinary' ? 'Excel' : value;\n          this.exportService.export(exportFormat, true);\n          break;\n\n        case 'UseDigitalSignature':\n          if (!(value === true || value === false)) {\n            property = 'CertificateThumbprint';\n          }\n\n          if (value === true && this.collections.getPdfSecurityCertificatesItems().length == 0) {\n            value = false;\n            this.controller.showError('Warning', 'Certificate Not Found!');\n          }\n\n          break;\n\n        case 'UsePageHeadersAndFooters':\n          if (value === true) {\n            this.exportService.exportSettings.RemoveEmptySpaceAtBottom = true;\n          }\n\n          break;\n      }\n\n      this.exportService.exportSettings[property] = value;\n      this.updateDisabledComponents();\n    }\n\n    getValue(comp, component) {\n      const property = this.PROPERTY_ALIAS[comp.name] || comp.name;\n\n      switch (property) {\n        case 'Zoom2':\n          return this.exportService.exportSettings[property].toString();\n\n        case 'UseDigitalSignature':\n          if (component == 'dropDownList') {\n            return this.exportService.exportSettings['CertificateThumbprint'];\n          }\n\n        default:\n          return this.exportService.exportSettings[property];\n      }\n    }\n\n    changeVisibility(state) {\n      var _a, _b;\n\n      this.formVisible = state === 'visible';\n\n      if (state === 'hidden' && ((_b = (_a = this.exportFormSettings) === null || _a === void 0 ? void 0 : _a.groups) === null || _b === void 0 ? void 0 : _b.savingReportGroup)) {\n        this.helper.setCookie('StimulsoftWebViewerExportSettingsOpeningGroups', JSON.stringify({\n          SavingReportGroup: this.exportFormSettings.groups.savingReportGroup.opened,\n          PageRangeGroup: this.exportFormSettings.groups.pageRangeGroup.opened,\n          SettingsGroup: this.exportFormSettings.groups.settingsGroup.opened\n        }));\n      }\n\n      if (state === 'visible') {\n        this.updateDisabledComponents();\n      }\n    }\n\n    showMenu(comp, button) {\n      let menuName = 'documentSecurityMenu';\n\n      if (comp.name === 'DocumentSecurityButton') {\n        this.menuService.addMenu({\n          type: menuName,\n          name: menuName,\n          items: [],\n          parent: button.button,\n          itemStyleName: 'stiJsViewerMenuStandartItem',\n          menuStyleName: 'stiJsViewerDropdownMenu',\n          state: ''\n        });\n      } else {\n        menuName = this.menuService.VERTICAL_MENU_NAME;\n        this.menuService.addMenu({\n          type: 'buttonMenu',\n          name: menuName,\n          items: this.collections.getPdfSecurityCertificatesItems(),\n          parent: button.button,\n          itemStyleName: 'stiJsViewerMenuStandartItem',\n          menuStyleName: 'stiJsViewerDropdownMenu',\n          state: ''\n        });\n      }\n\n      setTimeout(() => {\n        this.menuService.showMenu(menuName);\n      });\n    }\n\n    getTextBoxType(name) {\n      if (name === 'SaveReportPassword' || name === 'PasswordInputUser' || name === 'PasswordInputOwner') {\n        return this.formVisible ? 'password' : '';\n      }\n\n      return null;\n    }\n\n  }\n\n  ExportFormComponent.ɵfac = function ExportFormComponent_Factory(t) {\n    return new (t || ExportFormComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(ExportService), i0.ɵɵdirectiveInject(HelperService), i0.ɵɵdirectiveInject(FormService), i0.ɵɵdirectiveInject(MenuService), i0.ɵɵdirectiveInject(CollectionsService), i0.ɵɵdirectiveInject(ControllerService));\n  };\n\n  ExportFormComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ExportFormComponent,\n    selectors: [[\"sti-export-form\"]],\n    viewQuery: function ExportFormComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c13, 5);\n        i0.ɵɵviewQuery(_c14, 5);\n        i0.ɵɵviewQuery(_c15, 5);\n        i0.ɵɵviewQuery(_c16, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.baseForm = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.saveReportMdc = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.pagesRangeAll = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.pageRangeCurrentPage = _t.first);\n      }\n    },\n    inputs: {\n      exportFormSettings: \"exportFormSettings\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 8,\n    vars: 11,\n    consts: [[3, \"fontFamily\", \"color\", \"fontSize\", \"containerPadding\", \"name\", \"caption\", \"defaultTop\", \"changeVisibility\", \"action\"], [\"baseForm\", \"\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\", 2, \"width\", \"100%\"], [\"class\", \"stiJsViewerClearAllStyles\", 4, \"ngIf\"], [1, \"stiJsViewerClearAllStyles\"], [\"colspan\", \"2\", 1, \"stiJsViewerClearAllStyles\"], [3, \"caption\", \"width\", \"margin\", \"innerPadding\", \"opened\", \"action\"], [3, \"name\", \"groupName\", \"caption\", \"margin\", \"checked\", \"action\"], [\"saveReportMdc\", \"\"], [3, \"name\", \"groupName\", \"caption\", \"margin\", \"action\"], [1, \"stiJsViewerClearAllStyles\", 2, \"padding\", \"0px 8px\", \"min-width\", \"150px\"], [3, \"width\", \"tooltip\", \"margin\", \"type\", \"enabled\", \"onchange\"], [3, \"name\", \"groupName\", \"caption\", \"tooltip\", \"margin\", \"checked\", \"enabled\", \"action\"], [\"pagesRangeAll\", \"\"], [3, \"name\", \"groupName\", \"caption\", \"tooltip\", \"margin\", \"checked\", \"action\"], [\"pageRangeCurrentPage\", \"\"], [3, \"name\", \"groupName\", \"caption\", \"tooltip\", \"margin\", \"paddingLeftLastCell\", \"action\"], [3, \"width\", \"tooltip\", \"margin\", \"onchange\", \"onblur\"], [\"pagesRange\", \"\"], [3, \"caption\", \"opened\", \"width\", \"margin\", \"innerPadding\", \"action\"], [4, \"ngFor\", \"ngForOf\"], [\"style\", \"padding: 0px 8px; min-width: 150px;\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"width\", \"items\", \"key\", \"margin\", \"verticalAlign\", \"styleDisplay\", \"enabled\", \"action\", 4, \"ngIf\"], [3, \"display\", 4, \"ngIf\"], [3, \"width\", \"tooltip\", \"margin\", \"type\", \"enabled\", \"value\", \"onchange\", 4, \"ngIf\"], [3, \"tooltip\", \"margin\", \"captionText\", \"isChecked\", \"isEnabled\", \"action\", 4, \"ngIf\"], [2, \"padding\", \"0px 8px\", \"min-width\", \"150px\"], [3, \"tooltip\", \"margin\", \"captionText\", \"isChecked\", \"action\"], [3, \"width\", \"items\", \"key\", \"margin\", \"verticalAlign\", \"styleDisplay\", \"enabled\", \"action\"], [3, \"width\", \"tooltip\", \"margin\", \"type\", \"enabled\", \"value\", \"onchange\"], [3, \"tooltip\", \"margin\", \"captionText\", \"isChecked\", \"isEnabled\", \"action\"], [3, \"width\", \"arrow\", \"minWidth\", \"captionAlign\", \"display\", \"styleName\", \"margin\", \"innerTableWidth\", \"captionWidth\", \"caption\", \"enabled\", \"action\"], [\"button\", \"\"], [3, \"captionText\", \"tooltip\", \"margin\", \"isChecked\", \"action\"]],\n    template: function ExportFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"sti-base-form\", 0, 1);\n        i0.ɵɵlistener(\"changeVisibility\", function ExportFormComponent_Template_sti_base_form_changeVisibility_0_listener($event) {\n          return ctx.changeVisibility($event);\n        })(\"action\", function ExportFormComponent_Template_sti_base_form_action_0_listener() {\n          return ctx.action();\n        });\n        i0.ɵɵelementStart(2, \"table\", 2);\n        i0.ɵɵelementStart(3, \"tbody\");\n        i0.ɵɵtemplate(4, ExportFormComponent_tr_4_Template, 20, 25, \"tr\", 3);\n        i0.ɵɵtemplate(5, ExportFormComponent_tr_5_Template, 18, 27, \"tr\", 3);\n        i0.ɵɵtemplate(6, ExportFormComponent_tr_6_Template, 6, 6, \"tr\", 3);\n        i0.ɵɵtemplate(7, ExportFormComponent_tr_7_Template, 3, 4, \"tr\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"fontFamily\", ctx.model.options.toolbar.fontFamily)(\"color\", ctx.model.options.toolbar.fontColor)(\"fontSize\", \"12px\")(\"containerPadding\", \"3px\")(\"name\", \"exportForm\")(\"caption\", ctx.model.loc(\"ExportFormTitle\"))(\"defaultTop\", 150);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.exportFormSettings == null ? null : ctx.exportFormSettings.groups.savingReportGroup.visible);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.exportFormSettings == null ? null : ctx.exportFormSettings.groups.pageRangeGroup.visible);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.exportFormSettings == null ? null : ctx.exportFormSettings.groups.settingsGroup.visible);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.model.options.exports.showOpenAfterExport && (ctx.exportFormSettings == null ? null : ctx.exportFormSettings.openAfterExport) && !ctx.exportService.sendMail);\n      }\n    },\n    directives: [BaseFormComponent, i7.NgIf, GroupPanelComponent, RadioButtonComponent, TextBoxComponent, i7.NgForOf, CheckboxComponent, DropDownListForExportFormComponent, ButtonComponent],\n    encapsulation: 2\n  });\n  return ExportFormComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TextAreaComponent = /*#__PURE__*/(() => {\n  class TextAreaComponent {\n    constructor() {\n      this.enabled = true;\n      this.action = new EventEmitter();\n      this.onchange = new EventEmitter();\n      this.onblur = new EventEmitter();\n      this.selected = false;\n      this.focused = false;\n      this.over = false;\n      this._readOnly = false;\n      this.styleName = 'stiJsViewerTextBox';\n    }\n\n    ngOnInit() {}\n\n    keypress(event) {\n      if (!this.enabled) {\n        return false;\n      }\n\n      if (event.keyCode === 13) {\n        this.action.emit(event.target);\n      }\n    }\n\n    onchanged(event) {\n      this.onchange.emit(event.target);\n    }\n\n    get className() {\n      if (this._readOnly) {\n        return this.styleName + ' ' + this.styleName + 'Default';\n      }\n\n      return this.styleName + ' ' + this.styleName + (this.selected ? 'Over' : this.enabled ? this.over ? 'Over' : 'Default' : 'Disabled');\n    }\n\n    get readOnly() {\n      return this._readOnly;\n    }\n\n  }\n\n  TextAreaComponent.ɵfac = function TextAreaComponent_Factory(t) {\n    return new (t || TextAreaComponent)();\n  };\n\n  TextAreaComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TextAreaComponent,\n    selectors: [[\"sti-text-area\"]],\n    inputs: {\n      width: \"width\",\n      height: \"height\",\n      enabled: \"enabled\",\n      value: \"value\",\n      padding: \"padding\",\n      margin: \"margin\"\n    },\n    outputs: {\n      action: \"action\",\n      onchange: \"onchange\",\n      onblur: \"onblur\"\n    },\n    decls: 2,\n    vars: 17,\n    consts: [[2, \"padding-top\", \"3px, font-family: Arial\", 3, \"value\", \"mouseover\", \"mouseleave\", \"focused\", \"blur\", \"keypress\", \"keyup\"]],\n    template: function TextAreaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"textarea\", 0);\n        i0.ɵɵlistener(\"mouseover\", function TextAreaComponent_Template_textarea_mouseover_0_listener() {\n          return ctx.over = true;\n        })(\"mouseleave\", function TextAreaComponent_Template_textarea_mouseleave_0_listener() {\n          return ctx.over = false;\n        })(\"focused\", function TextAreaComponent_Template_textarea_focused_0_listener() {\n          ctx.focused = true;\n          return ctx.selected = true;\n        })(\"blur\", function TextAreaComponent_Template_textarea_blur_0_listener($event) {\n          ctx.focused = false;\n          ctx.selected = false;\n          return ctx.onblur.emit($event.target);\n        })(\"keypress\", function TextAreaComponent_Template_textarea_keypress_0_listener($event) {\n          return ctx.keypress($event);\n        })(\"keyup\", function TextAreaComponent_Template_textarea_keyup_0_listener($event) {\n          return ctx.onchanged($event);\n        });\n        i0.ɵɵtext(1, \"    \");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.className);\n        i0.ɵɵstyleProp(\"width\", ctx.width, \"px\")(\"min-width\", ctx.width, \"px\")(\"height\", ctx.height, \"px\")(\"min-height\", ctx.height, \"px\")(\"margin\", ctx.margin)(\"cursor\", ctx.readOnly ? \"default\" : \"\")(\"padding\", ctx.padding);\n        i0.ɵɵproperty(\"value\", ctx.value || \"\");\n      }\n    },\n    encapsulation: 2\n  });\n  return TextAreaComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet SendEmailFormComponent = /*#__PURE__*/(() => {\n  class SendEmailFormComponent {\n    constructor(model, mailService, exportService) {\n      this.model = model;\n      this.mailService = mailService;\n      this.exportService = exportService;\n    }\n\n    ngOnInit() {}\n\n  }\n\n  SendEmailFormComponent.ɵfac = function SendEmailFormComponent_Factory(t) {\n    return new (t || SendEmailFormComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(MailService), i0.ɵɵdirectiveInject(ExportService));\n  };\n\n  SendEmailFormComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: SendEmailFormComponent,\n    selectors: [[\"sti-send-email-form\"]],\n    decls: 24,\n    vars: 27,\n    consts: [[3, \"fontFamily\", \"color\", \"fontSize\", \"name\", \"caption\", \"level\", \"defaultTop\", \"action\"], [\"baseForm\", \"\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\", 2, \"width\", \"100%\"], [1, \"stiJsViewerClearAllStyles\"], [1, \"stiJsViewerCaptionControls\"], [4, \"ngIf\"], [\"class\", \"stiJsViewerClearAllStyles\", 4, \"ngIf\"], [3, \"margin\", \"value\", \"width\", \"onchange\"], [3, \"margin\", \"value\", \"height\", \"width\", \"onchange\"], [2, \"margin\", \"4px\"]],\n    template: function SendEmailFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"sti-base-form\", 0, 1);\n        i0.ɵɵlistener(\"action\", function SendEmailFormComponent_Template_sti_base_form_action_0_listener() {\n          return ctx.mailService.sendMail();\n        });\n        i0.ɵɵelementStart(2, \"table\", 2);\n        i0.ɵɵelementStart(3, \"tbody\");\n        i0.ɵɵelementStart(4, \"tr\", 3);\n        i0.ɵɵelementStart(5, \"td\", 4);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, SendEmailFormComponent_td_7_Template, 2, 3, \"td\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, SendEmailFormComponent_tr_8_Template, 3, 3, \"tr\", 6);\n        i0.ɵɵelementStart(9, \"tr\", 3);\n        i0.ɵɵelementStart(10, \"td\", 4);\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, SendEmailFormComponent_td_12_Template, 2, 3, \"td\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, SendEmailFormComponent_tr_13_Template, 3, 3, \"tr\", 6);\n        i0.ɵɵelementStart(14, \"tr\", 3);\n        i0.ɵɵelementStart(15, \"td\", 4);\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, SendEmailFormComponent_td_17_Template, 2, 4, \"td\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(18, SendEmailFormComponent_tr_18_Template, 3, 4, \"tr\", 6);\n        i0.ɵɵelementStart(19, \"tr\", 3);\n        i0.ɵɵelementStart(20, \"td\", 4);\n        i0.ɵɵtext(21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(22, SendEmailFormComponent_td_22_Template, 3, 1, \"td\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, SendEmailFormComponent_tr_23_Template, 4, 1, \"tr\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"fontFamily\", ctx.model.options.toolbar.fontFamily)(\"color\", ctx.model.options.toolbar.fontColor)(\"fontSize\", \"12px\")(\"name\", \"sendEmailForm\")(\"caption\", ctx.model.loc(\"EmailOptions\"))(\"level\", 1)(\"defaultTop\", 150);\n        i0.ɵɵadvance(5);\n        i0.ɵɵstyleProp(\"padding\", ctx.model.options.isMobileDevice ? \"0 25px 0 4px\" : \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.model.loc(\"Email\"), \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.model.options.isMobileDevice);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.model.options.isMobileDevice);\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleProp(\"padding\", ctx.model.options.isMobileDevice ? \"0 25px 0 4px\" : \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.model.loc(\"Subject\"), \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.model.options.isMobileDevice);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.model.options.isMobileDevice);\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleProp(\"padding\", ctx.model.options.isMobileDevice ? \"0 25px 0 4px\" : \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.model.loc(\"Message\"), \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.model.options.isMobileDevice);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.model.options.isMobileDevice);\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleProp(\"padding\", ctx.model.options.isMobileDevice ? \"0 25px 0 4px\" : \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.model.loc(\"Attachment\"), \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.model.options.isMobileDevice);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.model.options.isMobileDevice);\n      }\n    },\n    directives: [BaseFormComponent, i7.NgIf, TextBoxComponent, TextAreaComponent],\n    encapsulation: 2\n  });\n  return SendEmailFormComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet PasswordFormComponent = /*#__PURE__*/(() => {\n  class PasswordFormComponent {\n    constructor(model, controller, formService) {\n      this.model = model;\n      this.controller = controller;\n      this.formService = formService;\n    }\n\n    ngOnInit() {}\n\n    changeVisibility(state) {\n      if (state === 'visible') {\n        this.password = '';\n        this.textBox.element.nativeElement.focus();\n      }\n    }\n\n    action() {\n      const data = this.formService.form.formData;\n      data.openingFilePassword = this.password;\n      this.formService.closeForm('passwordForm');\n      this.controller.postOpen(data);\n    }\n\n  }\n\n  PasswordFormComponent.ɵfac = function PasswordFormComponent_Factory(t) {\n    return new (t || PasswordFormComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(ControllerService), i0.ɵɵdirectiveInject(FormService));\n  };\n\n  PasswordFormComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: PasswordFormComponent,\n    selectors: [[\"sti-password-form\"]],\n    viewQuery: function PasswordFormComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c10, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textBox = _t.first);\n      }\n    },\n    decls: 9,\n    vars: 11,\n    consts: [[3, \"fontFamily\", \"color\", \"name\", \"caption\", \"level\", \"defaultTop\", \"changeVisibility\", \"action\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\", 2, \"margin\", \"5px\"], [1, \"stiJsViewerClearAllStyles\"], [1, \"stiJsViewerCaptionControls\"], [3, \"type\", \"width\", \"focusOnCreate\", \"value\", \"onchange\"], [\"textBox\", \"\"]],\n    template: function PasswordFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"sti-base-form\", 0);\n        i0.ɵɵlistener(\"changeVisibility\", function PasswordFormComponent_Template_sti_base_form_changeVisibility_0_listener($event) {\n          return ctx.changeVisibility($event);\n        })(\"action\", function PasswordFormComponent_Template_sti_base_form_action_0_listener() {\n          return ctx.action();\n        });\n        i0.ɵɵelementStart(1, \"table\", 1);\n        i0.ɵɵelementStart(2, \"tbody\");\n        i0.ɵɵelementStart(3, \"tr\", 2);\n        i0.ɵɵelementStart(4, \"td\", 3);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"td\", 3);\n        i0.ɵɵelementStart(7, \"sti-text-box\", 4, 5);\n        i0.ɵɵlistener(\"onchange\", function PasswordFormComponent_Template_sti_text_box_onchange_7_listener($event) {\n          return ctx.password = $event.value;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"fontFamily\", ctx.model.options.toolbar.fontFamily)(\"color\", ctx.model.options.toolbar.fontColor)(\"name\", \"passwordForm\")(\"caption\", ctx.model.loc(\"PasswordSaveReport\").replace(\":\", \"\"))(\"level\", 2)(\"defaultTop\", 150);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\" \", ctx.model.loc(\"PasswordEnter\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"type\", \"password\")(\"width\", 200)(\"focusOnCreate\", true)(\"value\", ctx.password);\n      }\n    },\n    directives: [BaseFormComponent, TextBoxComponent],\n    encapsulation: 2\n  });\n  return PasswordFormComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ErrorMessageFormComponent = /*#__PURE__*/(() => {\n  class ErrorMessageFormComponent {\n    constructor(model, formService) {\n      this.model = model;\n      this.formService = formService;\n    }\n\n    ngOnInit() {}\n\n    getImage() {\n      var _a;\n\n      const messageType = (_a = this.model.errorMessage) === null || _a === void 0 ? void 0 : _a.type;\n\n      if (messageType === 'Warning') {\n        return this.model.img('MsgFormWarning.png');\n      } else if (messageType === true || messageType === 'Info') {\n        return this.model.img('MsgFormInfo.png');\n      } else {\n        return this.model.img('MsgFormError.png');\n      }\n    }\n\n  }\n\n  ErrorMessageFormComponent.ɵfac = function ErrorMessageFormComponent_Factory(t) {\n    return new (t || ErrorMessageFormComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(FormService));\n  };\n\n  ErrorMessageFormComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ErrorMessageFormComponent,\n    selectors: [[\"sti-error-message-form\"]],\n    decls: 7,\n    vars: 11,\n    consts: [[3, \"fontFamily\", \"color\", \"name\", \"caption\", \"level\", \"defaultTop\", \"showCancel\", \"action\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\"], [1, \"stiJsViewerClearAllStyles\"], [2, \"padding\", \"15px\", \"height\", \"32px\", \"width\", \"32px\"], [1, \"stiJsViewerMessagesFormDescription\", 2, \"max-width\", \"600px\", 3, \"innerHTML\"]],\n    template: function ErrorMessageFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"sti-base-form\", 0);\n        i0.ɵɵlistener(\"action\", function ErrorMessageFormComponent_Template_sti_base_form_action_0_listener() {\n          return ctx.formService.closeForm(\"errorMessageForm\");\n        });\n        i0.ɵɵelementStart(1, \"table\", 1);\n        i0.ɵɵelementStart(2, \"tbody\");\n        i0.ɵɵelementStart(3, \"tr\", 2);\n        i0.ɵɵelementStart(4, \"td\", 2);\n        i0.ɵɵelement(5, \"img\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"td\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"fontFamily\", ctx.model.options.toolbar.fontFamily)(\"color\", ctx.model.options.toolbar.fontColor)(\"name\", \"errorMessageForm\")(\"caption\", ctx.model.loc((ctx.model.errorMessage == null ? null : ctx.model.errorMessage.type) == \"Error\" ? \"Error\" : \"FormViewerTitle\"))(\"level\", 4)(\"defaultTop\", 150)(\"showCancel\", false);\n        i0.ɵɵadvance(5);\n        i0.ɵɵattribute(\"src\", ctx.getImage(), i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"color\", ctx.model.options.toolbar.fontColor);\n        i0.ɵɵproperty(\"innerHTML\", ctx.model.errorMessage == null ? null : ctx.model.errorMessage.error, i0.ɵɵsanitizeHtml);\n      }\n    },\n    directives: [BaseFormComponent],\n    encapsulation: 2\n  });\n  return ErrorMessageFormComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NotificationFormComponent = /*#__PURE__*/(() => {\n  class NotificationFormComponent {\n    constructor(model, formService) {\n      this.model = model;\n      this.formService = formService;\n    }\n\n    ngOnInit() {}\n\n    changeVisibility(state) {\n      var _a;\n\n      if (state === 'hidden' && ((_a = this.model.notificationFormOptions) === null || _a === void 0 ? void 0 : _a.cancelAction)) {\n        this.model.notificationFormOptions.cancelAction();\n      }\n    }\n\n    action() {\n      var _a;\n\n      ((_a = this.model.notificationFormOptions) === null || _a === void 0 ? void 0 : _a.action) ? this.model.notificationFormOptions.action() : this.formService.closeForm('notificationForm');\n    }\n\n  }\n\n  NotificationFormComponent.ɵfac = function NotificationFormComponent_Factory(t) {\n    return new (t || NotificationFormComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(FormService));\n  };\n\n  NotificationFormComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NotificationFormComponent,\n    selectors: [[\"sti-notification-form\"]],\n    decls: 9,\n    vars: 23,\n    consts: [[3, \"fontFamily\", \"color\", \"name\", \"defaultTop\", \"caption\", \"level\", \"showButtons\", \"showSeparator\", \"changeVisibility\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\"], [\"class\", \"stiJsViewerClearAllStyles\", 4, \"ngIf\"], [1, \"stiJsViewerClearAllStyles\"], [1, \"stiJsViewerClearAllStyles\", 2, \"text-align\", \"center\"], [3, \"caption\", \"styleName\", \"innerTableWidth\", \"height\", \"minWidth\", \"captionAlign\", \"cursor\", \"display\", \"width\", \"margin\", \"fontSize\", \"action\"], [2, \"margin-top\", \"20px\", \"width\", \"112px\", \"height\", \"112px\", 3, \"src\"], [1, \"stiJsViewerNotificationFormMessage\"], [1, \"stiJsViewerNotificationFormDescription\"]],\n    template: function NotificationFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"sti-base-form\", 0);\n        i0.ɵɵlistener(\"changeVisibility\", function NotificationFormComponent_Template_sti_base_form_changeVisibility_0_listener($event) {\n          return ctx.changeVisibility($event);\n        });\n        i0.ɵɵelementStart(1, \"table\", 1);\n        i0.ɵɵelementStart(2, \"tbody\");\n        i0.ɵɵtemplate(3, NotificationFormComponent_tr_3_Template, 3, 1, \"tr\", 2);\n        i0.ɵɵtemplate(4, NotificationFormComponent_tr_4_Template, 4, 1, \"tr\", 2);\n        i0.ɵɵtemplate(5, NotificationFormComponent_tr_5_Template, 4, 1, \"tr\", 2);\n        i0.ɵɵelementStart(6, \"tr\", 3);\n        i0.ɵɵelementStart(7, \"td\", 4);\n        i0.ɵɵelementStart(8, \"sti-button\", 5);\n        i0.ɵɵlistener(\"action\", function NotificationFormComponent_Template_sti_button_action_8_listener() {\n          return ctx.action();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"fontFamily\", ctx.model.options.toolbar.fontFamily)(\"color\", ctx.model.options.toolbar.fontColor)(\"name\", \"notificationForm\")(\"defaultTop\", 150)(\"caption\", ctx.model.loc(\"Viewer\"))(\"level\", 4)(\"showButtons\", false)(\"showSeparator\", false);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.model.notificationFormOptions == null ? null : ctx.model.notificationFormOptions.image);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.model.notificationFormOptions == null ? null : ctx.model.notificationFormOptions.message);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.model.notificationFormOptions == null ? null : ctx.model.notificationFormOptions.description);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"caption\", ctx.model.notificationFormOptions == null ? null : ctx.model.notificationFormOptions.buttonCaption)(\"styleName\", \"stiJsViewerLoginButton\")(\"innerTableWidth\", \"100%\")(\"height\", \"40px\")(\"minWidth\", \"80px\")(\"captionAlign\", \"center\")(\"cursor\", \"pointer\")(\"display\", \"inline-block\")(\"minWidth\", \"200px\")(\"width\", \"auto\")(\"margin\", \"20px 30px 30px 30px\")(\"fontSize\", \"14px\");\n      }\n    },\n    directives: [BaseFormComponent, i7.NgIf, ButtonComponent],\n    encapsulation: 2\n  });\n  return NotificationFormComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TooltipComponent = /*#__PURE__*/(() => {\n  class TooltipComponent {\n    constructor(model, tooltipService, helper) {\n      this.model = model;\n      this.tooltipService = tooltipService;\n      this.helper = helper;\n    }\n\n    ngAfterViewInit() {\n      this.model.controls.tooltip.el = this.element;\n    }\n\n    ngOnInit() {}\n\n    action() {\n      this.helper.showHelpWindow(this.tooltipService.helpLink);\n    }\n\n  }\n\n  TooltipComponent.ɵfac = function TooltipComponent_Factory(t) {\n    return new (t || TooltipComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(TooltipService), i0.ɵɵdirectiveInject(HelperService));\n  };\n\n  TooltipComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TooltipComponent,\n    selectors: [[\"sti-tooltip\"]],\n    viewQuery: function TooltipComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.element = _t.first);\n      }\n    },\n    decls: 8,\n    vars: 9,\n    consts: [[1, \"stiJsViewerToolTip\", 3, \"mouseover\", \"mouseout\"], [\"element\", \"\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\", 2, \"height\", \"100%\"], [1, \"stiJsViewerClearAllStyles\"], [1, \"stiJsViewerToolTipTextCell\"], [\"class\", \"stiJsViewerClearAllStyles\", 4, \"ngIf\"], [3, \"caption\", \"imageName\", \"margin\", \"styleName\", \"action\"]],\n    template: function TooltipComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵlistener(\"mouseover\", function TooltipComponent_Template_div_mouseover_0_listener() {\n          return ctx.tooltipService.showFromTooltip();\n        })(\"mouseout\", function TooltipComponent_Template_div_mouseout_0_listener() {\n          return ctx.tooltipService.hide();\n        });\n        i0.ɵɵelementStart(2, \"table\", 2);\n        i0.ɵɵelementStart(3, \"tbody\");\n        i0.ɵɵelementStart(4, \"tr\", 3);\n        i0.ɵɵelementStart(5, \"td\", 4);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, TooltipComponent_tr_7_Template, 3, 4, \"tr\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"left\", ctx.tooltipService.left, \"px\")(\"top\", ctx.tooltipService.top, \"px\");\n        i0.ɵɵproperty(\"@expandDown\", ctx.tooltipService.state);\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleProp(\"border\", ctx.model.options.appearance.showTooltipsHelp ? \"\" : 0);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.tooltipService.caption, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.model.options.appearance.showTooltipsHelp);\n      }\n    },\n    directives: [i7.NgIf, ButtonComponent],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('expandDown', [state('initial', style({\n        opacity: 0,\n        display: 'none'\n      })), state('preInitial', style({\n        opacity: 0,\n        display: 'block'\n      })), state('preInitial2', style({\n        opacity: 0,\n        display: 'block'\n      })), state('expanded', style({\n        opacity: 1,\n        display: 'block'\n      })), transition('preInitial => expanded', [animate('300ms 300ms ease-in-out', keyframes([style({\n        display: 'block',\n        opacity: 0,\n        offset: 0\n      }), style({\n        display: 'block',\n        opacity: 1,\n        offset: 1\n      })]))])])]\n    }\n  });\n  return TooltipComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nclass MenuItem {\n  constructor(name, caption, img, type, selected, imageSize, value) {\n    this.name = name;\n    this.caption = caption;\n    this.img = img;\n    this.type = type;\n    this.selected = selected;\n    this.imageSize = imageSize;\n    this.value = value;\n  }\n\n}\n\nlet MenuItemComponent = /*#__PURE__*/(() => {\n  class MenuItemComponent {\n    constructor(model) {\n      this.model = model;\n      this.styleName = 'stiJsViewerMenuStandartItem';\n      this.selected = false;\n      this.over = false;\n      this._enabled = true;\n    }\n\n    ngOnInit() {}\n\n    get enabled() {\n      return this._enabled;\n    }\n\n    set enabled(value) {\n      if (!value) {\n        this.over = false;\n      }\n\n      this._enabled = value;\n    }\n\n    mouseover() {\n      if (!this.enabled || !this.enabled) {\n        return;\n      }\n\n      this.over = true;\n    }\n\n    mouseout() {\n      if (!this.enabled || !this.enabled) {\n        return;\n      }\n\n      this.over = false;\n    }\n\n    get height() {\n      if (this.item.imageSize === 'Big') {\n        return '38px';\n      } else {\n        return this.model.options.isMobileDevice ? '0.4in' : this.model.options.isTouchDevice ? '30px' : '24px';\n      }\n    }\n\n    get className() {\n      return this.styleName ? this.styleName + ' ' + (this.enabled ? this.styleName + (this.selected || this.item.selected ? 'Selected' : this.over ? 'Over' : '') : this.styleName + 'Disabled') : '';\n    }\n\n  }\n\n  MenuItemComponent.ɵfac = function MenuItemComponent_Factory(t) {\n    return new (t || MenuItemComponent)(i0.ɵɵdirectiveInject(ModelService));\n  };\n\n  MenuItemComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MenuItemComponent,\n    selectors: [[\"sti-menu-item\"]],\n    inputs: {\n      item: \"item\",\n      styleName: \"styleName\",\n      enabled: \"enabled\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[3, \"class\", \"height\", \"mouseover\", \"mouseout\", 4, \"ngIf\"], [\"class\", \"stiJsViewerVerticalMenuSeparator\", 3, \"margin\", 4, \"ngIf\"], [3, \"mouseover\", \"mouseout\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\", 2, \"height\", \"100%\", \"width\", \"100%\"], [1, \"stiJsViewerClearAllStyles\"], [\"class\", \"stiJsViewerClearAllStyles\", \"style\", \"width:22px; min-width:22px; padding: 0; text-align:center; line-height: 0;\", 4, \"ngIf\"], [\"class\", \"stiJsViewerClearAllStyles\", \"style\", \"white-space:nowrap\", 3, \"textAlign\", \"padding\", 4, \"ngIf\"], [1, \"stiJsViewerClearAllStyles\", 2, \"width\", \"22px\", \"min-width\", \"22px\", \"padding\", \"0\", \"text-align\", \"center\", \"line-height\", \"0\"], [3, \"height\", \"width\", \"src\", 4, \"ngIf\"], [3, \"src\"], [1, \"stiJsViewerClearAllStyles\", 2, \"white-space\", \"nowrap\"], [1, \"stiJsViewerVerticalMenuSeparator\"]],\n    template: function MenuItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, MenuItemComponent_div_0_Template, 6, 7, \"div\", 0);\n        i0.ɵɵtemplate(1, MenuItemComponent_div_1_Template, 1, 2, \"div\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.item.type != \"separator\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.item.type == \"separator\");\n      }\n    },\n    directives: [i7.NgIf],\n    encapsulation: 2\n  });\n  return MenuItemComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ParameterMenuItemComponent = /*#__PURE__*/(() => {\n  class ParameterMenuItemComponent {\n    constructor(model) {\n      this.model = model;\n      this.action = new EventEmitter();\n      this.active = true;\n      this.padding = '0px 5px';\n      this.isOver = false;\n      this.mouseDown = false;\n    }\n\n    ngOnInit() {}\n\n    mouseover() {\n      this.isOver = true;\n    }\n\n    mouseout() {\n      this.isOver = false;\n      this.mouseDown = false;\n    }\n\n    mousedown() {\n      this.mouseDown = true;\n    }\n\n    mouseup() {\n      this.mouseDown = false;\n      this.action.emit();\n    }\n\n    get className() {\n      return this.active ? this.mouseDown ? 'stiJsViewerParametersMenuItemPressed' : this.isOver ? 'stiJsViewerParametersMenuItemOver' : 'stiJsViewerParametersMenuItem' : 'stiJsViewerParametersMenuItem';\n    }\n\n  }\n\n  ParameterMenuItemComponent.ɵfac = function ParameterMenuItemComponent_Factory(t) {\n    return new (t || ParameterMenuItemComponent)(i0.ɵɵdirectiveInject(ModelService));\n  };\n\n  ParameterMenuItemComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ParameterMenuItemComponent,\n    selectors: [[\"sti-parameter-menu-item\"]],\n    inputs: {\n      active: \"active\",\n      padding: \"padding\"\n    },\n    outputs: {\n      action: \"action\"\n    },\n    ngContentSelectors: _c11,\n    decls: 6,\n    vars: 6,\n    consts: [[3, \"mouseover\", \"mouseout\", \"mousedown\", \"mouseup\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\", \"stiJsViewerParametersMenuItemInnerTable\"], [1, \"stiJsViewerClearAllStyles\"]],\n    template: function ParameterMenuItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"mouseover\", function ParameterMenuItemComponent_Template_div_mouseover_0_listener() {\n          return ctx.mouseover();\n        })(\"mouseout\", function ParameterMenuItemComponent_Template_div_mouseout_0_listener() {\n          return ctx.mouseout();\n        })(\"mousedown\", function ParameterMenuItemComponent_Template_div_mousedown_0_listener() {\n          return ctx.mousedown();\n        })(\"mouseup\", function ParameterMenuItemComponent_Template_div_mouseup_0_listener() {\n          return ctx.mouseup();\n        });\n        i0.ɵɵelementStart(1, \"table\", 1);\n        i0.ɵɵelementStart(2, \"tbody\");\n        i0.ɵɵelementStart(3, \"tr\", 2);\n        i0.ɵɵelementStart(4, \"td\", 2);\n        i0.ɵɵprojection(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.className);\n        i0.ɵɵstyleProp(\"height\", ctx.model.options.isTouchDevice ? 30 : 24, \"px\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵstyleProp(\"padding\", ctx.padding);\n      }\n    },\n    encapsulation: 2\n  });\n  return ParameterMenuItemComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ParameterTextBoxComponent = /*#__PURE__*/(() => {\n  class ParameterTextBoxComponent {\n    constructor(helper, model) {\n      this.helper = helper;\n      this.model = model;\n      this.focusOnCreate = false;\n      this.isMenu = false;\n      this.value = '';\n      this.secondTextBox = false;\n    }\n\n    ngOnInit() {}\n\n    onchange(target) {\n      if (this.element.oldValue === target.value) {\n        return;\n      }\n\n      const value = this.getValue(target);\n\n      if (this.isMenu) {\n        if (!this.secondTextBox) {\n          this.item.key = value;\n        } else {\n          this.item.keyTo = value;\n        }\n      } else {\n        if (!this.secondTextBox) {\n          if (this.variable.basicType === 'Range' || this.variable.type === 'DateTime') {\n            this.variable.key = value;\n          } else {\n            this.variable.value = value;\n          }\n        } else {\n          this.variable.keyTo = value;\n        }\n      }\n    }\n\n    getValue(target) {\n      if (this.variable.type === 'DateTime') {\n        if (this.element.oldValue === target.value) {\n          return;\n        }\n\n        try {\n          const timeString = new Date().toLocaleTimeString();\n          const isAmericanFormat = timeString.toLowerCase().indexOf('am') >= 0 || timeString.toLowerCase().indexOf('pm') >= 0;\n          const formatDate = isAmericanFormat ? 'MM/dd/yyyy' : 'dd.MM.yyyy';\n          let format = formatDate + (isAmericanFormat ? ' h:mm:ss tt' : ' hh:mm:ss');\n\n          if (this.variable.dateTimeType === 'Date') {\n            format = formatDate;\n          }\n\n          if (this.variable.dateTimeType === 'Time') {\n            format = 'hh:mm:ss';\n          }\n\n          const date = this.helper.getDateTimeFromString(target.value, this.model.options.appearance.parametersPanelDateFormat || format);\n          return this.helper.getDateTimeObject(date);\n        } catch (e) {\n          alert(e);\n        }\n      } else {\n        return target.value;\n      }\n    }\n\n    get width() {\n      let width = 210;\n\n      if (this.variable.basicType === 'Range') {\n        width = 140;\n\n        if (this.variable.type === 'Guid' || this.variable.type === 'String') {\n          width = 190;\n        }\n\n        if (this.variable.type === 'DateTime') {\n          width = 235;\n        }\n\n        if (this.variable.type === 'Char') {\n          width = 60;\n        }\n      } else {\n        if (this.variable.type === 'Guid') {\n          width = 265;\n        } else {\n          width = 210;\n        }\n      }\n\n      return width;\n    }\n\n    get color() {\n      return !this.variable.isNull ? this.model.options.toolbar.fontColor && this.model.options.toolbar.fontColor !== 'Empty' ? this.model.options.toolbar.fontColor : '#444444' : this.variable.type === 'DateTime' ? 'transparent' : '#c6c6c6';\n    }\n\n  }\n\n  ParameterTextBoxComponent.ɵfac = function ParameterTextBoxComponent_Factory(t) {\n    return new (t || ParameterTextBoxComponent)(i0.ɵɵdirectiveInject(HelperService), i0.ɵɵdirectiveInject(ModelService));\n  };\n\n  ParameterTextBoxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ParameterTextBoxComponent,\n    selectors: [[\"sti-parameter-text-box\"]],\n    viewQuery: function ParameterTextBoxComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.element = _t.first);\n      }\n    },\n    inputs: {\n      item: \"item\",\n      variable: \"variable\",\n      readOnly: \"readOnly\",\n      focusOnCreate: \"focusOnCreate\",\n      isMenu: \"isMenu\",\n      value: \"value\",\n      secondTextBox: \"secondTextBox\"\n    },\n    decls: 2,\n    vars: 7,\n    consts: [[3, \"maxLength\", \"value\", \"width\", \"readOnly\", \"focusOnCreate\", \"enabled\", \"color\", \"onblur\"], [\"element\", \"\"]],\n    template: function ParameterTextBoxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"sti-text-box\", 0, 1);\n        i0.ɵɵlistener(\"onblur\", function ParameterTextBoxComponent_Template_sti_text_box_onblur_0_listener($event) {\n          return ctx.onchange($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"maxLength\", ctx.variable.type === \"Char\" ? 1 : \"\")(\"value\", ctx.isMenu ? ctx.helper.getStringKey(ctx.item.key, ctx.variable) : ctx.value)(\"width\", ctx.width)(\"readOnly\", ctx.readOnly)(\"focusOnCreate\", ctx.focusOnCreate)(\"enabled\", !(ctx.variable == null ? null : ctx.variable.isNull))(\"color\", ctx.color);\n      }\n    },\n    directives: [TextBoxComponent],\n    encapsulation: 2\n  });\n  return ParameterTextBoxComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ParameterButtonComponent = /*#__PURE__*/(() => {\n  class ParameterButtonComponent {\n    constructor(model) {\n      this.model = model;\n      this.action = new EventEmitter();\n    }\n\n    ngOnInit() {}\n\n    onaction() {\n      this.action.emit(this.params);\n    }\n\n  }\n\n  ParameterButtonComponent.ɵfac = function ParameterButtonComponent_Factory(t) {\n    return new (t || ParameterButtonComponent)(i0.ɵɵdirectiveInject(ModelService));\n  };\n\n  ParameterButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ParameterButtonComponent,\n    selectors: [[\"sti-parameter-button\"]],\n    inputs: {\n      params: \"params\",\n      buttonType: \"buttonType\"\n    },\n    outputs: {\n      action: \"action\"\n    },\n    decls: 1,\n    vars: 5,\n    consts: [[3, \"imageName\", \"styleName\", \"height\", \"innerTableWidth\", \"enabled\", \"action\"]],\n    template: function ParameterButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"sti-button\", 0);\n        i0.ɵɵlistener(\"action\", function ParameterButtonComponent_Template_sti_button_action_0_listener() {\n          return ctx.onaction();\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"imageName\", ctx.buttonType + \".png\")(\"styleName\", \"stiJsViewerFormButton\")(\"height\", ctx.model.options.isTouchDevice ? \"26px\" : \"21px\")(\"innerTableWidth\", \"100%\")(\"enabled\", !(ctx.params == null ? null : ctx.params.isNull));\n      }\n    },\n    directives: [ButtonComponent],\n    encapsulation: 2\n  });\n  return ParameterButtonComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ParameterMenuSeparatorComponent = /*#__PURE__*/(() => {\n  class ParameterMenuSeparatorComponent {\n    constructor() {}\n\n    ngOnInit() {}\n\n  }\n\n  ParameterMenuSeparatorComponent.ɵfac = function ParameterMenuSeparatorComponent_Factory(t) {\n    return new (t || ParameterMenuSeparatorComponent)();\n  };\n\n  ParameterMenuSeparatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ParameterMenuSeparatorComponent,\n    selectors: [[\"sti-parameter-menu-separator\"]],\n    decls: 1,\n    vars: 0,\n    consts: [[1, \"stiJsViewerParametersMenuSeparator\"]],\n    template: function ParameterMenuSeparatorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n      }\n    },\n    encapsulation: 2\n  });\n  return ParameterMenuSeparatorComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ParameterMenuEditListComponent = /*#__PURE__*/(() => {\n  class ParameterMenuEditListComponent {\n    constructor(model, helper, menuService) {\n      this.model = model;\n      this.helper = helper;\n      this.menuService = menuService;\n    }\n\n    ngOnInit() {}\n\n    newItem(event) {\n      const item = new Variable();\n\n      if (this.menu.params.type === 'DateTime') {\n        item.key = this.helper.getDateTimeObject();\n        item.value = this.helper.dateTimeObjectToString(item.key);\n      } else if (this.menu.params.type === 'TimeSpan') {\n        item.key = '00:00:00';\n        item.value = '00:00:00';\n      } else if (this.menu.params.type === 'Bool') {\n        item.key = 'False';\n        item.value = 'False';\n      } else {\n        item.key = '';\n        item.value = '';\n      }\n\n      item.focusOnCreate = true;\n\n      if (!this.menu.params.items) {\n        this.menu.params.items = [];\n      }\n\n      this.menu.params.items.push(item);\n      setTimeout(() => {\n        item.focusOnCreate = false;\n      });\n    }\n\n    dateTimeButtonAction(item) {\n      this.menuService.addMenu({\n        type: 'datePickerMenu',\n        name: 'datePickerMenu',\n        items: [],\n        parent: this.dateTimeButton,\n        params: item,\n        state: ''\n      });\n      setTimeout(() => {\n        this.menuService.showMenu('datePickerMenu');\n      });\n    }\n\n    guidButtonAction(item) {\n      item.key = this.helper.newGuid();\n    }\n\n    removeButtonAction(item) {\n      this.menu.params.items.splice(this.menu.params.items.indexOf(item), 1);\n    }\n\n    removeAllAction() {\n      this.menu.params.items.splice(0, this.menu.params.items.length);\n    }\n\n    closeAction() {\n      this.menu.state = 'initialDown';\n    }\n\n  }\n\n  ParameterMenuEditListComponent.ɵfac = function ParameterMenuEditListComponent_Factory(t) {\n    return new (t || ParameterMenuEditListComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(HelperService), i0.ɵɵdirectiveInject(MenuService));\n  };\n\n  ParameterMenuEditListComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ParameterMenuEditListComponent,\n    selectors: [[\"sti-parameter-menu-edit-list\"]],\n    viewQuery: function ParameterMenuEditListComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c17, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dateTimeButton = _t.first);\n      }\n    },\n    inputs: {\n      menu: \"menu\"\n    },\n    decls: 16,\n    vars: 12,\n    consts: [[\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\", \"stiJsViewerParametersMenuInnerTable\"], [1, \"stiJsViewerClearAllStyles\"], [3, \"action\"], [3, \"active\", 4, \"ngFor\", \"ngForOf\"], [3, \"active\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\"], [1, \"stiJsViewerClearAllStyles\", 2, \"padding\", \"0px 1px 0px 0px\"], [3, \"item\", \"isMenu\", \"variable\", \"focusOnCreate\"], [\"class\", \"stiJsViewerClearAllStyles\", \"style\", \"padding: 0 1px 0 1px;\", 4, \"ngIf\"], [1, \"stiJsViewerClearAllStyles\", 2, \"padding\", \"0 1px 0 1px\"], [3, \"buttonType\", \"params\", \"action\"], [\"dateTimeButton\", \"\"], [3, \"buttonType\", \"action\"]],\n    template: function ParameterMenuEditListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0);\n        i0.ɵɵelementStart(1, \"tbody\");\n        i0.ɵɵelementStart(2, \"tr\", 1);\n        i0.ɵɵelementStart(3, \"td\", 1);\n        i0.ɵɵelementStart(4, \"sti-parameter-menu-item\", 2);\n        i0.ɵɵlistener(\"action\", function ParameterMenuEditListComponent_Template_sti_parameter_menu_item_action_4_listener($event) {\n          return ctx.newItem($event);\n        });\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"tr\", 1);\n        i0.ɵɵelementStart(7, \"td\", 1);\n        i0.ɵɵtemplate(8, ParameterMenuEditListComponent_sti_parameter_menu_item_8_Template, 10, 9, \"sti-parameter-menu-item\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"tr\", 1);\n        i0.ɵɵelementStart(10, \"td\", 1);\n        i0.ɵɵelementStart(11, \"sti-parameter-menu-item\", 2);\n        i0.ɵɵlistener(\"action\", function ParameterMenuEditListComponent_Template_sti_parameter_menu_item_action_11_listener() {\n          return ctx.removeAllAction();\n        });\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"sti-parameter-menu-separator\");\n        i0.ɵɵelementStart(14, \"sti-parameter-menu-item\", 2);\n        i0.ɵɵlistener(\"action\", function ParameterMenuEditListComponent_Template_sti_parameter_menu_item_action_14_listener() {\n          return ctx.closeAction();\n        });\n        i0.ɵɵtext(15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"font-family\", ctx.model.options.toolbar.fontFamily)(\"color\", ctx.model.options.toolbar.fontColor)(\"font-size\", \"12px\")(\"width\", ctx.menu.parent.nativeElement.offsetWidth - 5 + \"px\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\" \", ctx.model.loc(\"NewItem\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.menu.params.items);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.model.loc(\"RemoveAll\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.model.loc(\"Close\"), \" \");\n      }\n    },\n    directives: [ParameterMenuItemComponent, i7.NgForOf, ParameterMenuSeparatorComponent, ParameterTextBoxComponent, i7.NgIf, ParameterButtonComponent],\n    encapsulation: 2\n  });\n  return ParameterMenuEditListComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ParameterFindComponent = /*#__PURE__*/(() => {\n  class ParameterFindComponent {\n    constructor(model, helper) {\n      this.model = model;\n      this.helper = helper;\n    }\n\n    ngOnInit() {}\n\n    onchange(event) {\n      const text = event.value.toLowerCase();\n      this.variable.items.forEach(item => {\n        const itemText = this.helper.val(item.value, this.helper.getStringKey(item.key, this.variable)).toLowerCase();\n        item.visible = itemText.indexOf(text) >= 0;\n      });\n    }\n\n  }\n\n  ParameterFindComponent.ɵfac = function ParameterFindComponent_Factory(t) {\n    return new (t || ParameterFindComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(HelperService));\n  };\n\n  ParameterFindComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ParameterFindComponent,\n    selectors: [[\"sti-parameter-find\"]],\n    inputs: {\n      variable: \"variable\"\n    },\n    decls: 7,\n    vars: 4,\n    consts: [[\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\"], [1, \"stiJsViewerClearAllStyles\"], [1, \"stiJsViewerClearAllStyles\", 2, \"padding-left\", \"8px\"], [3, \"text\"], [3, \"width\", \"margin\", \"focusOnCreate\", \"onchange\"]],\n    template: function ParameterFindComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0);\n        i0.ɵɵelementStart(1, \"tbody\");\n        i0.ɵɵelementStart(2, \"tr\", 1);\n        i0.ɵɵelementStart(3, \"td\", 2);\n        i0.ɵɵelement(4, \"sti-text-block\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"td\", 2);\n        i0.ɵɵelementStart(6, \"sti-text-box\", 4);\n        i0.ɵɵlistener(\"onchange\", function ParameterFindComponent_Template_sti_text_box_onchange_6_listener($event) {\n          return ctx.onchange($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"text\", ctx.model.loc(\"FindWhat\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"width\", 80)(\"margin\", \"4px\")(\"focusOnCreate\", true);\n      }\n    },\n    directives: [TextBlockComponent, TextBoxComponent],\n    encapsulation: 2\n  });\n  return ParameterFindComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ParameterCheckboxComponent = /*#__PURE__*/(() => {\n  class ParameterCheckboxComponent {\n    constructor() {\n      this.isEnabled = true;\n      this.isMenuParameter = false;\n      this.nullable = false;\n      this.action = new EventEmitter();\n    }\n\n    ngOnInit() {}\n\n    onAction(checked) {\n      this.action.emit(checked);\n    }\n\n    get checked() {\n      if (this.nullable) {\n        return this.params.isNull;\n      } else {\n        return this.isMenuParameter ? this.params.isChecked : typeof this.params.value === 'boolean' && this.params.value || this.params.value === 'true' || this.params.value === 'True';\n      }\n    }\n\n  }\n\n  ParameterCheckboxComponent.ɵfac = function ParameterCheckboxComponent_Factory(t) {\n    return new (t || ParameterCheckboxComponent)();\n  };\n\n  ParameterCheckboxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ParameterCheckboxComponent,\n    selectors: [[\"sti-parameter-checkbox\"]],\n    inputs: {\n      params: \"params\",\n      captionText: \"captionText\",\n      margin: \"margin\",\n      width: \"width\",\n      imageBlockParentWidth: \"imageBlockParentWidth\",\n      isEnabled: \"isEnabled\",\n      isMenuParameter: \"isMenuParameter\",\n      nullable: \"nullable\"\n    },\n    outputs: {\n      action: \"action\"\n    },\n    decls: 1,\n    vars: 6,\n    consts: [[3, \"isEnabled\", \"isChecked\", \"captionText\", \"margin\", \"width\", \"imageBlockParentWidth\", \"action\"]],\n    template: function ParameterCheckboxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"sti-check-box\", 0);\n        i0.ɵɵlistener(\"action\", function ParameterCheckboxComponent_Template_sti_check_box_action_0_listener($event) {\n          return ctx.onAction($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"isEnabled\", ctx.isEnabled)(\"isChecked\", ctx.checked)(\"captionText\", ctx.captionText)(\"margin\", ctx.margin)(\"width\", ctx.width)(\"imageBlockParentWidth\", ctx.imageBlockParentWidth);\n      }\n    },\n    directives: [CheckboxComponent],\n    encapsulation: 2\n  });\n  return ParameterCheckboxComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ParameterMenuNotEditListComponent = /*#__PURE__*/(() => {\n  class ParameterMenuNotEditListComponent {\n    constructor(model, helper) {\n      this.model = model;\n      this.helper = helper;\n    }\n\n    ngOnInit() {}\n\n    selectAll() {\n      const isAllSelected = this.isAllSelected();\n\n      if (this.menu.params.items) {\n        this.menu.params.items.forEach(e => e.isChecked = !isAllSelected);\n      }\n    }\n\n    isAllSelected() {\n      return this.menu.params.items.every(e => e.isChecked);\n    }\n\n    check(item) {\n      item.isChecked = !item.isChecked;\n    }\n\n    closeAction() {\n      this.menu.state = 'initialDown';\n    }\n\n  }\n\n  ParameterMenuNotEditListComponent.ɵfac = function ParameterMenuNotEditListComponent_Factory(t) {\n    return new (t || ParameterMenuNotEditListComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(HelperService));\n  };\n\n  ParameterMenuNotEditListComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ParameterMenuNotEditListComponent,\n    selectors: [[\"sti-parameter-menu-not-edit-list\"]],\n    inputs: {\n      menu: \"menu\"\n    },\n    decls: 19,\n    vars: 16,\n    consts: [[3, \"variable\", 4, \"ngIf\"], [4, \"ngIf\"], [2, \"max-height\", \"400px\", \"overflow\", \"hidden auto\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\", \"stiJsViewerParametersMenuInnerTable\"], [1, \"stiJsViewerClearAllStyles\"], [3, \"captionText\", \"margin\", \"isChecked\", \"action\"], [\"class\", \"stiJsViewerClearAllStyles\", 3, \"display\", 4, \"ngFor\", \"ngForOf\"], [3, \"padding\", \"action\"], [3, \"variable\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\", 2, \"width\", \"100%\"], [3, \"params\", \"captionText\", \"margin\", \"width\", \"imageBlockParentWidth\", \"isMenuParameter\", \"action\"]],\n    template: function ParameterMenuNotEditListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ParameterMenuNotEditListComponent_sti_parameter_find_0_Template, 1, 1, \"sti-parameter-find\", 0);\n        i0.ɵɵtemplate(1, ParameterMenuNotEditListComponent_sti_parameter_menu_separator_1_Template, 1, 0, \"sti-parameter-menu-separator\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"table\", 3);\n        i0.ɵɵelementStart(4, \"tbody\");\n        i0.ɵɵelementStart(5, \"tr\", 4);\n        i0.ɵɵelementStart(6, \"td\", 4);\n        i0.ɵɵelementStart(7, \"sti-check-box\", 5);\n        i0.ɵɵlistener(\"action\", function ParameterMenuNotEditListComponent_Template_sti_check_box_action_7_listener() {\n          return ctx.selectAll();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"tr\", 4);\n        i0.ɵɵelementStart(9, \"td\", 4);\n        i0.ɵɵelement(10, \"sti-parameter-menu-separator\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, ParameterMenuNotEditListComponent_tr_11_Template, 8, 8, \"tr\", 6);\n        i0.ɵɵelementStart(12, \"tr\", 4);\n        i0.ɵɵelementStart(13, \"td\", 4);\n        i0.ɵɵelement(14, \"sti-parameter-menu-separator\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"tr\", 4);\n        i0.ɵɵelementStart(16, \"td\", 4);\n        i0.ɵɵelementStart(17, \"sti-parameter-menu-item\", 7);\n        i0.ɵɵlistener(\"action\", function ParameterMenuNotEditListComponent_Template_sti_parameter_menu_item_action_17_listener() {\n          return ctx.closeAction();\n        });\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.menu.params.items.length > 10);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.menu.params.items.length > 10);\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleProp(\"font-family\", ctx.model.options.toolbar.fontFamily)(\"color\", ctx.model.options.toolbar.fontColor)(\"font-size\", \"12px\")(\"width\", ctx.menu.parent.nativeElement.offsetWidth - 5 + \"px\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"captionText\", ctx.model.loc(\"SelectAll\"))(\"margin\", \"8px 7px 8px 7px\")(\"isChecked\", ctx.isAllSelected());\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.menu.params.items);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"padding\", \"0px 5px 0px 13px\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.model.loc(\"Close\"), \" \");\n      }\n    },\n    directives: [i7.NgIf, CheckboxComponent, ParameterMenuSeparatorComponent, i7.NgForOf, ParameterMenuItemComponent, ParameterFindComponent, ParameterCheckboxComponent],\n    encapsulation: 2\n  });\n  return ParameterMenuNotEditListComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ParameterMenuForValueComponent = /*#__PURE__*/(() => {\n  class ParameterMenuForValueComponent {\n    constructor(model, helper, intearctionService) {\n      this.model = model;\n      this.helper = helper;\n      this.intearctionService = intearctionService;\n    }\n\n    ngOnInit() {}\n\n    action(item) {\n      this.menu.params.value = item.value;\n      this.menu.params.key = item.key;\n      this.menu.params.isChanged = true;\n      this.menu.state = 'initialDown';\n\n      if (this.menu.params.binding) {\n        if (!this.model.options.paramsVariablesStartValues) {\n          this.model.options.paramsVariablesStartValues = this.helper.copyObject(this.model.options.paramsVariables);\n        }\n\n        this.intearctionService.postInteraction({\n          action: 'InitVars',\n          variables: this.intearctionService.getParametersValues()\n        });\n      }\n    }\n\n    getValue(item) {\n      return item.value !== '' && this.menu.params.type !== 'DateTime' && this.menu.params.type !== 'TimeSpan' ? item.value : this.helper.getStringKey(item.key, this.menu.params);\n    }\n\n  }\n\n  ParameterMenuForValueComponent.ɵfac = function ParameterMenuForValueComponent_Factory(t) {\n    return new (t || ParameterMenuForValueComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(HelperService), i0.ɵɵdirectiveInject(InteractionsService));\n  };\n\n  ParameterMenuForValueComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ParameterMenuForValueComponent,\n    selectors: [[\"sti-parameter-menu-for-value\"]],\n    inputs: {\n      menu: \"menu\"\n    },\n    decls: 6,\n    vars: 13,\n    consts: [[3, \"variable\", 4, \"ngIf\"], [4, \"ngIf\"], [2, \"max-height\", \"400px\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\", \"stiJsViewerParametersMenuInnerTable\"], [\"class\", \"stiJsViewerClearAllStyles\", 3, \"display\", 4, \"ngFor\", \"ngForOf\"], [3, \"variable\"], [1, \"stiJsViewerClearAllStyles\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\", 2, \"width\", \"100%\"], [3, \"action\"]],\n    template: function ParameterMenuForValueComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ParameterMenuForValueComponent_sti_parameter_find_0_Template, 1, 1, \"sti-parameter-find\", 0);\n        i0.ɵɵtemplate(1, ParameterMenuForValueComponent_sti_parameter_menu_separator_1_Template, 1, 0, \"sti-parameter-menu-separator\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"table\", 3);\n        i0.ɵɵelementStart(4, \"tbody\");\n        i0.ɵɵtemplate(5, ParameterMenuForValueComponent_tr_5_Template, 9, 3, \"tr\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.menu.params.items.length > 10);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.menu.params.items.length > 10);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"overflow\", ctx.menu.params.items.length > 10 ? \"hidden auto\" : \"hidden\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"font-family\", ctx.model.options.toolbar.fontFamily)(\"color\", ctx.model.options.toolbar.fontColor)(\"font-size\", \"12px\")(\"width\", ctx.menu.parent.nativeElement.offsetWidth - 5 + \"px\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.menu.params.items);\n      }\n    },\n    directives: [i7.NgIf, i7.NgForOf, ParameterFindComponent, ParameterMenuSeparatorComponent, ParameterMenuItemComponent],\n    encapsulation: 2\n  });\n  return ParameterMenuForValueComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ParameterMenuForRangeComponent = /*#__PURE__*/(() => {\n  class ParameterMenuForRangeComponent {\n    constructor(model, helper) {\n      this.model = model;\n      this.helper = helper;\n    }\n\n    ngOnInit() {}\n\n    action(item) {\n      this.menu.params.key = item.key;\n      this.menu.params.keyTo = item.keyTo;\n      this.menu.state = 'initialDown';\n    }\n\n    getValue(item) {\n      return `${item.value} [${this.helper.getStringKey(item.key, this.menu.params)} - ${this.helper.getStringKey(item.keyTo, this.menu.params)}]`;\n    }\n\n  }\n\n  ParameterMenuForRangeComponent.ɵfac = function ParameterMenuForRangeComponent_Factory(t) {\n    return new (t || ParameterMenuForRangeComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(HelperService));\n  };\n\n  ParameterMenuForRangeComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ParameterMenuForRangeComponent,\n    selectors: [[\"sti-parameter-menu-for-range\"]],\n    inputs: {\n      menu: \"menu\"\n    },\n    decls: 6,\n    vars: 13,\n    consts: [[3, \"variable\", 4, \"ngIf\"], [4, \"ngIf\"], [2, \"max-height\", \"400px\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\", \"stiJsViewerParametersMenuInnerTable\"], [\"class\", \"stiJsViewerClearAllStyles\", 3, \"display\", 4, \"ngFor\", \"ngForOf\"], [3, \"variable\"], [1, \"stiJsViewerClearAllStyles\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\", 2, \"width\", \"100%\"], [3, \"action\"]],\n    template: function ParameterMenuForRangeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ParameterMenuForRangeComponent_sti_parameter_find_0_Template, 1, 1, \"sti-parameter-find\", 0);\n        i0.ɵɵtemplate(1, ParameterMenuForRangeComponent_sti_parameter_menu_separator_1_Template, 1, 0, \"sti-parameter-menu-separator\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"table\", 3);\n        i0.ɵɵelementStart(4, \"tbody\");\n        i0.ɵɵtemplate(5, ParameterMenuForRangeComponent_tr_5_Template, 9, 3, \"tr\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.menu.params.items.length > 10);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.menu.params.items.length > 10);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"overflow\", ctx.menu.params.items.length > 10 ? \"hidden auto\" : \"hidden\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"font-family\", ctx.model.options.toolbar.fontFamily)(\"color\", ctx.model.options.toolbar.fontColor)(\"font-size\", \"12px\")(\"width\", ctx.menu.parent.nativeElement.offsetWidth - 5 + \"px\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.menu.params.items);\n      }\n    },\n    directives: [i7.NgIf, i7.NgForOf, ParameterFindComponent, ParameterMenuSeparatorComponent, ParameterMenuItemComponent],\n    encapsulation: 2\n  });\n  return ParameterMenuForRangeComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet DatePickerDayButtonComponent = /*#__PURE__*/(() => {\n  class DatePickerDayButtonComponent {\n    constructor(model, helper, menuService) {\n      this.model = model;\n      this.helper = helper;\n      this.menuService = menuService;\n      this.caption = '';\n      this.enabled = false;\n      this.selected = false;\n      this.closeOnAction = true;\n    }\n\n    action() {\n      this.date.day = this.row * 7 + this.col - this.getFirstDay() + 1;\n\n      if (this.closeOnAction && this.menuService.getMenu('datePickerMenu') != null) {\n        this.menuService.getMenu('datePickerMenu').state = 'initialUp';\n      }\n    }\n\n    getFirstDay() {\n      let firstDay = new Date(this.date.year, this.date.month - 1, 1).getDay();\n\n      if (firstDay === 0) {\n        firstDay = 7;\n      }\n\n      if (this.model.options.appearance.datePickerFirstDayOfWeek !== 'Sunday') {\n        firstDay--;\n      }\n\n      return firstDay;\n    }\n\n    ngOnInit() {}\n\n  }\n\n  DatePickerDayButtonComponent.ɵfac = function DatePickerDayButtonComponent_Factory(t) {\n    return new (t || DatePickerDayButtonComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(HelperService), i0.ɵɵdirectiveInject(MenuService));\n  };\n\n  DatePickerDayButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DatePickerDayButtonComponent,\n    selectors: [[\"sti-date-picker-day-button\"]],\n    inputs: {\n      col: \"col\",\n      row: \"row\",\n      caption: \"caption\",\n      enabled: \"enabled\",\n      selected: \"selected\",\n      date: \"date\",\n      closeOnAction: \"closeOnAction\"\n    },\n    decls: 1,\n    vars: 10,\n    consts: [[3, \"styleName\", \"width\", \"height\", \"captionAlign\", \"innerTableWidth\", \"captionPadding\", \"margin\", \"caption\", \"enabled\", \"selected\", \"action\"]],\n    template: function DatePickerDayButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"sti-button\", 0);\n        i0.ɵɵlistener(\"action\", function DatePickerDayButtonComponent_Template_sti_button_action_0_listener() {\n          return ctx.action();\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"styleName\", \"stiJsViewerDatePickerDayButton\")(\"width\", ctx.model.options.isTouchDevice ? \"25px\" : \"23px\")(\"height\", ctx.model.options.isTouchDevice ? \"25px\" : \"23px\")(\"captionAlign\", \"center\")(\"innerTableWidth\", \"100%\")(\"captionPadding\", \"0px\")(\"margin\", \"1px\")(\"caption\", ctx.caption)(\"enabled\", ctx.enabled)(\"selected\", ctx.selected);\n      }\n    },\n    directives: [ButtonComponent],\n    encapsulation: 2\n  });\n  return DatePickerDayButtonComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet DatePickerMenuComponent = /*#__PURE__*/(() => {\n  class DatePickerMenuComponent {\n    constructor(model, helper) {\n      this.model = model;\n      this.helper = helper;\n      this.keyTo = false;\n      this.closeOnAction = true;\n      this.monthesForDatePickerItems = [];\n      this.cols = [0, 1, 2, 3, 4, 5, 6];\n      this.rows = [0, 1, 2, 3, 4, 5];\n      this.model.months.forEach((m, i) => this.monthesForDatePickerItems.push({\n        name: 'Month' + i,\n        caption: this.model.loc('Month' + m),\n        key: i\n      }));\n      const firstLetters = {};\n      this.model.dayOfWeek.forEach(d => {\n        const dayName = this.model.loc('Day' + d);\n        firstLetters[dayName.toString().substring(0, 1).toUpperCase()] = true;\n      });\n      this.countLetters = Object.keys(firstLetters).length < 5 ? 2 : 1;\n    }\n\n    ngOnInit() {}\n\n    getButtonSelected(col, row) {\n      const firstDay = this.getFirstDay();\n      const curDay = row * 7 + col;\n      const day = curDay - firstDay + 1;\n      return day === this.key.day;\n    }\n\n    getButtonCaption(col, row) {\n      const firstDay = this.getFirstDay();\n      const daysInMonth = this.helper.getCountDaysOfMonth(this.key.year, this.key.month - 1);\n      const curDay = row * 7 + col;\n      const day = curDay - firstDay + 1;\n\n      if (curDay >= firstDay && day <= daysInMonth) {\n        return day.toString();\n      }\n\n      return '';\n    }\n\n    getTime() {\n      return this.helper.formatDate(this.helper.getDate(this.key), 'H:mm:ss');\n    }\n\n    getFirstDay() {\n      let firstDay = new Date(this.key.year, this.key.month - 1, 1).getDay();\n\n      if (firstDay === 0) {\n        firstDay = 7;\n      }\n\n      if (this.model.options.appearance.datePickerFirstDayOfWeek !== 'Sunday') {\n        firstDay--;\n      }\n\n      return firstDay;\n    }\n\n    get showTime() {\n      var _a, _b;\n\n      return ((_b = (_a = this.menu) === null || _a === void 0 ? void 0 : _a.params) === null || _b === void 0 ? void 0 : _b.dateTimeType) !== 'Date';\n    }\n\n    get key() {\n      return this.keyTo ? this.menu.params.keyTo : this.menu.params.key;\n    }\n\n    yearAction(input) {\n      try {\n        this.key.year = parseInt(input.value, 10);\n      } catch (_a) {}\n    }\n\n    timeAction(input) {\n      const time = this.helper.stringToTime(input.value);\n      this.key.seconds = time.seconds;\n      this.key.minutes = time.minutes;\n      this.key.hours = time.hours;\n    }\n\n    getShortDayName(index) {\n      const dayName = this.model.loc('Day' + this.model.dayOfWeek[index]);\n\n      if (dayName) {\n        return dayName.toString().substring(0, this.countLetters <= dayName.length ? this.countLetters : 1).toUpperCase();\n      }\n\n      return '';\n    }\n\n    getShortDayColor(index) {\n      if (index === (this.model.options.appearance.datePickerFirstDayOfWeek === 'Sunday' ? 6 : 5)) {\n        return '#0000ff';\n      }\n\n      if (index === (this.model.options.appearance.datePickerFirstDayOfWeek === 'Sunday' ? 0 : 6)) {\n        return '#ff0000';\n      }\n\n      return '';\n    }\n\n    prevMonthButtonAction() {\n      let month = this.key.month;\n      let year = this.key.year;\n      month--;\n\n      if (month === 0) {\n        month = 12;\n        year--;\n      }\n\n      const countDaysInMonth = this.helper.getCountDaysOfMonth(year, month - 1);\n\n      if (countDaysInMonth < this.key.day) {\n        this.key.day = countDaysInMonth;\n      }\n\n      this.key.month = month;\n      this.key.year = year;\n    }\n\n    nextMonthButtonAction() {\n      let month = this.key.month;\n      let year = this.key.year;\n      month++;\n\n      if (month === 13) {\n        month = 1;\n        year++;\n      }\n\n      const countDaysInMonth = this.helper.getCountDaysOfMonth(year, month - 1);\n\n      if (countDaysInMonth < this.key.day) {\n        this.key.day = countDaysInMonth;\n      }\n\n      this.key.month = month;\n      this.key.year = year;\n    }\n\n  }\n\n  DatePickerMenuComponent.ɵfac = function DatePickerMenuComponent_Factory(t) {\n    return new (t || DatePickerMenuComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(HelperService));\n  };\n\n  DatePickerMenuComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DatePickerMenuComponent,\n    selectors: [[\"sti-date-picker-menu\"]],\n    inputs: {\n      menu: \"menu\",\n      keyTo: \"keyTo\",\n      closeOnAction: \"closeOnAction\"\n    },\n    decls: 19,\n    vars: 16,\n    consts: [[\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\"], [1, \"stiJsViewerClearAllStyles\"], [3, \"imageName\", \"margin\", \"action\"], [3, \"width\", \"readOnly\", \"margin\", \"items\", \"key\", \"action\"], [3, \"width\", \"margin\", \"value\", \"onchange\"], [1, \"stiJsViewerDatePickerSeparator\", 2, \"margin\", \"2px 0px\"], [\"class\", \"stiJsViewerDatePickerDayOfWeekCell\", 3, \"fontSize\", \"color\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"stiJsViewerClearAllStyles\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"stiJsViewerDatePickerSeparator\", \"style\", \"margin: 2px 0px;\", 4, \"ngIf\"], [\"class\", \"stiJsViewerClearAllStyles\", \"cellpadding\", \"0\", \"cellspacing\", \"0\", \"style\", \"width:100%\", 4, \"ngIf\"], [1, \"stiJsViewerDatePickerDayOfWeekCell\"], [3, \"col\", \"row\", \"date\", \"selected\", \"caption\", \"enabled\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\", 2, \"width\", \"100%\"], [1, \"stiJsViewerClearAllStyles\", 2, \"padding\", \"0 4px 0 4px\", \"white-space\", \"nowrap\"], [1, \"stiJsViewerClearAllStyles\", 2, \"text-align\", \"right\"], [3, \"width\", \"margin\", \"value\", \"action\"]],\n    template: function DatePickerMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0);\n        i0.ɵɵelementStart(1, \"tbody\");\n        i0.ɵɵelementStart(2, \"tr\", 1);\n        i0.ɵɵelementStart(3, \"td\", 1);\n        i0.ɵɵelementStart(4, \"sti-button\", 2);\n        i0.ɵɵlistener(\"action\", function DatePickerMenuComponent_Template_sti_button_action_4_listener() {\n          return ctx.prevMonthButtonAction();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"td\", 1);\n        i0.ɵɵelementStart(6, \"sti-drop-down-list\", 3);\n        i0.ɵɵlistener(\"action\", function DatePickerMenuComponent_Template_sti_drop_down_list_action_6_listener($event) {\n          return ctx.key.month = $event.key + 1;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"td\", 1);\n        i0.ɵɵelementStart(8, \"sti-text-box\", 4);\n        i0.ɵɵlistener(\"onchange\", function DatePickerMenuComponent_Template_sti_text_box_onchange_8_listener($event) {\n          return ctx.yearAction($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"td\", 1);\n        i0.ɵɵelementStart(10, \"sti-button\", 2);\n        i0.ɵɵlistener(\"action\", function DatePickerMenuComponent_Template_sti_button_action_10_listener() {\n          return ctx.nextMonthButtonAction();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"div\", 5);\n        i0.ɵɵelementStart(12, \"table\", 0);\n        i0.ɵɵelementStart(13, \"tbody\");\n        i0.ɵɵelementStart(14, \"tr\", 1);\n        i0.ɵɵtemplate(15, DatePickerMenuComponent_td_15_Template, 2, 5, \"td\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, DatePickerMenuComponent_tr_16_Template, 2, 1, \"tr\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, DatePickerMenuComponent_div_17_Template, 1, 0, \"div\", 8);\n        i0.ɵɵtemplate(18, DatePickerMenuComponent_table_18_Template, 7, 4, \"table\", 9);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"imageName\", \"Arrows.BigArrowLeft.png\")(\"margin\", \"1px 2px 0 1px\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"width\", ctx.model.options.isTouchDevice ? 79 : 81)(\"readOnly\", true)(\"margin\", \"1px 2px 0 0\")(\"items\", ctx.monthesForDatePickerItems)(\"key\", ctx.key.month - 1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"width\", 40)(\"margin\", \"1px 2px 0 0\")(\"value\", ctx.key.year);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"imageName\", \"Arrows.BigArrowRight.png\")(\"margin\", \"1px 1px 0 0\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.model.dayOfWeek);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.rows);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showTime);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showTime);\n      }\n    },\n    directives: [ButtonComponent, DropDownListComponent, TextBoxComponent, i7.NgForOf, i7.NgIf, DatePickerDayButtonComponent],\n    encapsulation: 2\n  });\n  return DatePickerMenuComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet DoubleDatePickerMenuComponent = /*#__PURE__*/(() => {\n  class DoubleDatePickerMenuComponent {\n    constructor(model, helper) {\n      this.model = model;\n      this.helper = helper;\n    }\n\n    ngOnInit() {}\n\n    get showTime() {\n      var _a, _b;\n\n      return ((_b = (_a = this.menu) === null || _a === void 0 ? void 0 : _a.params) === null || _b === void 0 ? void 0 : _b.dateTimeType) !== 'Date';\n    }\n\n    setTimeInterval(firstDate, secondDate) {\n      firstDate.setHours(0);\n      firstDate.setMinutes(0);\n      firstDate.setSeconds(0);\n      secondDate.setHours(23);\n      secondDate.setMinutes(59);\n      secondDate.setSeconds(59);\n    }\n\n    getFirstDayOfWeek() {\n      const date = new Date();\n      const timeString = date.toLocaleTimeString();\n      return timeString.toLowerCase().indexOf('am') >= 0 || timeString.toLowerCase().indexOf('pm') >= 0 ? 0 : 1;\n    }\n\n    getWeekInterval(now) {\n      const startDay = this.getFirstDayOfWeek();\n      let dayWeek = startDay === 0 ? now.getDay() : now.getDay() - 1;\n\n      if (dayWeek < 0) {\n        dayWeek = 6;\n      }\n\n      const values = [new Date(now.valueOf() - dayWeek * 86400000)];\n      values.push(new Date(values[0].valueOf() + 6 * 86400000));\n      this.setTimeInterval(values[0], values[1]);\n      return values;\n    }\n\n    getValuesByDateRangeName(item) {\n      const now = new Date();\n      let values = [new Date(), new Date()];\n\n      switch (item) {\n        case 'CurrentMonth':\n          {\n            values[0].setDate(1);\n            values[1].setDate(this.helper.getCountDaysOfMonth(now.getFullYear(), now.getMonth()));\n            break;\n          }\n\n        case 'CurrentQuarter':\n          {\n            const firstMonth = parseInt((now.getMonth() / 3).toString(), 10) * 3;\n            values[0] = new Date(now.getFullYear(), firstMonth, 1);\n            values[1] = new Date(now.getFullYear(), firstMonth + 2, this.helper.getCountDaysOfMonth(now.getFullYear(), firstMonth + 2));\n            break;\n          }\n\n        case 'CurrentWeek':\n          {\n            values = this.getWeekInterval(now);\n            break;\n          }\n\n        case 'CurrentYear':\n          {\n            values[0] = new Date(now.getFullYear(), 0, 1);\n            values[1] = new Date(now.getFullYear(), 11, 31);\n            break;\n          }\n\n        case 'NextMonth':\n          {\n            let month = now.getMonth() + 1;\n            let year = now.getFullYear();\n\n            if (month > 11) {\n              month = 0;\n              year++;\n            }\n\n            values[0] = new Date(year, month, 1);\n            values[1] = new Date(year, month, this.helper.getCountDaysOfMonth(year, month));\n            break;\n          }\n\n        case 'NextQuarter':\n          {\n            let year = now.getFullYear();\n            let firstMonth = parseInt((now.getMonth() / 3).toString(), 10) * 3 + 3;\n\n            if (firstMonth > 11) {\n              firstMonth = 0;\n              year++;\n            }\n\n            values[0] = new Date(year, firstMonth, 1);\n            values[1] = new Date(year, firstMonth + 2, this.helper.getCountDaysOfMonth(year, firstMonth + 2));\n            break;\n          }\n\n        case 'NextWeek':\n          {\n            values = this.getWeekInterval(now);\n            values[0] = new Date(values[0].valueOf() + 7 * 86400000);\n            values[1] = new Date(values[1].valueOf() + 7 * 86400000);\n            break;\n          }\n\n        case 'NextYear':\n          {\n            values[0] = new Date(now.getFullYear() + 1, 0, 1);\n            values[1] = new Date(now.getFullYear() + 1, 11, 31);\n            break;\n          }\n\n        case 'PreviousMonth':\n          {\n            let month = now.getMonth() - 1;\n            let year = now.getFullYear();\n\n            if (month < 0) {\n              month = 11;\n              year--;\n            }\n\n            values[0] = new Date(year, month, 1);\n            values[1] = new Date(year, month, this.helper.getCountDaysOfMonth(year, month));\n            break;\n          }\n\n        case 'PreviousQuarter':\n          {\n            let year = now.getFullYear();\n            let firstMonth = parseInt((now.getMonth() / 3).toString(), 10) * 3 - 3;\n\n            if (firstMonth < 0) {\n              firstMonth = 9;\n              year--;\n            }\n\n            values[0] = new Date(year, firstMonth, 1);\n            values[1] = new Date(year, firstMonth + 2, this.helper.getCountDaysOfMonth(year, firstMonth + 2));\n            break;\n          }\n\n        case 'PreviousWeek':\n          {\n            values = this.getWeekInterval(now);\n            values[0] = new Date(values[0].valueOf() - 7 * 86400000);\n            values[1] = new Date(values[1].valueOf() - 7 * 86400000);\n            break;\n          }\n\n        case 'PreviousYear':\n          {\n            values[0] = new Date(now.getFullYear() - 1, 0, 1);\n            values[1] = new Date(now.getFullYear() - 1, 11, 31);\n            break;\n          }\n\n        case 'FirstQuarter':\n          {\n            values[0] = new Date(now.getFullYear(), 0, 1);\n            values[1] = new Date(now.getFullYear(), 2, this.helper.getCountDaysOfMonth(now.getFullYear(), 2));\n            break;\n          }\n\n        case 'SecondQuarter':\n          {\n            values[0] = new Date(now.getFullYear(), 3, 1);\n            values[1] = new Date(now.getFullYear(), 5, this.helper.getCountDaysOfMonth(now.getFullYear(), 5));\n            break;\n          }\n\n        case 'ThirdQuarter':\n          {\n            values[0] = new Date(now.getFullYear(), 6, 1);\n            values[1] = new Date(now.getFullYear(), 8, this.helper.getCountDaysOfMonth(now.getFullYear(), 8));\n            break;\n          }\n\n        case 'FourthQuarter':\n          {\n            values[0] = new Date(now.getFullYear(), 9, 1);\n            values[1] = new Date(now.getFullYear(), 11, this.helper.getCountDaysOfMonth(now.getFullYear(), 11));\n            break;\n          }\n\n        case 'MonthToDate':\n          {\n            values[0].setDate(1);\n            break;\n          }\n\n        case 'QuarterToDate':\n          {\n            const firstMonth = parseInt((now.getMonth() / 3).toString(), 10) * 3;\n            values[0].setDate(1);\n            values[0].setMonth(firstMonth);\n            break;\n          }\n\n        case 'WeekToDate':\n          {\n            const weekValues = this.getWeekInterval(now);\n            values[0] = weekValues[0];\n            break;\n          }\n\n        case 'YearToDate':\n          {\n            values[0].setDate(1);\n            values[0].setMonth(0);\n            break;\n          }\n\n        case 'Today':\n          {\n            break;\n          }\n\n        case 'Tomorrow':\n          {\n            values[0] = new Date(values[0].valueOf() + 86400000);\n            values[1] = new Date(values[1].valueOf() + 86400000);\n            break;\n          }\n\n        case 'Yesterday':\n          {\n            values[0] = new Date(values[0].valueOf() - 86400000);\n            values[1] = new Date(values[1].valueOf() - 86400000);\n            break;\n          }\n\n        case 'Last7Days':\n          {\n            if (this.model.options.appearance.datePickerIncludeCurrentDayForRanges) {\n              values[0] = new Date(values[0].valueOf() - 6 * 86400000);\n            } else {\n              values[0] = new Date(values[0].valueOf() - 7 * 86400000);\n            }\n\n            break;\n          }\n\n        case 'Last14Days':\n          {\n            if (this.model.options.appearance.datePickerIncludeCurrentDayForRanges) {\n              values[0] = new Date(values[0].valueOf() - 13 * 86400000);\n            } else {\n              values[0] = new Date(values[0].valueOf() - 14 * 86400000);\n            }\n\n            break;\n          }\n\n        case 'Last30Days':\n          {\n            if (this.model.options.appearance.datePickerIncludeCurrentDayForRanges) {\n              values[0] = new Date(values[0].valueOf() - 29 * 86400000);\n            } else {\n              values[0] = new Date(values[0].valueOf() - 30 * 86400000);\n            }\n\n            break;\n          }\n      }\n\n      this.setTimeInterval(values[0], values[1]);\n      this.menu.params.key = this.helper.getDateTimeObject(values[0]);\n      this.menu.params.keyTo = this.helper.getDateTimeObject(values[1]);\n    }\n\n  }\n\n  DoubleDatePickerMenuComponent.ɵfac = function DoubleDatePickerMenuComponent_Factory(t) {\n    return new (t || DoubleDatePickerMenuComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(HelperService));\n  };\n\n  DoubleDatePickerMenuComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DoubleDatePickerMenuComponent,\n    selectors: [[\"sti-double-date-picker-menu\"]],\n    inputs: {\n      menu: \"menu\"\n    },\n    decls: 12,\n    vars: 8,\n    consts: [[\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\", 2, \"margin\", \"4px\", \"border\", \"1px dotted rgb(198, 198, 198)\"], [1, \"stiJsViewerClearAllStyles\"], [1, \"stiJsViewerClearAllStyles\", 2, \"vertical-align\", \"top\"], [2, \"margin\", \"4px\"], [3, \"menu\", \"closeOnAction\"], [1, \"stiJsViewerClearAllStyles\", 2, \"border-left\", \"1px dotted rgb(198, 198, 198)\", \"vertical-align\", \"top\"], [3, \"menu\", \"keyTo\", \"closeOnAction\"], [2, \"width\", \"150px\", \"overflow\", \"auto\", \"margin\", \"4px\"], [4, \"ngFor\", \"ngForOf\"], [3, \"caption\", \"action\"], [\"class\", \"stiJsViewerVerticalMenuSeparator\", \"style\", \"margin:2px\", 4, \"ngIf\"], [1, \"stiJsViewerVerticalMenuSeparator\", 2, \"margin\", \"2px\"]],\n    template: function DoubleDatePickerMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0);\n        i0.ɵɵelementStart(1, \"tbody\");\n        i0.ɵɵelementStart(2, \"tr\", 1);\n        i0.ɵɵelementStart(3, \"td\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelement(5, \"sti-date-picker-menu\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"td\", 5);\n        i0.ɵɵelementStart(7, \"div\", 3);\n        i0.ɵɵelement(8, \"sti-date-picker-menu\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"td\", 5);\n        i0.ɵɵelementStart(10, \"div\", 7);\n        i0.ɵɵtemplate(11, DoubleDatePickerMenuComponent_ng_container_11_Template, 3, 2, \"ng-container\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"menu\", ctx.menu)(\"closeOnAction\", false);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"menu\", ctx.menu)(\"keyTo\", true)(\"closeOnAction\", false);\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleProp(\"height\", ctx.showTime ? 250 : 220, \"px\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.model.dateRanges);\n      }\n    },\n    directives: [DatePickerMenuComponent, i7.NgForOf, ButtonComponent, i7.NgIf],\n    encapsulation: 2\n  });\n  return DoubleDatePickerMenuComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet DocumentSecurityMenuComponent = /*#__PURE__*/(() => {\n  class DocumentSecurityMenuComponent {\n    constructor(model, formService, exportService, collections) {\n      this.model = model;\n      this.formService = formService;\n      this.exportService = exportService;\n      this.collections = collections;\n    }\n\n    ngOnInit() {}\n\n    getTextBoxType() {\n      var _a;\n\n      return ((_a = this.formService.form) === null || _a === void 0 ? void 0 : _a.name) === 'exportForm' ? 'password' : '';\n    }\n\n    updateUserAccessPrivileges() {\n      const privileges = [];\n\n      if (this.allowPrintDocument.isChecked) {\n        privileges.push('PrintDocument');\n      }\n\n      if (this.allowModifyContents.isChecked) {\n        privileges.push('ModifyContents');\n      }\n\n      if (this.allowCopyTextAndGraphics.isChecked) {\n        privileges.push('CopyTextAndGraphics');\n      }\n\n      if (this.allowAddOrModifyTextAnnotations.isChecked) {\n        privileges.push('AddOrModifyTextAnnotations');\n      }\n\n      this.exportService.exportSettings.UserAccessPrivileges = privileges.join(',');\n    }\n\n    getUserAccessPrivileges(name) {\n      var _a, _b, _c;\n\n      return ((_a = this.exportService.exportSettings) === null || _a === void 0 ? void 0 : _a.UserAccessPrivileges) === 'All' || ((_c = (_b = this.exportService.exportSettings) === null || _b === void 0 ? void 0 : _b.UserAccessPrivileges) === null || _c === void 0 ? void 0 : _c.indexOf(name)) >= 0;\n    }\n\n  }\n\n  DocumentSecurityMenuComponent.ɵfac = function DocumentSecurityMenuComponent_Factory(t) {\n    return new (t || DocumentSecurityMenuComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(FormService), i0.ɵɵdirectiveInject(ExportService), i0.ɵɵdirectiveInject(CollectionsService));\n  };\n\n  DocumentSecurityMenuComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DocumentSecurityMenuComponent,\n    selectors: [[\"sti-document-security-menu\"]],\n    viewQuery: function DocumentSecurityMenuComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c18, 5);\n        i0.ɵɵviewQuery(_c19, 5);\n        i0.ɵɵviewQuery(_c20, 5);\n        i0.ɵɵviewQuery(_c21, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.allowPrintDocument = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.allowModifyContents = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.allowCopyTextAndGraphics = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.allowAddOrModifyTextAnnotations = _t.first);\n      }\n    },\n    decls: 33,\n    vars: 36,\n    consts: [[\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\", 2, \"width\", \"100%\"], [1, \"stiJsViewerClearAllStyles\"], [2, \"padding\", \"0px 8px\", \"min-width\", \"150px\"], [3, \"width\", \"tooltip\", \"margin\", \"type\", \"value\", \"onchange\"], [\"colspan\", \"2\", 1, \"stiJsViewerClearAllStyles\"], [3, \"captionText\", \"tooltip\", \"margin\", \"isChecked\", \"action\"], [\"AllowPrintDocument\", \"\"], [\"AllowModifyContents\", \"\"], [\"AllowCopyTextAndGraphics\", \"\"], [\"AllowAddOrModifyTextAnnotations\", \"\"], [1, \"stiJsViewerClearAllStyles\", 2, \"padding\", \"0px 8px\", \"min-width\", \"150px\"], [3, \"width\", \"items\", \"key\", \"margin\", \"action\"]],\n    template: function DocumentSecurityMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0);\n        i0.ɵɵelementStart(1, \"tbody\");\n        i0.ɵɵelementStart(2, \"tr\", 1);\n        i0.ɵɵelementStart(3, \"td\", 2);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"td\", 1);\n        i0.ɵɵelementStart(6, \"sti-text-box\", 3);\n        i0.ɵɵlistener(\"onchange\", function DocumentSecurityMenuComponent_Template_sti_text_box_onchange_6_listener($event) {\n          return ctx.exportService.exportSettings.PasswordInputUser = $event.value;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"tr\", 1);\n        i0.ɵɵelementStart(8, \"td\", 2);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"td\", 1);\n        i0.ɵɵelementStart(11, \"sti-text-box\", 3);\n        i0.ɵɵlistener(\"onchange\", function DocumentSecurityMenuComponent_Template_sti_text_box_onchange_11_listener($event) {\n          return ctx.exportService.exportSettings.PasswordInputOwner = $event.value;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"tr\", 1);\n        i0.ɵɵelementStart(13, \"td\", 4);\n        i0.ɵɵelementStart(14, \"sti-check-box\", 5, 6);\n        i0.ɵɵlistener(\"action\", function DocumentSecurityMenuComponent_Template_sti_check_box_action_14_listener() {\n          return ctx.updateUserAccessPrivileges();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"tr\", 1);\n        i0.ɵɵelementStart(17, \"td\", 4);\n        i0.ɵɵelementStart(18, \"sti-check-box\", 5, 7);\n        i0.ɵɵlistener(\"action\", function DocumentSecurityMenuComponent_Template_sti_check_box_action_18_listener() {\n          return ctx.updateUserAccessPrivileges();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"tr\", 1);\n        i0.ɵɵelementStart(21, \"td\", 4);\n        i0.ɵɵelementStart(22, \"sti-check-box\", 5, 8);\n        i0.ɵɵlistener(\"action\", function DocumentSecurityMenuComponent_Template_sti_check_box_action_22_listener() {\n          return ctx.updateUserAccessPrivileges();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"tr\", 1);\n        i0.ɵɵelementStart(25, \"td\", 4);\n        i0.ɵɵelementStart(26, \"sti-check-box\", 5, 9);\n        i0.ɵɵlistener(\"action\", function DocumentSecurityMenuComponent_Template_sti_check_box_action_26_listener() {\n          return ctx.updateUserAccessPrivileges();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"tr\", 1);\n        i0.ɵɵelementStart(29, \"td\", 10);\n        i0.ɵɵtext(30);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"td\");\n        i0.ɵɵelementStart(32, \"sti-drop-down-list-for-export-form\", 11);\n        i0.ɵɵlistener(\"action\", function DocumentSecurityMenuComponent_Template_sti_drop_down_list_for_export_form_action_32_listener($event) {\n          return ctx.exportService.exportSettings.KeyLength = $event.key;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵattribute(\"title\", ctx.model.loc(\"UserPasswordTooltip\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.model.loc(\"UserPassword\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"width\", 160)(\"tooltip\", ctx.model.loc(\"UserPasswordTooltip\"))(\"margin\", \"8px 8px 2px 8px\")(\"type\", ctx.getTextBoxType())(\"value\", ctx.exportService.exportSettings == null ? null : ctx.exportService.exportSettings.PasswordInputUser);\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"title\", ctx.model.loc(\"OwnerPasswordTooltip\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.model.loc(\"OwnerPassword\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"width\", 160)(\"tooltip\", ctx.model.loc(\"OwnerPasswordTooltip\"))(\"margin\", \"2px 8px 2px 8px\")(\"type\", ctx.getTextBoxType())(\"value\", ctx.exportService.exportSettings == null ? null : ctx.exportService.exportSettings.PasswordInputOwner);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"captionText\", ctx.model.loc(\"AllowPrintDocument\"))(\"tooltip\", ctx.model.loc(\"AllowPrintDocumentTooltip\"))(\"margin\", \"4px 8px 4px 8px\")(\"isChecked\", ctx.getUserAccessPrivileges(\"PrintDocument\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"captionText\", ctx.model.loc(\"AllowModifyContents\"))(\"tooltip\", ctx.model.loc(\"AllowModifyContentsTooltip\"))(\"margin\", \"4px 8px 4px 8px\")(\"isChecked\", ctx.getUserAccessPrivileges(\"ModifyContents\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"captionText\", ctx.model.loc(\"AllowCopyTextAndGraphics\"))(\"tooltip\", ctx.model.loc(\"AllowCopyTextAndGraphicsTooltip\"))(\"margin\", \"4px 8px 4px 8px\")(\"isChecked\", ctx.getUserAccessPrivileges(\"CopyTextAndGraphics\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"captionText\", ctx.model.loc(\"AllowAddOrModifyTextAnnotations\"))(\"tooltip\", ctx.model.loc(\"AllowAddOrModifyTextAnnotationsTooltip\"))(\"margin\", \"4px 8px 4px 8px\")(\"isChecked\", ctx.getUserAccessPrivileges(\"AddOrModifyTextAnnotations\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵattribute(\"title\", ctx.model.loc(\"EncryptionKeyLengthTooltip\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.model.loc(\"EncryptionKeyLength\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"width\", 160)(\"items\", ctx.collections.getEncryptionKeyLengthItems())(\"key\", ctx.exportService.exportSettings == null ? null : ctx.exportService.exportSettings.KeyLength)(\"margin\", \"2px 8px 4px 8px\");\n      }\n    },\n    directives: [TextBoxComponent, CheckboxComponent, DropDownListForExportFormComponent],\n    encapsulation: 2\n  });\n  return DocumentSecurityMenuComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet DigitalSignatureMenuComponent = /*#__PURE__*/(() => {\n  class DigitalSignatureMenuComponent {\n    constructor(model, exportService) {\n      this.model = model;\n      this.exportService = exportService;\n    }\n\n    ngOnInit() {}\n\n  }\n\n  DigitalSignatureMenuComponent.ɵfac = function DigitalSignatureMenuComponent_Factory(t) {\n    return new (t || DigitalSignatureMenuComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(ExportService));\n  };\n\n  DigitalSignatureMenuComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DigitalSignatureMenuComponent,\n    selectors: [[\"sti-digital-signature-menu\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"stiJsViewerMenuStandartItem stiJsViewerMenuStandartItemSelected\", \"style\", \"height: auto; line-height: 1.3;\", 4, \"ngFor\", \"ngForOf\"], [1, \"stiJsViewerMenuStandartItem\", \"stiJsViewerMenuStandartItemSelected\", 2, \"height\", \"auto\", \"line-height\", \"1.3\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\", 2, \"height\", \"100%\", \"width\", \"100%\"], [1, \"stiJsViewerClearAllStyles\"], [1, \"stiJsViewerClearAllStyles\", 2, \"padding\", \"8px 20px 8px 8px\", \"text-align\", \"left\", \"white-space\", \"nowrap\"]],\n    template: function DigitalSignatureMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, DigitalSignatureMenuComponent_div_0_Template, 5, 0, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.model.pdfSecurityCertificates);\n      }\n    },\n    directives: [i7.NgForOf],\n    encapsulation: 2\n  });\n  return DigitalSignatureMenuComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet VerticalMenuItemComponent = /*#__PURE__*/(() => {\n  class VerticalMenuItemComponent {\n    constructor(model, menuService) {\n      this.model = model;\n      this.menuService = menuService;\n      this.styleName = 'stiJsViewerMenuStandartItem';\n      this.action = new EventEmitter();\n      this.over = false;\n      this._enabled = true;\n    }\n\n    ngOnInit() {}\n\n    get enabled() {\n      return this._enabled;\n    }\n\n    set enabled(value) {\n      if (!value) {\n        this.over = false;\n      }\n\n      this._enabled = value;\n    }\n\n    get className() {\n      var _a;\n\n      return this.styleName ? this.styleName + ' ' + (this.enabled ? this.styleName + (this.over ? 'Over' : ((_a = this.item) === null || _a === void 0 ? void 0 : _a.selected) ? 'Selected' : 'Default') : this.styleName + 'Disabled') : '';\n    }\n\n    mouseover() {\n      if (!this.enabled) {\n        return;\n      }\n\n      this.over = true;\n    }\n\n    mouseout() {\n      if (!this.enabled) {\n        return;\n      }\n\n      this.over = false;\n    }\n\n    click() {\n      if (this._enabled) {\n        this.action.emit(this.item);\n      }\n    }\n\n    get isSmallItem() {\n      return this.styleName && this.styleName.indexOf('MenuStandartItem') >= 0;\n    }\n\n  }\n\n  VerticalMenuItemComponent.ɵfac = function VerticalMenuItemComponent_Factory(t) {\n    return new (t || VerticalMenuItemComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(MenuService));\n  };\n\n  VerticalMenuItemComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: VerticalMenuItemComponent,\n    selectors: [[\"sti-vertical-menu-item\"]],\n    inputs: {\n      styleName: \"styleName\",\n      item: \"item\",\n      imageSizesWidth: \"imageSizesWidth\",\n      imageSizesHeight: \"imageSizesHeight\",\n      enabled: \"enabled\"\n    },\n    outputs: {\n      action: \"action\"\n    },\n    decls: 10,\n    vars: 14,\n    consts: [[3, \"mouseover\", \"mouseout\", \"click\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\", 2, \"height\", \"100%\", \"width\", \"100%\"], [1, \"stiJsViewerClearAllStyles\"], [\"style\", \"width:22px; min-width = 22px; padding: 0; textAlign: center; lineHeight: 0\", \"class\", \"stiJsViewerClearAllStyles\", 4, \"ngIf\"], [\"style\", \"padding: 0px 20px 0px 7px; text-align: left; white-space: nowrap;\", \"class\", \"stiJsViewerClearAllStyles\", 3, \"fontSize\", 4, \"ngIf\"], [\"style\", \"padding: 8px 20px 8px 8px ; text-align: left; white-space: nowrap;\", \"class\", \"stiJsViewerClearAllStyles\", 3, \"fontSize\", \"innerHtml\", 4, \"ngIf\"], [\"style\", \"padding: 8px 20px 8px 8px; text-align: right; white-space: nowrap;\", \"class\", \"stiJsViewerClearAllStyles\", 3, \"fontSize\", \"innerHtml\", 4, \"ngIf\"], [\"style\", \"padding: 0 7px 0 20px; text-align: right; white-space: nowrap;\", \"class\", \"stiJsViewerClearAllStyles\", 3, \"fontSize\", 4, \"ngIf\"], [1, \"stiJsViewerClearAllStyles\", 2, \"width\", \"22px\", \"min-width = 22px; padding\", \"0\", \"text-align\", \"center\", \"line-height\", \"0\"], [3, \"src\"], [1, \"stiJsViewerClearAllStyles\", 2, \"padding\", \"0px 20px 0px 7px\", \"text-align\", \"left\", \"white-space\", \"nowrap\"], [1, \"stiJsViewerClearAllStyles\", 2, \"padding\", \"8px 20px 8px 8px\", \"text-align\", \"left\", \"white-space\", \"nowrap\", 3, \"innerHtml\"], [1, \"stiJsViewerClearAllStyles\", 2, \"padding\", \"8px 20px 8px 8px\", \"text-align\", \"right\", \"white-space\", \"nowrap\", 3, \"innerHtml\"], [1, \"stiJsViewerClearAllStyles\", 2, \"padding\", \"0 7px 0 20px\", \"text-align\", \"right\", \"white-space\", \"nowrap\"]],\n    template: function VerticalMenuItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"mouseover\", function VerticalMenuItemComponent_Template_div_mouseover_0_listener() {\n          return ctx.mouseover();\n        })(\"mouseout\", function VerticalMenuItemComponent_Template_div_mouseout_0_listener() {\n          return ctx.mouseout();\n        })(\"click\", function VerticalMenuItemComponent_Template_div_click_0_listener() {\n          return ctx.click();\n        });\n        i0.ɵɵelementStart(1, \"table\", 1);\n        i0.ɵɵelementStart(2, \"tbody\");\n        i0.ɵɵelementStart(3, \"tr\", 2);\n        i0.ɵɵtemplate(4, VerticalMenuItemComponent_td_4_Template, 2, 7, \"td\", 3);\n        i0.ɵɵtemplate(5, VerticalMenuItemComponent_td_5_Template, 2, 3, \"td\", 4);\n        i0.ɵɵtemplate(6, VerticalMenuItemComponent_td_6_Template, 1, 3, \"td\", 5);\n        i0.ɵɵtemplate(7, VerticalMenuItemComponent_td_7_Template, 1, 3, \"td\", 6);\n        i0.ɵɵtemplate(8, VerticalMenuItemComponent_td_8_Template, 2, 3, \"td\", 7);\n        i0.ɵɵtemplate(9, VerticalMenuItemComponent_td_9_Template, 2, 7, \"td\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.className);\n        i0.ɵɵstyleProp(\"height\", (ctx.item == null ? null : ctx.item.type) == \"DigitalSignature\" ? \"auto\" : ctx.model.options.isMobileDevice ? \"0.4in\" : ctx.model.options.isTouchDevice ? \"30px\" : \"24px\")(\"width\", (ctx.item == null ? null : ctx.item.type) == \"DigitalSignature\" ? \"100%\" : ctx.menuService.getVerticalMenu().width + \"px\")(\"line-height\", (ctx.item == null ? null : ctx.item.type) == \"DigitalSignature\" ? 1.3 : null);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", (ctx.item == null ? null : ctx.item.imageName) != null && !ctx.model.options.appearance.rightToLeft);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.item == null ? null : ctx.item.caption) != null && !ctx.model.options.appearance.rightToLeft && (ctx.item == null ? null : ctx.item.type) != \"DigitalSignature\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.item == null ? null : ctx.item.caption) != null && !ctx.model.options.appearance.rightToLeft && (ctx.item == null ? null : ctx.item.type) == \"DigitalSignature\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.item == null ? null : ctx.item.caption) != null && ctx.model.options.appearance.rightToLeft && (ctx.item == null ? null : ctx.item.type) == \"DigitalSignature\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.item == null ? null : ctx.item.caption) != null && ctx.model.options.appearance.rightToLeft && (ctx.item == null ? null : ctx.item.type) != \"DigitalSignature\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.item == null ? null : ctx.item.imageName) != null && ctx.model.options.appearance.rightToLeft);\n      }\n    },\n    directives: [i7.NgIf],\n    encapsulation: 2\n  });\n  return VerticalMenuItemComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet VerticalMenuComponent = /*#__PURE__*/(() => {\n  class VerticalMenuComponent {\n    constructor() {}\n\n    ngOnInit() {}\n\n    action(item) {\n      var _a, _b;\n\n      (_b = (_a = this.menu) === null || _a === void 0 ? void 0 : _a.action) === null || _b === void 0 ? void 0 : _b.emit(item);\n    }\n\n  }\n\n  VerticalMenuComponent.ɵfac = function VerticalMenuComponent_Factory(t) {\n    return new (t || VerticalMenuComponent)();\n  };\n\n  VerticalMenuComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: VerticalMenuComponent,\n    selectors: [[\"sti-vertical-menu\"]],\n    inputs: {\n      menu: \"menu\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"item\", \"styleName\", \"action\", 4, \"ngFor\", \"ngForOf\"], [3, \"item\", \"styleName\", \"action\"]],\n    template: function VerticalMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, VerticalMenuComponent_sti_vertical_menu_item_0_Template, 1, 2, \"sti-vertical-menu-item\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.menu.verticalItems);\n      }\n    },\n    directives: [i7.NgForOf, VerticalMenuItemComponent],\n    encapsulation: 2\n  });\n  return VerticalMenuComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet MenuComponent = /*#__PURE__*/(() => {\n  class MenuComponent {\n    constructor(model, controller, helper, menuService) {\n      this.model = model;\n      this.controller = controller;\n      this.helper = helper;\n      this.menuService = menuService;\n      this.style = 'display: none';\n      this.overflow = 'hidden';\n    }\n\n    ngAfterViewInit() {\n      this.menu.menuEl = this.menuEl;\n      this.menu.innerContent = this.innerContent;\n    }\n\n    ngOnInit() {}\n\n    startAnimation(event) {\n      if (event.toState === 'expanded') {\n        this.style = 'width: 350px; overflow: hidden';\n        this.overflow = 'hidden';\n      }\n    }\n\n    doneAnimation(event) {\n      if (event.toState === 'expanded') {\n        this.style = 'overflow: visible;';\n        this.overflow = this.menu.type.indexOf('parameterMenu') === 0 || this.model.options.isMobileDevice ? 'auto' : 'hidden';\n      } else if (event.toState === 'initialUp' || event.toState === 'initialDown') {\n        this.style = 'display: none';\n        this.overflow = 'hidden';\n      }\n    }\n\n    menuClick(item) {\n      this.menuService.closeAllMenus();\n      this.controller.action({\n        name: item.name,\n        value: item.value\n      });\n    }\n\n    mouseup() {\n      this.menuService.menuMouseUp = this.menu.type;\n    }\n\n    get zIndex() {\n      return this.menu.type === 'datePickerMenu' ? 36 : this.menu.type === 'verticalMenu' ? 37 : 35;\n    }\n\n  }\n\n  MenuComponent.ɵfac = function MenuComponent_Factory(t) {\n    return new (t || MenuComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(ControllerService), i0.ɵɵdirectiveInject(HelperService), i0.ɵɵdirectiveInject(MenuService));\n  };\n\n  MenuComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MenuComponent,\n    selectors: [[\"sti-menu\"]],\n    viewQuery: function MenuComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c22, 5);\n        i0.ɵɵviewQuery(_c23, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.menuEl = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.innerContent = _t.first);\n      }\n    },\n    inputs: {\n      menu: \"menu\"\n    },\n    decls: 14,\n    vars: 36,\n    consts: [[1, \"stiJsViewerParentMenu\", 3, \"mouseup\"], [\"menuEl\", \"\"], [\"innerContent\", \"\"], [4, \"ngIf\"], [3, \"menu\", 4, \"ngIf\"], [3, \"item\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"item\", \"click\"], [3, \"menu\"]],\n    template: function MenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵlistener(\"mouseup\", function MenuComponent_Template_div_mouseup_0_listener() {\n          return ctx.mouseup();\n        });\n        i0.ɵɵelementStart(2, \"div\", null, 2);\n        i0.ɵɵlistener(\"@expand.start\", function MenuComponent_Template_div_animation_expand_start_2_listener($event) {\n          return ctx.startAnimation($event);\n        })(\"@expand.done\", function MenuComponent_Template_div_animation_expand_done_2_listener($event) {\n          return ctx.doneAnimation($event);\n        });\n        i0.ɵɵtemplate(4, MenuComponent_ng_container_4_Template, 2, 1, \"ng-container\", 3);\n        i0.ɵɵtemplate(5, MenuComponent_sti_parameter_menu_edit_list_5_Template, 1, 1, \"sti-parameter-menu-edit-list\", 4);\n        i0.ɵɵtemplate(6, MenuComponent_sti_parameter_menu_not_edit_list_6_Template, 1, 1, \"sti-parameter-menu-not-edit-list\", 4);\n        i0.ɵɵtemplate(7, MenuComponent_sti_parameter_menu_for_value_7_Template, 1, 1, \"sti-parameter-menu-for-value\", 4);\n        i0.ɵɵtemplate(8, MenuComponent_sti_parameter_menu_for_range_8_Template, 1, 1, \"sti-parameter-menu-for-range\", 4);\n        i0.ɵɵtemplate(9, MenuComponent_sti_date_picker_menu_9_Template, 1, 1, \"sti-date-picker-menu\", 4);\n        i0.ɵɵtemplate(10, MenuComponent_sti_double_date_picker_menu_10_Template, 1, 1, \"sti-double-date-picker-menu\", 4);\n        i0.ɵɵtemplate(11, MenuComponent_sti_document_security_menu_11_Template, 1, 0, \"sti-document-security-menu\", 3);\n        i0.ɵɵtemplate(12, MenuComponent_sti_digital_signature_menu_12_Template, 1, 0, \"sti-digital-signature-menu\", 3);\n        i0.ɵɵtemplate(13, MenuComponent_sti_vertical_menu_13_Template, 1, 1, \"sti-vertical-menu\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵstyleMap(ctx.menu.sizeStyle || ctx.style);\n        i0.ɵɵstyleProp(\"top\", ctx.menu.top, \"px\")(\"left\", ctx.menu.left, \"px\")(\"z-index\", ctx.zIndex)(\"height\", ctx.menu.type == \"buttonMenu\" && ctx.model.options.isMobileDevice ? \"100%\" : ctx.menu.height + \"px\");\n        i0.ɵɵproperty(\"@.disabled\", !ctx.model.options.toolbar.menuAnimation);\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction1(34, _c24, ctx.overflow));\n        i0.ɵɵclassMap(ctx.helper.val(ctx.menu.menuStyleName, \"stiJsViewerMenu\"));\n        i0.ɵɵstyleProp(\"color\", ctx.model.options.toolbar.fontColor)(\"font-family\", ctx.model.options.toolbar.fontFamily)(\"max-height\", ctx.menu.type == \"buttonMenu\" && ctx.model.options.isMobileDevice ? \"100%\" : \"450px\")(\"height\", ctx.menu.type == \"buttonMenu\" && ctx.model.options.isMobileDevice ? \"100%\" : null);\n        i0.ɵɵproperty(\"@expand\", ctx.menu.state || \"initialDown\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.menu.type == \"buttonMenu\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.menu.type == \"parameterMenuForEditList\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.menu.type == \"parameterMenuForNotEditList\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.menu.type == \"parameterMenuForValue\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.menu.type == \"parameterMenuForRange\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.menu.type == \"datePickerMenu\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.menu.type == \"doubleDatePickerMenu\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.menu.type == \"documentSecurityMenu\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.menu.type == \"useDigitalSignatureMenu\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.menu.type == \"verticalMenu\");\n      }\n    },\n    directives: [i7.NgIf, i7.NgForOf, MenuItemComponent, ParameterMenuEditListComponent, ParameterMenuNotEditListComponent, ParameterMenuForValueComponent, ParameterMenuForRangeComponent, DatePickerMenuComponent, DoubleDatePickerMenuComponent, DocumentSecurityMenuComponent, DigitalSignatureMenuComponent, VerticalMenuComponent],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('expand', [state('initialDown', style({\n        transform: 'translateY(-100%)'\n      })), state('initialUp', style({\n        transform: 'translateY(100%)'\n      })), state('initialLeft', style({\n        transform: 'translateX(-100%)'\n      })), state('expanded', style({\n        transform: 'translateY(0) translateX(0)'\n      })), transition('initialUp => expanded', [animate('150ms ease-in-out')]), transition('initialDown => expanded', [animate('150ms ease-in-out')]), transition('initialLeft => expanded', [animate('150ms ease-in-out')]), transition('expanded => initialLeft', [animate('150ms ease-in-out')])])]\n    }\n  });\n  return MenuComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet BookmarksPanelComponent = /*#__PURE__*/(() => {\n  class BookmarksPanelComponent {\n    constructor(model, helper, controller) {\n      this.model = model;\n      this.helper = helper;\n      this.controller = controller;\n      controller.getMessage().subscribe(message => {\n        if (message.action === 'GetReport' || message.action === 'OpenReport') {\n          setTimeout(() => {\n            if (this.model.reportParams.bookmarksContent != null) {\n              this.create();\n            }\n\n            this.model.controls.bookmarksPanel.visible = this.model.reportParams.bookmarksContent !== null && !this.model.options.isMobileDevice;\n          });\n        } else {\n          // Go to the bookmark, if it present\n          setTimeout(() => {\n            if (this.model.options.bookmarkAnchor != null) {\n              this.helper.scrollToAnchor(this.model.options.bookmarkAnchor, this.model.options.componentGuid);\n              this.model.options.bookmarkAnchor = null;\n              this.model.options.componentGuid = null;\n            }\n          });\n        }\n      });\n      this.model.controls.bookmarksPanel.getVisibility().subscribe(value => {\n        if (!value) {\n          this.helper.removeBookmarksLabel();\n          this.clearSelected();\n        }\n      });\n    }\n\n    ngAfterViewInit() {\n      this.model.controls.bookmarksPanel.el = this.element;\n    }\n\n    ngOnInit() {}\n\n    getImg1(node, i) {\n      var _a;\n\n      if (((_a = node.nodes) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n        return i !== this.model.nodes.length - 1 ? this.model.imagesForBookmark['join'] : this.model.imagesForBookmark['joinBottom'];\n      }\n\n      return node.open ? i === this.model.nodes.length - 1 ? this.model.imagesForBookmark['minusBottom'] : this.model.imagesForBookmark['minus'] : i === this.model.nodes.length - 1 ? this.model.imagesForBookmark['plusBottom'] : this.model.imagesForBookmark['plus'];\n    }\n\n    postAction(node) {\n      this.clearSelected();\n      this.controller.postBookmarkNodeAction(node);\n    }\n\n    clearSelected() {\n      var _a;\n\n      (_a = this.model.nodes) === null || _a === void 0 ? void 0 : _a.forEach(n => {\n        n.selected = false;\n        n.nodes.forEach(element => element.selected = false);\n      });\n    }\n\n    create() {\n      const bookmarks = this.model.reportParams.bookmarksContent.split('bookmarks.add(');\n      const root = bookmarks[1].replace('0,-1,\\'', '');\n      this.rootName = root.substr(0, root.indexOf('\\''));\n      const nodes = [];\n      this.parseNodes(bookmarks.splice(2), 0, nodes);\n      this.model.nodes = nodes;\n    }\n\n    parseNodes(bookmarks, index, nodes) {\n      let folder;\n      bookmarks.forEach(bookmark => {\n        const str = bookmark.substr(bookmark.indexOf(',') + 1);\n        const nodeType = parseInt(str.substr(0, str.indexOf(',')), 10);\n        const node = this.parseNode(str);\n\n        if (nodeType === 0) {\n          nodes.push(node);\n          folder = node;\n        } else {\n          folder.nodes.push(node);\n        }\n      });\n    }\n\n    parseNode(str) {\n      str = str.substr(str.indexOf(',') + 2);\n      const name = this.unescape(str.substr(0, str.indexOf('\\',')));\n      str = str.substr(str.indexOf('\\',') + 3);\n      const url = str.substr(0, str.indexOf('\\','));\n      str = str.substr(str.indexOf('\\',') + 3);\n      const pageTitle = str.substr(0, str.indexOf('\\','));\n      str = str.substr(str.indexOf('\\',') + 3);\n      const componentGuid = str.substr(0, str.length - 3);\n      return {\n        name,\n        url,\n        page: parseInt(pageTitle.substr(5), 10) - 1,\n        compunentGuid: componentGuid,\n        nodes: [],\n        open: false,\n        selected: false\n      };\n    }\n\n    unescape(str) {\n      return str.replace(/\\\\&apos;/g, '\\'').replace(/\\\\&quot;/g, '\"').replace(/\\\\&gt;/g, '>').replace(/\\\\&lt;/g, '<').replace(/\\\\&amp;/g, '&');\n    }\n\n    get bottom() {\n      if (this.model.options.isMobileDevice) {\n        return this.model.options.toolbar.autoHide ? '0' : '0.5in';\n      } else {\n        return this.model.options.toolbar.displayMode === 'Separated' && this.model.options.toolbar.visible ? '35px' : '0';\n      }\n    }\n\n  }\n\n  BookmarksPanelComponent.ɵfac = function BookmarksPanelComponent_Factory(t) {\n    return new (t || BookmarksPanelComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(HelperService), i0.ɵɵdirectiveInject(ControllerService));\n  };\n\n  BookmarksPanelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: BookmarksPanelComponent,\n    selectors: [[\"sti-bookmarks-panel\"]],\n    viewQuery: function BookmarksPanelComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c25, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.element = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.bookmarksPanel = _t.first);\n      }\n    },\n    decls: 11,\n    vars: 27,\n    consts: [[\"element\", \"\"], [\"bookmarksPanel\", \"\"], [1, \"stiTree\"], [1, \"stiTreeNode\"], [2, \"width\", \"16px\", \"height\", \"16px\", 3, \"src\"], [1, \"node\"], [1, \"clip\", 2, \"display\", \"block\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [2, \"width\", \"18px\", \"height\", \"18px\", 3, \"src\"], [1, \"clip\"], [\"class\", \"stiTreeNode\", 4, \"ngFor\", \"ngForOf\"]],\n    template: function BookmarksPanelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", null, 0);\n        i0.ɵɵelementStart(2, \"div\", null, 1);\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelement(6, \"img\", 4);\n        i0.ɵɵelementStart(7, \"a\", 5);\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 6);\n        i0.ɵɵtemplate(10, BookmarksPanelComponent_ng_container_10_Template, 9, 8, \"ng-container\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction2(24, _c26, ctx.model.options.toolbar.fontFamily, ctx.helper.val(ctx.model.options.toolbar.fontColor)));\n        i0.ɵɵclassMap(\"stiJsViewerBookmarksPanel\" + (ctx.model.options.toolbar.displayMode == \"Separated\" ? \" stiJsViewerBookmarksPanelSeparated\" : \"\"));\n        i0.ɵɵstyleProp(\"width\", ctx.model.options.appearance.bookmarksTreeWidth - (ctx.model.options.toolbar.displayMode == \"Simple\" ? 0 : 1), \"px\")(\"bottom\", ctx.bottom)(\"top\", ctx.model.controls.bookmarksPanel.layout.top, \"px\")(\"transition\", ctx.model.options.isMobileDevice ? \"opacity 300ms ease\" : null)(\"display\", !ctx.model.options.isMobileDevice ? ctx.model.controls.bookmarksPanel.visible ? \"\" : \"none\" : null);\n        i0.ɵɵproperty(\"@visibility\", !ctx.model.options.isMobileDevice ? null : ctx.model.controls.bookmarksPanel.visible ? \"visible\" : \"hidden\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassMap(\"stiJsViewerBookmarksContainer\" + (ctx.model.options.toolbar.displayMode == \"Simple\" ? \" stiJsViewerBookmarksContainerSimple\" : \"\"));\n        i0.ɵɵstyleProp(\"background\", ctx.helper.val(ctx.model.options.toolbar.backgroundColor))(\"border\", ctx.helper.val(ctx.model.options.toolbar.borderColor) != \"\" ? \"1px solid \" + ctx.helper.val(ctx.model.options.toolbar.borderColor) : \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"src\", ctx.model.imagesForBookmark[\"root\"], i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.rootName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.model.nodes);\n      }\n    },\n    directives: [i7.NgForOf],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('visibility', [state('visible', style({\n        opacity: 1,\n        display: 'block'\n      })), state('hidden', style({\n        opacity: 0,\n        display: 'none'\n      })), transition('hidden => visible', [animate('300ms ease-in-out', keyframes([style({\n        display: 'block',\n        opacity: 0,\n        offset: 0\n      }), style({\n        display: 'block',\n        opacity: 1,\n        offset: 1\n      })]))]), transition('visible => hidden', [animate('300ms ease-in-out', keyframes([style({\n        display: 'block',\n        opacity: 1,\n        offset: 0\n      }), style({\n        display: 'none',\n        opacity: 0,\n        offset: 1\n      })]))])])]\n    }\n  });\n  return BookmarksPanelComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ParameterComponent = /*#__PURE__*/(() => {\n  class ParameterComponent {\n    constructor(model, helper, menuService, intearctionService) {\n      this.model = model;\n      this.helper = helper;\n      this.menuService = menuService;\n      this.intearctionService = intearctionService;\n    }\n\n    ngOnInit() {}\n\n    get params() {\n      return this._params;\n    }\n\n    set params(params) {\n      this._params = params;\n\n      if (params.basicType === 'Range') {\n        if (params.type === 'DateTime' && params.keyTo && params.keyTo.isNull) {\n          params.keyTo = this.helper.getDateTimeObject(new Date());\n        }\n      }\n    }\n\n    get showParameterInTwoRows() {\n      return this.params.basicType === 'Range' && this.model.options.appearance.parametersPanelPosition === 'Left';\n    }\n\n    getReadOnlyCheckbox() {\n      return this.params.basicType === 'List' || !this.params.allowUserValues;\n    }\n\n    getFirstTextBoxValue() {\n      let value = '';\n\n      if (this.params.basicType === 'Value' || this.params.basicType === 'NullableValue') {\n        if (this.params.type === 'DateTime' && this.params.value === null) {\n          this.params.value = new Date();\n          this.params.key = this.helper.getDateTimeObject(this.params.value);\n        }\n\n        value = this.params.type === 'DateTime' ? this.helper.getStringKey(this.params.key, this.params) : this.params.allowUserValues ? this.params.key : this.params.value != \"\" || !this.params.isChanged ? this.params.value : this.params.key;\n      } // Range\n\n\n      if (this.params.basicType === 'Range') {\n        if (this.params.type === 'DateTime' && this.params.key && this.params.key.isNull) {\n          this.params.key = this.helper.getDateTimeObject(new Date());\n        }\n\n        value = this.helper.getStringKey(this.params.key, this.params);\n      } // List\n\n\n      if (this.params.basicType === 'List' && this.params.items) {\n        this.params.items.forEach(item => {\n          if (item.isChecked) {\n            if (value !== '') {\n              value += this.model.options.listSeparator ? this.model.options.listSeparator + \" \" : \"; \";\n            }\n\n            if (this.params.allowUserValues) {\n              value += this.helper.getStringKey(item.key, this.params);\n            } else {\n              value += item.value !== '' ? item.value : this.helper.getStringKey(item.key, this.params);\n            }\n          }\n        });\n      }\n\n      return value != null ? value.toString() : value;\n    }\n\n    nullableAction(checked) {\n      this.params.isNull = !this.params.isNull;\n    }\n\n    firstGuidAction() {\n      if (this.params.basicType === 'Range') {\n        this.params.key = this.helper.newGuid();\n      } else {\n        this.params.value = this.helper.newGuid();\n      }\n    }\n\n    doubleDateTimeAction(event) {\n      this.menuService.addMenu({\n        type: 'doubleDatePickerMenu',\n        name: 'doubleDatePickerMenu',\n        items: [],\n        parent: this.rangeFrom,\n        params: this.params,\n        state: ''\n      });\n      setTimeout(() => {\n        this.menuService.showMenu('doubleDatePickerMenu');\n      });\n    }\n\n    firstDateTimeAction(event) {\n      this.menuService.addMenu({\n        type: 'datePickerMenu',\n        name: 'datePickerMenu',\n        items: [],\n        parent: this.firstDateTimeButton,\n        params: this.params,\n        state: ''\n      });\n      setTimeout(() => {\n        this.menuService.showMenu('datePickerMenu');\n      });\n    }\n\n    dropDownButtonAction(event) {\n      let menuType = 'parameterMenuForValue';\n\n      switch (this.params.basicType) {\n        case 'Range':\n          menuType = 'parameterMenuForRange';\n          break;\n\n        case 'List':\n          menuType = this.params.allowUserValues ? 'parameterMenuForEditList' : 'parameterMenuForNotEditList';\n          break;\n      }\n\n      if (this.params.items) {\n        this.params.items.forEach(i => i.visible = true);\n      }\n\n      let this_ = this;\n      this.menuService.addMenu({\n        type: menuType,\n        name: 'parameterMenu',\n        items: [],\n        parent: this.element,\n        params: this.params,\n        state: '',\n        onCloseEvent: () => {\n          this_.onCloseMenuEvent();\n        }\n      });\n      setTimeout(() => {\n        this.menuService.showMenu('parameterMenu');\n      });\n    }\n\n    onCloseMenuEvent() {\n      if (this.params.binding) {\n        if (!this.model.options.paramsVariablesStartValues) {\n          this.model.options.paramsVariablesStartValues = this.helper.copyObject(this.model.options.paramsVariables);\n        }\n\n        this.intearctionService.postInteraction({\n          action: 'InitVars',\n          variables: this.intearctionService.getParametersValues(),\n          isBindingVariable: true\n        });\n      }\n    }\n\n  }\n\n  ParameterComponent.ɵfac = function ParameterComponent_Factory(t) {\n    return new (t || ParameterComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(HelperService), i0.ɵɵdirectiveInject(MenuService), i0.ɵɵdirectiveInject(InteractionsService));\n  };\n\n  ParameterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ParameterComponent,\n    selectors: [[\"sti-parameter\"]],\n    viewQuery: function ParameterComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c27, 5);\n        i0.ɵɵviewQuery(_c28, 5);\n        i0.ɵɵviewQuery(_c29, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.element = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.firstDateTimeButton = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.doubleDateTimeButton = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.rangeFrom = _t.first);\n      }\n    },\n    inputs: {\n      params: \"params\"\n    },\n    decls: 18,\n    vars: 13,\n    consts: [[\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\"], [\"element\", \"\", \"rangeFrom\", \"\"], [1, \"stiJsViewerClearAllStyles\"], [\"style\", \"padding: 0px 2px;\", 3, \"height\", 4, \"ngIf\"], [\"style\", \"padding: 0px\", 3, \"height\", 4, \"ngIf\"], [4, \"ngIf\"], [2, \"padding\", \"0px 2px\"], [3, \"params\", \"isEnabled\", \"action\"], [3, \"variable\", \"readOnly\", \"value\"], [\"firstDateTimeButton\", \"\"], [3, \"buttonType\", \"params\", \"action\"], [3, \"variable\", \"readOnly\", \"value\", \"secondTextBox\"], [\"doubleDateTimeButton\", \"\"], [3, \"params\", \"isEnabled\", \"nullable\", \"action\"], [2, \"padding\", \"0px\"]],\n    template: function ParameterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0, 1);\n        i0.ɵɵelementStart(3, \"tbody\");\n        i0.ɵɵelementStart(4, \"tr\", 2);\n        i0.ɵɵtemplate(5, ParameterComponent_td_5_Template, 2, 4, \"td\", 3);\n        i0.ɵɵtemplate(6, ParameterComponent_td_6_Template, 2, 3, \"td\", 3);\n        i0.ɵɵtemplate(7, ParameterComponent_td_7_Template, 2, 5, \"td\", 3);\n        i0.ɵɵtemplate(8, ParameterComponent_td_8_Template, 3, 4, \"td\", 3);\n        i0.ɵɵtemplate(9, ParameterComponent_td_9_Template, 2, 4, \"td\", 3);\n        i0.ɵɵtemplate(10, ParameterComponent_td_10_Template, 2, 3, \"td\", 3);\n        i0.ɵɵtemplate(11, ParameterComponent_td_11_Template, 2, 6, \"td\", 3);\n        i0.ɵɵtemplate(12, ParameterComponent_td_12_Template, 3, 4, \"td\", 3);\n        i0.ɵɵtemplate(13, ParameterComponent_td_13_Template, 2, 4, \"td\", 3);\n        i0.ɵɵtemplate(14, ParameterComponent_td_14_Template, 2, 4, \"td\", 3);\n        i0.ɵɵtemplate(15, ParameterComponent_td_15_Template, 2, 5, \"td\", 3);\n        i0.ɵɵtemplate(16, ParameterComponent_td_16_Template, 2, 3, \"td\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, ParameterComponent_tr_17_Template, 8, 7, \"tr\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.params.type == \"Bool\" && (ctx.params.basicType == \"Value\" || ctx.params.basicType == \"NullableValue\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.params.basicType == \"Range\" && ctx.model.options.appearance.parametersPanelPosition === \"Top\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.params.type != \"Bool\" || ctx.params.basicType == \"List\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.params.type == \"DateTime\" && ctx.params.allowUserValues && ctx.params.basicType != \"List\" && ctx.params.basicType != \"Range\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.params.type == \"Guid\" && ctx.params.allowUserValues && ctx.params.basicType != \"List\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.showParameterInTwoRows && ctx.params.basicType == \"Range\" && ctx.model.options.appearance.parametersPanelPosition === \"Top\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.showParameterInTwoRows && ctx.params.basicType == \"Range\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.showParameterInTwoRows && ctx.params.basicType == \"Range\" && ctx.params.type == \"DateTime\" && ctx.params.allowUserValues);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.showParameterInTwoRows && ctx.params.basicType == \"Range\" && ctx.params.type == \"Guid\" && ctx.params.allowUserValues);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.showParameterInTwoRows && ctx.params.items != null || ctx.params.basicType == \"List\" && ctx.params.allowUserValues);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.showParameterInTwoRows && ctx.params.basicType == \"NullableValue\" && ctx.params.allowUserValues);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.showParameterInTwoRows && ctx.params.basicType == \"NullableValue\" && ctx.params.allowUserValues);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showParameterInTwoRows);\n      }\n    },\n    directives: [i7.NgIf, ParameterCheckboxComponent, ParameterTextBoxComponent, ParameterButtonComponent],\n    encapsulation: 2\n  });\n  return ParameterComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet InteractionsPanelComponent = /*#__PURE__*/(() => {\n  class InteractionsPanelComponent {\n    constructor(model, helper, interactionService, menuService, controller) {\n      this.model = model;\n      this.helper = helper;\n      this.interactionService = interactionService;\n      this.menuService = menuService;\n      this.controller = controller;\n      this.currentOpeningParameter = null;\n      this.dropDownButtonWasClicked = false;\n      this.dateTimeButtonWasClicked = false;\n    }\n\n    ngAfterViewInit() {\n      this.model.controls.parametersPanel.el = this.element;\n    }\n\n    ngOnInit() {}\n\n    getNameAlign(indexRow, indexColumn) {\n      const index = this.index(indexRow, indexColumn);\n\n      if (index < this.length() && this.model.interactions.paramsVariables[index].basicType === 'Range' && this.model.options.appearance.parametersPanelPosition === 'Left') {\n        return 'top';\n      }\n\n      return '';\n    }\n\n    getNamePadding(indexRow, indexColumn) {\n      const index = this.index(indexRow, indexColumn);\n\n      if (index < this.length() && this.model.interactions.paramsVariables[index].basicType === 'Range' && this.model.options.appearance.parametersPanelPosition === 'Left') {\n        return this.model.options.isTouchDevice ? '11px' : '9px';\n      }\n\n      return '';\n    }\n\n    getCaption(indexRow, indexColumn, checkLeft = true) {\n      const index = this.index(indexRow, indexColumn);\n\n      if (checkLeft && this.ifLeftRange(indexRow, indexColumn)) {\n        return '';\n      }\n\n      return index < this.length() ? this.model.interactions.paramsVariables[index].alias : '';\n    }\n\n    ifLeftRange(indexRow, indexColumn) {\n      const index = this.index(indexRow, indexColumn);\n      return this.model.interactions.paramsVariables[index].basicType === 'Range' && this.model.options.appearance.parametersPanelPosition === 'Left';\n    }\n\n    getTitle(indexRow, indexColumn) {\n      const index = this.index(indexRow, indexColumn);\n      return index < this.length() ? this.model.interactions.paramsVariables[index].description : '';\n    }\n\n    index(indexRow, indexColumn) {\n      return indexColumn * this.model.interactions.countInColumn.length + indexRow;\n    }\n\n    length() {\n      var _a, _b;\n\n      return ((_a = this.model.interactions) === null || _a === void 0 ? void 0 : _a.paramsVariables) != null ? Object.keys((_b = this.model.interactions) === null || _b === void 0 ? void 0 : _b.paramsVariables).length : 0;\n    }\n\n    get className() {\n      let className = 'stiJsViewerParametersPanel';\n\n      if (this.model.options.appearance.parametersPanelPosition === 'Top') {\n        className += ' stiJsViewerParametersPanelTop';\n\n        if (this.model.options.toolbar.displayMode === 'Separated') {\n          className += ' stiJsViewerParametersPanelSeparatedTop';\n        }\n      }\n\n      return className;\n    }\n\n    get top() {\n      let styleTop = this.model.options.toolbar.visible ? this.model.controls.toolbar.offsetHeight : 0;\n\n      if (this.model.options.isMobileDevice && this.model.options.toolbar.autoHide) {\n        styleTop = 0;\n      }\n\n      styleTop += this.model.controls.drillDownPanel.exists ? this.model.controls.drillDownPanel.offsetHeight : 0;\n      styleTop += this.model.controls.findPanel.exists ? this.model.controls.findPanel.offsetHeight : 0;\n      styleTop += this.model.controls.resourcesPanel.exists ? this.model.controls.resourcesPanel.offsetHeight : 0;\n      return styleTop;\n    }\n\n    get bottom() {\n      if (this.model.options.appearance.parametersPanelPosition === 'Left') {\n        if (this.model.options.isMobileDevice) {\n          return this.model.options.toolbar.autoHide ? '0' : '0.5in';\n        } else {\n          return this.model.options.toolbar.displayMode === 'Separated' && this.model.options.toolbar.visible ? '35px' : '0';\n        }\n      }\n\n      return '';\n    }\n\n    get innerClassName() {\n      let className = this.model.options.toolbar.displayMode === 'Simple' ? 'stiJsViewerInnerParametersPanelSimple' : '';\n\n      if (this.model.options.appearance.parametersPanelPosition === 'Left') {\n        className += ' stiJsViewerInnerParametersPanelLeft';\n\n        if (this.model.options.toolbar.displayMode === 'Separated') {\n          className += ' stiJsViewerInnerParametersPanelSeparatedLeft';\n        }\n      }\n\n      return className;\n    }\n\n  }\n\n  InteractionsPanelComponent.ɵfac = function InteractionsPanelComponent_Factory(t) {\n    return new (t || InteractionsPanelComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(HelperService), i0.ɵɵdirectiveInject(InteractionsService), i0.ɵɵdirectiveInject(MenuService), i0.ɵɵdirectiveInject(ControllerService));\n  };\n\n  InteractionsPanelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: InteractionsPanelComponent,\n    selectors: [[\"sti-interactions-panel\"]],\n    viewQuery: function InteractionsPanelComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.element = _t.first);\n      }\n    },\n    decls: 5,\n    vars: 28,\n    consts: [[\"element\", \"\"], [3, \"scroll\"], [1, \"stiJsViewerInnerContainerParametersPanel\", 3, \"scroll\"], [\"class\", \"stiJsViewerClearAllStyles\", \"cellpadding\", \"0\", \"cellspacing\", \"0\", \"style\", \"border: 0px;\", 4, \"ngIf\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\", 2, \"border\", \"0px\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", \"align\", \"right\", 1, \"stiJsViewerClearAllStyles\", 2, \"margin\", \"5px 2px 10px 0px\"], [1, \"stiJsViewerClearAllStyles\"], [3, \"caption\", \"action\"], [1, \"stiJsViewerClearAllStyles\", 2, \"padding-left\", \"10px\"], [\"class\", \"stiJsViewerClearAllStyles\", \"cellpadding\", \"0\", \"cellspacing\", \"0\", \"style\", \"height: 60px;\", 4, \"ngIf\"], [3, \"params\", 4, \"ngIf\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 1, \"stiJsViewerClearAllStyles\", 2, \"height\", \"60px\"], [\"rowspan\", \"2\", 1, \"stiJsViewerClearAllStyles\", 2, \"vertical-align\", \"top\", \"padding-top\", \"9px\"], [1, \"stiJsViewerClearAllStyles\", 2, \"padding-left\", \"12px\"], [3, \"params\"]],\n    template: function InteractionsPanelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", null, 0);\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵlistener(\"scroll\", function InteractionsPanelComponent_Template_div_scroll_2_listener() {\n          return ctx.menuService.closeAllMenus();\n        });\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵlistener(\"scroll\", function InteractionsPanelComponent_Template_div_scroll_3_listener() {\n          return ctx.menuService.closeAllMenus();\n        });\n        i0.ɵɵtemplate(4, InteractionsPanelComponent_table_4_Template, 14, 7, \"table\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.className);\n        i0.ɵɵstyleProp(\"display\", !ctx.model.options.isMobileDevice ? ctx.model.controls.parametersPanel.visible ? \"\" : \"none\" : null)(\"font-family\", ctx.model.options.toolbar.fontFamily)(\"color\", ctx.model.options.toolbar.fontColor)(\"top\", ctx.top, \"px\")(\"left\", ctx.model.controls.parametersPanel.layout.left, \"px\")(\"bottom\", ctx.bottom)(\"transition\", ctx.model.options.isMobileDevice ? \"opacity 300ms ease\" : null);\n        i0.ɵɵproperty(\"@visibility\", !ctx.model.options.isMobileDevice ? null : ctx.model.controls.parametersPanel.visible ? \"visible\" : \"hidden\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassMap(ctx.innerClassName);\n        i0.ɵɵstyleProp(\"margin-top\", ctx.model.options.toolbar.displayMode == \"Simple\" ? \"2px\" : \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"background\", ctx.helper.val(ctx.model.options.toolbar.backgroundColor, \"\"))(\"border\", ctx.helper.val(ctx.model.options.toolbar.backgroundColor, \"\") != \"\" ? \"1px solid \" + ctx.helper.val(ctx.model.options.toolbar.backgroundColor, \"\") : \"\")(\"max-height\", ctx.model.options.appearance.parametersPanelPosition == \"Top\" ? ctx.model.options.appearance.parametersPanelMaxHeight + \"px\" : \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.model.interactions);\n      }\n    },\n    directives: [i7.NgIf, i7.NgForOf, FormButtonComponent, ParameterComponent],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('visibility', [state('visible', style({\n        opacity: 1,\n        display: 'block'\n      })), state('hidden', style({\n        opacity: 0,\n        display: 'none'\n      })), transition('hidden => visible', [animate('300ms ease-in-out', keyframes([style({\n        display: 'block',\n        opacity: 0,\n        offset: 0\n      }), style({\n        display: 'block',\n        opacity: 1,\n        offset: 1\n      })]))]), transition('visible => hidden', [animate('300ms ease-in-out', keyframes([style({\n        display: 'block',\n        opacity: 1,\n        offset: 0\n      }), style({\n        display: 'none',\n        opacity: 0,\n        offset: 1\n      })]))])])]\n    }\n  });\n  return InteractionsPanelComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet OpenDialogComponent = /*#__PURE__*/(() => {\n  class OpenDialogComponent {\n    constructor(model, controller) {\n      this.model = model;\n      this.controller = controller;\n    }\n\n    ngOnChanges(changes) {\n      if (this.fileMask != null && this.model.openDialogFileMask != null) {\n        setTimeout(() => {\n          this.element.nativeElement.focus();\n          this.element.nativeElement.click();\n        });\n      }\n    }\n\n    ngOnInit() {}\n\n    onchange(event) {\n      const files = event.target.files;\n      const fileName = files[0] ? files[0].name : 'Report';\n      const filePath = event.target.value;\n      const reader = new FileReader();\n\n      reader.onload = e => {\n        this.controller.loadFile(fileName, e.target.result);\n      };\n\n      this.model.openDialogFileMask = null;\n      reader.readAsDataURL(files[0]);\n    }\n\n  }\n\n  OpenDialogComponent.ɵfac = function OpenDialogComponent_Factory(t) {\n    return new (t || OpenDialogComponent)(i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(ControllerService));\n  };\n\n  OpenDialogComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: OpenDialogComponent,\n    selectors: [[\"sti-open-dialog\"]],\n    viewQuery: function OpenDialogComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.element = _t.first);\n      }\n    },\n    inputs: {\n      fileMask: \"fileMask\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[\"type\", \"file\", \"name\", \"files[]\", \"multiple\", \"\", \"style\", \"display: none;\", 3, \"change\", 4, \"ngIf\"], [\"type\", \"file\", \"name\", \"files[]\", \"multiple\", \"\", 2, \"display\", \"none\", 3, \"change\"], [\"element\", \"\"]],\n    template: function OpenDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, OpenDialogComponent_input_0_Template, 2, 1, \"input\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.model.openDialogFileMask != null);\n      }\n    },\n    directives: [i7.NgIf],\n    encapsulation: 2\n  });\n  return OpenDialogComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})(); //1bfb351c1add27b1537ffce9c723e3cb1f5b27bb 02.03.2021 17:29:20\n\n\nlet StimulsoftViewerComponent = /*#__PURE__*/(() => {\n  class StimulsoftViewerComponent {\n    constructor(controller, menuService, model, exportService, formService, api, printService, dashboardService) {\n      this.controller = controller;\n      this.menuService = menuService;\n      this.model = model;\n      this.exportService = exportService;\n      this.formService = formService;\n      this.api = api;\n      this.printService = printService;\n      this.dashboardService = dashboardService;\n      /**\r\n       * Occurs when report/dashboard loaded\r\n       */\n\n      this.loaded = new EventEmitter();\n      /**\r\n       * Occurs on error, $event is ErrorMessage object contains error: string & type: any  (if present)\r\n       */\n\n      this.error = new EventEmitter();\n      /**\r\n       * Occurs on export, $event object contains exportFormat: string & exportSettings: {}\r\n       */\n\n      this.export = new EventEmitter();\n      /**\r\n       * Occurs on export & email, $event object contains exportFormat: string & exportSettings: {}\r\n       */\n\n      this.email = new EventEmitter();\n      /**\r\n       * Occurs on export & email, $event object contains format: string : 'PrintPdf' or 'PrintWithoutPreview' or 'PrintWithPreview'\r\n       */\n\n      this.print = new EventEmitter();\n      /**\r\n       * Occurs on pressing 'Design' button\r\n       */\n\n      this.design = new EventEmitter();\n      /**\r\n       * Viewer background color\r\n       */\n\n      this.backgroundColor = 'White';\n      this.initialized = false;\n      this.viewInit = false;\n\n      window.onresize = () => this.resize();\n\n      this.initEvents();\n    }\n\n    ngOnChanges(changes) {\n      this.loadViewer();\n    }\n\n    ngOnInit() {\n      this.model.postParametersFunction = this.postParametersFunction;\n      this.controller.getMessage().subscribe(message => {\n        switch (message.action) {\n          case 'viewer_loaded':\n            this.initialized = true;\n            break;\n        }\n      });\n    }\n\n    ngAfterViewInit() {\n      this.viewInit = true;\n      this.loadViewer();\n    }\n\n    initEvents() {\n      this.controller.getMessage().subscribe(message => {\n        switch (message.action) {\n          case 'GetReport':\n          case 'OpenReport':\n            setTimeout(() => {\n              this.loaded.next(null);\n            });\n            break;\n        }\n      });\n      this.controller.getActionMessage().subscribe(message => {\n        switch (message.action) {\n          case 'Error':\n            setTimeout(() => {\n              this.error.next(this.model.errorMessage);\n            });\n            break;\n\n          case 'ExportReport':\n            setTimeout(() => {\n              this.export.next(message.data);\n            });\n            break;\n\n          case 'Email':\n            setTimeout(() => {\n              this.email.next(message.data);\n            });\n            break;\n\n          case 'Print':\n            setTimeout(() => {\n              this.print.next(message.data);\n            });\n            break;\n\n          case 'Design':\n            setTimeout(() => {\n              this.design.next(null);\n            });\n            break;\n        }\n      });\n    }\n\n    loadViewer() {\n      if (this.viewInit) {\n        this.model.requestUrl = this.requestUrl;\n        this.model.action = this.action;\n        this.model.properties = this.properties;\n        this.controller.loadViewer();\n        this.resize();\n        this.model.controls.viewer.el = this.viewerElement;\n      }\n    }\n\n    resize() {\n      var _a;\n\n      if ((_a = this.viewerElement) === null || _a === void 0 ? void 0 : _a.nativeElement) {\n        this.model.viewerSize = {\n          width: this.viewerElement.nativeElement.offsetWidth,\n          height: this.viewerElement.nativeElement.offsetHeight\n        };\n        this.controller.viewerResized();\n      }\n    }\n\n  }\n\n  StimulsoftViewerComponent.ɵfac = function StimulsoftViewerComponent_Factory(t) {\n    return new (t || StimulsoftViewerComponent)(i0.ɵɵdirectiveInject(ControllerService), i0.ɵɵdirectiveInject(MenuService), i0.ɵɵdirectiveInject(ModelService), i0.ɵɵdirectiveInject(ExportService), i0.ɵɵdirectiveInject(FormService), i0.ɵɵdirectiveInject(ApiService), i0.ɵɵdirectiveInject(PrintService), i0.ɵɵdirectiveInject(DashboardService));\n  };\n\n  StimulsoftViewerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StimulsoftViewerComponent,\n    selectors: [[\"stimulsoft-viewer-angular\"]],\n    viewQuery: function StimulsoftViewerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c30, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.viewerElement = _t.first);\n      }\n    },\n    inputs: {\n      requestUrl: \"requestUrl\",\n      action: \"action\",\n      properties: \"properties\",\n      width: \"width\",\n      height: \"height\",\n      backgroundColor: \"backgroundColor\",\n      style: \"style\",\n      postParametersFunction: \"postParametersFunction\"\n    },\n    outputs: {\n      loaded: \"loaded\",\n      error: \"error\",\n      export: \"export\",\n      email: \"email\",\n      print: \"print\",\n      design: \"design\"\n    },\n    features: [i0.ɵɵProvidersFeature([ModelService, StiHttpClientService, ControllerService, StylesService, HelperService, MenuService, MouseService, PageService, TooltipService, FindService, AnimationService, Md5Service, InteractionsService, FormService, RadioButtonService, ExportService, CollectionsService, MailService, EditableFieldsService, DrillDownService, PrintService, FullScreenService, ToolbarService, ApiService, DashboardService]), i0.ɵɵNgOnChangesFeature],\n    decls: 24,\n    vars: 40,\n    consts: [[\"viewer\", \"\"], [1, \"stiJsViewerMainPanel\"], [4, \"ngIf\"], [\"class\", \"stiJsViewerDisabledPanel\", 3, \"zIndex\", \"display\", 4, \"ngFor\", \"ngForOf\"], [3, \"exportFormSettings\", 4, \"ngIf\"], [3, \"menu\", 4, \"ngFor\", \"ngForOf\"], [3, \"fileMask\", 4, \"ngIf\"], [1, \"stiJsViewerDisabledPanel\"], [3, \"exportFormSettings\"], [3, \"menu\"], [3, \"fileMask\"]],\n    template: function StimulsoftViewerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"span\", null, 0);\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵtemplate(3, StimulsoftViewerComponent_sti_center_text_3_Template, 1, 0, \"sti-center-text\", 2);\n        i0.ɵɵtemplate(4, StimulsoftViewerComponent_sti_toolbar_4_Template, 1, 0, \"sti-toolbar\", 2);\n        i0.ɵɵtemplate(5, StimulsoftViewerComponent_div_5_Template, 1, 4, \"div\", 3);\n        i0.ɵɵtemplate(6, StimulsoftViewerComponent_sti_about_panel_6_Template, 1, 0, \"sti-about-panel\", 2);\n        i0.ɵɵtemplate(7, StimulsoftViewerComponent_sti_dashboards_panel_7_Template, 1, 0, \"sti-dashboards-panel\", 2);\n        i0.ɵɵtemplate(8, StimulsoftViewerComponent_sti_report_panel_8_Template, 1, 0, \"sti-report-panel\", 2);\n        i0.ɵɵtemplate(9, StimulsoftViewerComponent_sti_progress_9_Template, 1, 0, \"sti-progress\", 2);\n        i0.ɵɵtemplate(10, StimulsoftViewerComponent_sti_find_panel_10_Template, 1, 0, \"sti-find-panel\", 2);\n        i0.ɵɵtemplate(11, StimulsoftViewerComponent_sti_drill_down_panel_11_Template, 1, 0, \"sti-drill-down-panel\", 2);\n        i0.ɵɵtemplate(12, StimulsoftViewerComponent_sti_resources_panel_12_Template, 1, 0, \"sti-resources-panel\", 2);\n        i0.ɵɵtemplate(13, StimulsoftViewerComponent_sti_navigate_panel_13_Template, 1, 0, \"sti-navigate-panel\", 2);\n        i0.ɵɵtemplate(14, StimulsoftViewerComponent_sti_export_form_14_Template, 1, 1, \"sti-export-form\", 4);\n        i0.ɵɵtemplate(15, StimulsoftViewerComponent_sti_send_email_form_15_Template, 1, 0, \"sti-send-email-form\", 2);\n        i0.ɵɵtemplate(16, StimulsoftViewerComponent_sti_password_form_16_Template, 1, 0, \"sti-password-form\", 2);\n        i0.ɵɵtemplate(17, StimulsoftViewerComponent_sti_error_message_form_17_Template, 1, 0, \"sti-error-message-form\", 2);\n        i0.ɵɵtemplate(18, StimulsoftViewerComponent_sti_notification_form_18_Template, 1, 0, \"sti-notification-form\", 2);\n        i0.ɵɵtemplate(19, StimulsoftViewerComponent_sti_tooltip_19_Template, 1, 0, \"sti-tooltip\", 2);\n        i0.ɵɵtemplate(20, StimulsoftViewerComponent_sti_menu_20_Template, 1, 1, \"sti-menu\", 5);\n        i0.ɵɵtemplate(21, StimulsoftViewerComponent_sti_bookmarks_panel_21_Template, 1, 0, \"sti-bookmarks-panel\", 2);\n        i0.ɵɵtemplate(22, StimulsoftViewerComponent_sti_interactions_panel_22_Template, 1, 0, \"sti-interactions-panel\", 2);\n        i0.ɵɵtemplate(23, StimulsoftViewerComponent_sti_open_dialog_23_Template, 1, 1, \"sti-open-dialog\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵstyleMap(ctx.style);\n        i0.ɵɵstyleProp(\"top\", 0, \"px\")(\"right\", 0, \"px\")(\"bottom\", 0, \"px\")(\"left\", 0, \"px\")(\"display\", \"inline-block\")(\"background-color\", ctx.backgroundColor)(\"width\", ctx.width != null ? ctx.width : \"100%\")(\"height\", ctx.height != null ? ctx.height : (ctx.model.options == null ? null : ctx.model.options.appearance.scrollbarsMode) ? \"650px\" : \"100%\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.initialized);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.initialized);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(39, _c31));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.initialized);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.initialized);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.initialized);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.initialized);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.initialized);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.initialized);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.initialized);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.initialized);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.initialized);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.initialized);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.initialized);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.initialized);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.initialized);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.initialized);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.menuService.menus);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.initialized);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.initialized);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.initialized);\n      }\n    },\n    directives: [i7.NgIf, i7.NgForOf, CenterTextComponent, ToolbarComponent, AboutPanelComponent, DashboardsPanelComponent, ReportPanelComponent, ProgressComponent, FindPanelComponent, DrillDownPanelComponent, ResourcesPanelComponent, NavigatePanelComponent, ExportFormComponent, SendEmailFormComponent, PasswordFormComponent, ErrorMessageFormComponent, NotificationFormComponent, TooltipComponent, MenuComponent, BookmarksPanelComponent, InteractionsPanelComponent, OpenDialogComponent],\n    encapsulation: 2\n  });\n  return StimulsoftViewerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet StimulsoftViewerModule = /*#__PURE__*/(() => {\n  class StimulsoftViewerModule {}\n\n  StimulsoftViewerModule.ɵfac = function StimulsoftViewerModule_Factory(t) {\n    return new (t || StimulsoftViewerModule)();\n  };\n\n  StimulsoftViewerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: StimulsoftViewerModule\n  });\n  StimulsoftViewerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [],\n    imports: [[CommonModule]]\n  });\n  return StimulsoftViewerModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\r\n * Public API Surface of stimulsoft-viewer-angular\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { StimulsoftViewerComponent, StimulsoftViewerModule }; //# sourceMappingURL=stimulsoft-viewer-angular.mjs.map","map":null,"metadata":{},"sourceType":"module"}